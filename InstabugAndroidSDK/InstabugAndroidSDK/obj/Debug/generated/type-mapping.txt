com/instabug/library/_InstabugActivity = Com.Instabug.Library.I_InstabugActivity
com/instabug/library/bugreporting/model/ReportCategory = Com.Instabug.Library.Bugreporting.Model.ReportCategory
  getIcon()I = Icon
  setIcon(I)V = Icon
  getInstance()Lcom/instabug/library/bugreporting/model/ReportCategory; = Instance
  getLabel()Ljava/lang/String; = Label
  setLabel(Ljava/lang/String;)V = Label
  withIcon(I)Lcom/instabug/library/bugreporting/model/ReportCategory; = WithIcon(int)
  withLabel(Ljava/lang/String;)Lcom/instabug/library/bugreporting/model/ReportCategory; = WithLabel(string)
com/instabug/library/BuildConfig = Com.Instabug.Library.BuildConfig
  <init>()V = .ctor()
  APPLICATION_ID = ApplicationId
  BUILD_TYPE = BuildType
  DEBUG = Debug
  FLAVOR = Flavor
  SDK_VERSION = SdkVersion
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
com/instabug/library/Feature = Com.Instabug.Library.Feature
  CONSOLE_LOGS = ConsoleLogs
  CRASH_REPORTING = CrashReporting
  IN_APP_MESSAGING = InAppMessaging
  INSTABUG = Instabug
  INSTABUG_LOGS = InstabugLogs
  MULTIPLE_ATTACHMENTS = MultipleAttachments
  PUSH_NOTIFICATION = PushNotification
  SURVEYS = Surveys
  TRACK_USER_STEPS = TrackUserSteps
  USER_DATA = UserData
  USER_EVENTS = UserEvents
  VIEW_HIERARCHY = ViewHierarchy
  WHITE_LABELING = WhiteLabeling
  valueOf(Ljava/lang/String;)Lcom/instabug/library/Feature; = ValueOf(string)
  values()[Lcom/instabug/library/Feature; = Values()
com/instabug/library/FragmentVisibilityChangedListener = Com.Instabug.Library.IFragmentVisibilityChangedListener
  onVisibilityChanged(Z)V = OnVisibilityChanged(bool)
com/instabug/library/IBGColorTheme = Com.Instabug.Library.IBGColorTheme
  IBGColorThemeDark = IBGColorThemeDark
  IBGColorThemeLight = IBGColorThemeLight
  theme = Theme
  valueOf(Ljava/lang/String;)Lcom/instabug/library/IBGColorTheme; = ValueOf(string)
  values()[Lcom/instabug/library/IBGColorTheme; = Values()
com/instabug/library/IBGCustomTextPlaceHolder = Com.Instabug.Library.IBGCustomTextPlaceHolder
  <init>()V = .ctor()
  getConvertedHashMap()Ljava/util/HashMap; = ConvertedHashMap
  get(Lcom/instabug/library/IBGCustomTextPlaceHolder$Key;)Ljava/lang/String; = Get(Com.Instabug.Library.IBGCustomTextPlaceHolder.Key)
  set(Lcom/instabug/library/IBGCustomTextPlaceHolder$Key;Ljava/lang/String;)V = Set(Com.Instabug.Library.IBGCustomTextPlaceHolder.Key, string)
com/instabug/library/IBGFloatingButtonEdge = Com.Instabug.Library.IBGFloatingButtonEdge
  Left = Left
  Right = Right
  valueOf(Ljava/lang/String;)Lcom/instabug/library/IBGFloatingButtonEdge; = ValueOf(string)
  values()[Lcom/instabug/library/IBGFloatingButtonEdge; = Values()
com/instabug/library/IBGInvocationEvent = Com.Instabug.Library.IBGInvocationEvent
  IBGInvocationEventFloatingButton = IBGInvocationEventFloatingButton
  IBGInvocationEventNone = IBGInvocationEventNone
  IBGInvocationEventShake = IBGInvocationEventShake
  IBGInvocationEventTwoFingersSwipeLeft = IBGInvocationEventTwoFingersSwipeLeft
  IBGInvocationScreenshotGesture = IBGInvocationScreenshotGesture
  valueOf(Ljava/lang/String;)Lcom/instabug/library/IBGInvocationEvent; = ValueOf(string)
  values()[Lcom/instabug/library/IBGInvocationEvent; = Values()
com/instabug/library/IBGInvocationMode = Com.Instabug.Library.IBGInvocationMode
  IBGInvocationModeBugReporter = IBGInvocationModeBugReporter
  IBGInvocationModeFeedbackSender = IBGInvocationModeFeedbackSender
  IBGInvocationModeNA = IBGInvocationModeNA
  valueOf(Ljava/lang/String;)Lcom/instabug/library/IBGInvocationMode; = ValueOf(string)
  values()[Lcom/instabug/library/IBGInvocationMode; = Values()
com/instabug/library/Instabug = Com.Instabug.Library.Instabug
  getAllUserAttributes()Ljava/util/HashMap; = AllUserAttributes
  getApplication()Landroid/app/Application; = Application
  getAppToken()Ljava/lang/String; = AppToken
  getColorTheme()Lcom/instabug/library/IBGColorTheme; = ColorTheme
  getInstabugState()Lcom/instabug/library/InstabugState; = InstabugState
  setInstabugState(Lcom/instabug/library/InstabugState;)V = InstabugState
  isCommentFieldRequired()Z = IsCommentFieldRequired
  isEnabled()Z = IsEnabled
  isSDKInvoked()Z = IsSDKInvoked
  getPrimaryColor()I = PrimaryColor
  setPrimaryColor(I)V = PrimaryColor
  getTags()Ljava/util/ArrayList; = Tags
  getTheme()Lcom/instabug/library/InstabugColorTheme; = Theme
  getUnreadMessagesCount()I = UnreadMessagesCount
  getUserData()Ljava/lang/String; = UserData
  setUserData(Ljava/lang/String;)V = UserData
  getUserEmail()Ljava/lang/String; = UserEmail
  setUserEmail(Ljava/lang/String;)V = UserEmail
  getUsername()Ljava/lang/String; = Username
  setUsername(Ljava/lang/String;)V = Username
  addCapturableView(Lcom/instabug/library/internal/layer/CapturableView;)V = AddCapturableView(Com.Instabug.Library.Internal.Layer.ICapturableView)
  addFileAttachment(Landroid/net/Uri;Ljava/lang/String;)V = AddFileAttachment(Android.Net.Uri, string)
  addMapView(Landroid/view/View;Ljava/lang/Object;)V = AddMapView(Android.Views.View, Java.Lang.Object)
  addTags([Ljava/lang/String;)V = AddTags(params string[])
  changeInvocationEvent(Lcom/instabug/library/IBGInvocationEvent;)V = ChangeInvocationEvent(Com.Instabug.Library.IBGInvocationEvent)
  changeInvocationEvent(Lcom/instabug/library/invocation/InstabugInvocationEvent;)V = ChangeInvocationEvent(Com.Instabug.Library.Invocation.InstabugInvocationEvent)
  changeLocale(Ljava/util/Locale;)V = ChangeLocale(Java.Util.Locale)
  clearAllUserAttributes()V = ClearAllUserAttributes()
  clearFileAttachment()V = ClearFileAttachment()
  clearLog()V = ClearLog()
  disable()V = Disable()
  dismiss()V = Dismiss()
  enable()V = Enable()
  getLocale(Landroid/content/Context;)Ljava/util/Locale; = GetLocale(Android.Content.Context)
  getUserAttribute(Ljava/lang/String;)Ljava/lang/String; = GetUserAttribute(string)
  identifyUser(Ljava/lang/String;Ljava/lang/String;)V = IdentifyUser(string, string)
  invoke()V = Invoke()
  invoke(Lcom/instabug/library/IBGInvocationMode;)V = Invoke(Com.Instabug.Library.IBGInvocationMode)
  invoke(Lcom/instabug/library/invocation/InstabugInvocationMode;)V = Invoke(Com.Instabug.Library.Invocation.InstabugInvocationMode)
  invokeConversations()V = InvokeConversations()
  isInstabugNotification(Landroid/os/Bundle;)Z = IsInstabugNotification(Android.OS.Bundle)
  isInstabugNotification(Ljava/util/Map;)Z = IsInstabugNotification(System.Collections.Generic.IDictionary<string, string>)
  log(Ljava/lang/String;)V = Log(string)
  logoutUser()V = LogoutUser()
  logUserEvent(Ljava/lang/String;[Lcom/instabug/library/user/UserEventParam;)V = LogUserEvent(string, params Com.Instabug.Library.User.UserEventParam[])
  removeUserAttribute(Ljava/lang/String;)V = RemoveUserAttribute(string)
  reportException(Ljava/lang/Throwable;)V = ReportException(Java.Lang.Throwable)
  reportException(Ljava/lang/Throwable;Ljava/lang/String;)V = ReportException(Java.Lang.Throwable, string)
  resetTags()V = ResetTags()
  setAttachmentTypesEnabled(ZZZZZ)V = SetAttachmentTypesEnabled(bool, bool, bool, bool, bool)
  setBugCategories(Ljava/util/List;)V = SetBugCategories(System.Collections.Generic.IList<Com.Instabug.Library.Model.BugCategory>)
  setChatNotificationEnabled(Z)V = SetChatNotificationEnabled(bool)
  setCustomTextPlaceHolders(Lcom/instabug/library/IBGCustomTextPlaceHolder;)V = SetCustomTextPlaceHolders(Com.Instabug.Library.IBGCustomTextPlaceHolder)
  setCustomTextPlaceHolders(Lcom/instabug/library/InstabugCustomTextPlaceHolder;)V = SetCustomTextPlaceHolders(Com.Instabug.Library.InstabugCustomTextPlaceHolder)
  setDebugEnabled(Z)V = SetDebugEnabled(bool)
  setDialog(Landroid/app/Dialog;)V = SetDialog(Android.App.Dialog)
  setFileAttachment(Landroid/net/Uri;Ljava/lang/String;)V = SetFileAttachment(Android.Net.Uri, string)
  setGLSurfaceView(Landroid/opengl/GLSurfaceView;)V = SetGLSurfaceView(Android.Opengl.GLSurfaceView)
  setNewMessageHandler(Ljava/lang/Runnable;)V = SetNewMessageHandler(Java.Lang.IRunnable)
  setOnSdkInvokedCallback(Lcom/instabug/library/OnSdkInvokedCallback;)V = SetOnSdkInvokedCallback(Com.Instabug.Library.IOnSdkInvokedCallback)
  setPreSendingRunnable(Ljava/lang/Runnable;)V = SetPreSendingRunnable(Java.Lang.IRunnable)
  setPushNotificationRegistrationToken(Ljava/lang/String;)V = SetPushNotificationRegistrationToken(string)
  setReportCategories(Ljava/util/List;)V = SetReportCategories(System.Collections.Generic.IList<Com.Instabug.Library.Bugreporting.Model.ReportCategory>)
  setShouldAudioRecordingOptionAppear(Z)V = SetShouldAudioRecordingOptionAppear(bool)
  setUserAttribute(Ljava/lang/String;Ljava/lang/String;)V = SetUserAttribute(string, string)
  showIntroMessage()V = ShowIntroMessage()
  showNotification(Landroid/os/Bundle;)V = ShowNotification(Android.OS.Bundle)
  showNotification(Ljava/util/Map;)V = ShowNotification(System.Collections.Generic.IDictionary<string, string>)
com/instabug/library/InstabugColorTheme = Com.Instabug.Library.InstabugColorTheme
  InstabugColorThemeDark = InstabugColorThemeDark
  InstabugColorThemeLight = InstabugColorThemeLight
  valueOf(Ljava/lang/String;)Lcom/instabug/library/InstabugColorTheme; = ValueOf(string)
  values()[Lcom/instabug/library/InstabugColorTheme; = Values()
com/instabug/library/InstabugCustomTextPlaceHolder = Com.Instabug.Library.InstabugCustomTextPlaceHolder
  <init>()V = .ctor()
  get(Lcom/instabug/library/InstabugCustomTextPlaceHolder$Key;)Ljava/lang/String; = Get(Com.Instabug.Library.InstabugCustomTextPlaceHolder.Key)
  set(Lcom/instabug/library/InstabugCustomTextPlaceHolder$Key;Ljava/lang/String;)V = Set(Com.Instabug.Library.InstabugCustomTextPlaceHolder.Key, string)
  setPlaceHoldersMap(Ljava/util/HashMap;)V = SetPlaceHoldersMap(System.Collections.Generic.IDictionary<Com.Instabug.Library.InstabugCustomTextPlaceHolder.Key, string>)
com/instabug/library/InstabugState = Com.Instabug.Library.InstabugState
  DISABLED = Disabled
  ENABLED = Enabled
  IMPORTING_IMAGE_FROM_GALLERY_FOR_CHAT = ImportingImageFromGalleryForChat
  INVOKED = Invoked
  RECORDING_VIDEO = RecordingVideo
  RECORDING_VIDEO_FOR_CHAT = RecordingVideoForChat
  TAKING_SCREENSHOT = TakingScreenshot
  TAKING_SCREENSHOT_FOR_CHAT = TakingScreenshotForChat
  valueOf(Ljava/lang/String;)Lcom/instabug/library/InstabugState; = ValueOf(string)
  values()[Lcom/instabug/library/InstabugState; = Values()
com/instabug/library/InstabugTrackingDelegate = Com.Instabug.Library.InstabugTrackingDelegate
  <init>()V = .ctor()
  notifyActivityCreated(Landroid/app/Activity;)V = NotifyActivityCreated(Android.App.Activity)
  notifyActivityDestroyed(Landroid/app/Activity;)V = NotifyActivityDestroyed(Android.App.Activity)
  notifyActivityGotTouchEvent(Landroid/view/MotionEvent;Landroid/app/Activity;)V = NotifyActivityGotTouchEvent(Android.Views.MotionEvent, Android.App.Activity)
  notifyActivityPaused(Landroid/app/Activity;)V = NotifyActivityPaused(Android.App.Activity)
  notifyActivityResumed(Landroid/app/Activity;)V = NotifyActivityResumed(Android.App.Activity)
  notifyActivityStarted(Landroid/app/Activity;)V = NotifyActivityStarted(Android.App.Activity)
  notifyActivityStopped(Landroid/app/Activity;)V = NotifyActivityStopped(Android.App.Activity)
  notifyApplicationCreated(Landroid/app/Application;)V = NotifyApplicationCreated(Android.App.Application)
  notifyFragmentAttached(Landroid/app/Fragment;Landroid/app/Activity;)V = NotifyFragmentAttached(Android.App.Fragment, Android.App.Activity)
  notifyFragmentAttached(Landroid/support/v4/app/Fragment;Landroid/app/Activity;)V = NotifyFragmentAttached(Android.Support.V4.App.Fragment, Android.App.Activity)
  notifyFragmentDetached(Landroid/app/Activity;Landroid/app/Fragment;)V = NotifyFragmentDetached(Android.App.Activity, Android.App.Fragment)
  notifyFragmentDetached(Landroid/support/v4/app/Fragment;Landroid/app/Activity;)V = NotifyFragmentDetached(Android.Support.V4.App.Fragment, Android.App.Activity)
  notifyFragmentPaused(Landroid/app/Fragment;Landroid/app/Activity;)V = NotifyFragmentPaused(Android.App.Fragment, Android.App.Activity)
  notifyFragmentPaused(Landroid/support/v4/app/Fragment;Landroid/app/Activity;)V = NotifyFragmentPaused(Android.Support.V4.App.Fragment, Android.App.Activity)
  notifyFragmentResumed(Landroid/app/Fragment;Landroid/app/Activity;)V = NotifyFragmentResumed(Android.App.Fragment, Android.App.Activity)
  notifyFragmentResumed(Landroid/support/v4/app/Fragment;Landroid/app/Activity;)V = NotifyFragmentResumed(Android.Support.V4.App.Fragment, Android.App.Activity)
  notifyFragmentStarted(Landroid/app/Fragment;Landroid/app/Activity;)V = NotifyFragmentStarted(Android.App.Fragment, Android.App.Activity)
  notifyFragmentStarted(Landroid/support/v4/app/Fragment;Landroid/app/Activity;)V = NotifyFragmentStarted(Android.Support.V4.App.Fragment, Android.App.Activity)
  notifyFragmentStopped(Landroid/app/Fragment;Landroid/app/Activity;)V = NotifyFragmentStopped(Android.App.Fragment, Android.App.Activity)
  notifyFragmentStopped(Landroid/support/v4/app/Fragment;Landroid/app/Activity;)V = NotifyFragmentStopped(Android.Support.V4.App.Fragment, Android.App.Activity)
  notifyFragmentViewCreated(Landroid/view/View;Landroid/app/Fragment;Landroid/app/Activity;)V = NotifyFragmentViewCreated(Android.Views.View, Android.App.Fragment, Android.App.Activity)
  notifyFragmentViewCreated(Landroid/view/View;Landroid/support/v4/app/Fragment;Landroid/app/Activity;)V = NotifyFragmentViewCreated(Android.Views.View, Android.Support.V4.App.Fragment, Android.App.Activity)
  notifyFragmentVisibilityChanged(ZLandroid/app/Fragment;Landroid/app/Activity;)V = NotifyFragmentVisibilityChanged(bool, Android.App.Fragment, Android.App.Activity)
  notifyFragmentVisibilityChanged(ZLandroid/support/v4/app/Fragment;Landroid/app/Activity;)V = NotifyFragmentVisibilityChanged(bool, Android.Support.V4.App.Fragment, Android.App.Activity)
com/instabug/library/internal/layer/CapturableView = Com.Instabug.Library.Internal.Layer.ICapturableView
  isVisible()Z = IsVisible
  getLocationOnScreen([I)V = GetLocationOnScreen(int[])
  snapshot(Lcom/instabug/library/internal/layer/CapturableView$SnapshotPreparationCallback;)V = Snapshot(Com.Instabug.Library.Internal.Layer.ICapturableViewSnapshotPreparationCallback)
com/instabug/library/internal/module/InstabugLocale = Com.Instabug.Library.Internal.Module.InstabugLocale
  ARABIC = Arabic
  CZECH = Czech
  ENGLISH = English
  FRENCH = French
  GERMAN = German
  ITALIAN = Italian
  JAPANESE = Japanese
  KOREAN = Korean
  POLISH = Polish
  PORTUGUESE_BRAZIL = PortugueseBrazil
  PORTUGUESE_PORTUGAL = PortuguesePortugal
  RUSSIAN = Russian
  SIMPLIFIED_CHINESE = SimplifiedChinese
  SPANISH = Spanish
  SWEDISH = Swedish
  TRADITIONAL_CHINESE = TraditionalChinese
  TURKISH = Turkish
  getCode()Ljava/lang/String; = Code
  getCountry()Ljava/lang/String; = Country
  valueOf(Ljava/lang/String;)Lcom/instabug/library/internal/module/InstabugLocale; = ValueOf(string)
  values()[Lcom/instabug/library/internal/module/InstabugLocale; = Values()
com/instabug/library/internal/storage/cache/db/InstabugDbContract = Com.Instabug.Library.Internal.Storage.Cache.DB.InstabugDbContract
com/instabug/library/internal/storage/cache/db/InstabugDbHelper = Com.Instabug.Library.Internal.Storage.Cache.DB.InstabugDbHelper
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  DATABASE_NAME = DatabaseName
  onCreate(Landroid/database/sqlite/SQLiteDatabase;)V = OnCreate(Android.Database.Sqlite.SQLiteDatabase)
  onUpgrade(Landroid/database/sqlite/SQLiteDatabase;II)V = OnUpgrade(Android.Database.Sqlite.SQLiteDatabase, int, int)
com/instabug/library/invocation/InstabugInvocationEvent = Com.Instabug.Library.Invocation.InstabugInvocationEvent
  FLOATING_BUTTON = FloatingButton
  NONE = None
  SCREENSHOT_GESTURE = ScreenshotGesture
  SHAKE = Shake
  TWO_FINGER_SWIPE_LEFT = TwoFingerSwipeLeft
  valueOf(Ljava/lang/String;)Lcom/instabug/library/invocation/InstabugInvocationEvent; = ValueOf(string)
  values()[Lcom/instabug/library/invocation/InstabugInvocationEvent; = Values()
com/instabug/library/invocation/InstabugInvocationMode = Com.Instabug.Library.Invocation.InstabugInvocationMode
  CHATS_LIST = ChatsList
  NEW_BUG = NewBug
  NEW_CHAT = NewChat
  NEW_FEEDBACK = NewFeedback
  PROMPT_OPTION = PromptOption
  valueOf(Ljava/lang/String;)Lcom/instabug/library/invocation/InstabugInvocationMode; = ValueOf(string)
  values()[Lcom/instabug/library/invocation/InstabugInvocationMode; = Values()
com/instabug/library/invocation/InvocationParams = Com.Instabug.Library.Invocation.InvocationParams
  getInitialScreenshotUriAsString()Ljava/lang/String; = InitialScreenshotUriAsString
  getPromptOptions()Lcom/instabug/library/invocation/PromptOptions; = PromptOptions
  isShouldInspectView()Z = ShouldInspectView
  setShouldInspectView(Z)V = ShouldInspectView
  getShouldInvokedWithMode()Lcom/instabug/library/invocation/InstabugInvocationMode; = ShouldInvokedWithMode
  getViewHierarchy()Ljava/lang/String; = ViewHierarchy
  setViewHierarchy(Ljava/lang/String;)V = ViewHierarchy
  setInitialScreenshotUriAsString(Ljava/lang/String;)Lcom/instabug/library/invocation/InvocationParams; = SetInitialScreenshotUriAsString(string)
  setShouldInvokedWithMode(Lcom/instabug/library/invocation/InstabugInvocationMode;)Lcom/instabug/library/invocation/InvocationParams; = SetShouldInvokedWithMode(Com.Instabug.Library.Invocation.InstabugInvocationMode)
com/instabug/library/invocation/InvocationSettings = Com.Instabug.Library.Invocation.InvocationSettings
  <init>()V = .ctor()
  SHAKE_DEFAULT_THRESHOLD = ShakeDefaultThreshold
  setFloatingButtonEdge(Lcom/instabug/library/invocation/util/InstabugFloatingButtonEdge;)V = SetFloatingButtonEdge(Com.Instabug.Library.Invocation.Util.InstabugFloatingButtonEdge)
  setFloatingButtonOffsetFromTop(I)V = SetFloatingButtonOffsetFromTop(int)
  setShakingThreshold(I)V = SetShakingThreshold(int)
com/instabug/library/invocation/InvocationTrigger = Com.Instabug.Library.Invocation.IInvocationTrigger
  onInvocationDismissed()V = OnInvocationDismissed()
  onInvocationTriggered([Landroid/net/Uri;)V = OnInvocationTriggered(params Android.Net.Uri[])
com/instabug/library/invocation/PromptOptions = Com.Instabug.Library.Invocation.PromptOptions
  <init>()V = .ctor()
  <init>(ZZZ)V = .ctor(bool, bool, bool)
  getWillShowGeneralFeedback()Z = WillShowGeneralFeedback
  getWillShowReportProblem()Z = WillShowReportProblem
  getWillShowTalkToUs()Z = WillShowTalkToUs
  setWillShowGeneralFeedback(Z)Lcom/instabug/library/invocation/PromptOptions; = SetWillShowGeneralFeedback(bool)
  setWillShowReportProblem(Z)Lcom/instabug/library/invocation/PromptOptions; = SetWillShowReportProblem(bool)
  setWillShowTalkToUs(Z)Lcom/instabug/library/invocation/PromptOptions; = SetWillShowTalkToUs(bool)
com/instabug/library/invocation/util/InstabugFloatingButtonEdge = Com.Instabug.Library.Invocation.Util.InstabugFloatingButtonEdge
  LEFT = Left
  RIGHT = Right
  valueOf(Ljava/lang/String;)Lcom/instabug/library/invocation/util/InstabugFloatingButtonEdge; = ValueOf(string)
  values()[Lcom/instabug/library/invocation/util/InstabugFloatingButtonEdge; = Values()
com/instabug/library/logging/InstabugLog = Com.Instabug.Library.Logging.InstabugLog
  <init>()V = .ctor()
  clearLogs()V = ClearLogs()
  d(Ljava/lang/String;)V = D(string)
  e(Ljava/lang/String;)V = E(string)
  getLogs(Landroid/content/Context;)Ljava/lang/String; = GetLogs(Android.Content.Context)
  i(Ljava/lang/String;)V = I(string)
  trimLogs()V = TrimLogs()
  v(Ljava/lang/String;)V = V(string)
  w(Ljava/lang/String;)V = W(string)
  wtf(Ljava/lang/String;)V = Wtf(string)
com/instabug/library/logging/InstabugNetworkLog = Com.Instabug.Library.Logging.InstabugNetworkLog
  <init>()V = .ctor()
  Log(Ljava/net/HttpURLConnection;Ljava/lang/String;Ljava/lang/String;)V = Log(Java.Net.HttpURLConnection, string, string)
com/instabug/library/model/BugCategory = Com.Instabug.Library.Model.BugCategory
  getIcon()I = Icon
  setIcon(I)V = Icon
  getInstance()Lcom/instabug/library/model/BugCategory; = Instance
  getLabel()Ljava/lang/String; = Label
  setLabel(Ljava/lang/String;)V = Label
  withIcon(I)Lcom/instabug/library/model/BugCategory; = WithIcon(int)
  withLabel(Ljava/lang/String;)Lcom/instabug/library/model/BugCategory; = WithLabel(string)
com/instabug/library/model/NetworkLog = Com.Instabug.Library.Model.NetworkLog
  <init>()V = .ctor()
  getDate()Ljava/lang/String; = Date
  setDate(Ljava/lang/String;)V = Date
  getHeaders()Ljava/lang/String; = Headers
  setHeaders(Ljava/lang/String;)V = Headers
  getMethod()Ljava/lang/String; = Method
  setMethod(Ljava/lang/String;)V = Method
  getRequest()Ljava/lang/String; = Request
  setRequest(Ljava/lang/String;)V = Request
  getResponse()Ljava/lang/String; = Response
  setResponse(Ljava/lang/String;)V = Response
  getResponseCode()I = ResponseCode
  setResponseCode(I)V = ResponseCode
  getUrl()Ljava/lang/String; = Url
  setUrl(Ljava/lang/String;)V = Url
  fromJson(Ljava/lang/String;)Lcom/instabug/library/model/NetworkLog; = FromJson(string)
  insert(Landroid/content/Context;)J = Insert(Android.Content.Context)
  toJson()Ljava/lang/String; = ToJson()
  toJsonObject()Lorg/json/JSONObject; = ToJsonObject()
com/instabug/library/OnSdkInvokedCallback = Com.Instabug.Library.IOnSdkInvokedCallback
  onSdkInvoked()V = OnSdkInvoked()
com/instabug/library/surveys/network/service/SurveysService = Com.Instabug.Library.Surveys.Network.Service.SurveysService
  getInstance()Lcom/instabug/library/surveys/network/service/SurveysService; = Instance
com/instabug/library/surveys/network/SurveysFetcher = Com.Instabug.Library.Surveys.Network.SurveysFetcher
  fetch(Landroid/content/Context;)V = Fetch(Android.Content.Context)
com/instabug/library/surveys/network/util/SubmittingSurveysUtil = Com.Instabug.Library.Surveys.Network.Util.SubmittingSurveysUtil
  <init>()V = .ctor()
com/instabug/library/surveys/utils/SurveysValidator = Com.Instabug.Library.Surveys.Utils.SurveysValidator
  KEY_CONDITION_APP_VERSION = KeyConditionAppVersion
  KEY_CONDITION_DATE = KeyConditionDate
  KEY_CONDITION_FIRST_SEEN = KeyConditionFirstSeen
  KEY_CONDITION_USER_EMAIL = KeyConditionUserEmail
  KEY_OPERATOR_AND = KeyOperatorAnd
  KEY_OPERATOR_CONTAINS = KeyOperatorContains
  KEY_OPERATOR_EQUAL = KeyOperatorEqual
  KEY_OPERATOR_GREATER_THAN = KeyOperatorGreaterThan
  KEY_OPERATOR_LESS_THAN = KeyOperatorLessThan
  KEY_OPERATOR_NOT_CONTAINS = KeyOperatorNotContains
  KEY_OPERATOR_NOT_EQUAL = KeyOperatorNotEqual
  KEY_OPERATOR_OR = KeyOperatorOr
com/instabug/library/user/UserEvent = Com.Instabug.Library.User.UserEvent
  <init>()V = .ctor()
  getDate()J = Date
  getEventIdentifier()Ljava/lang/String; = EventIdentifier
  getParams()Ljava/util/List; = Params
  addParam(Lcom/instabug/library/user/UserEventParam;)Lcom/instabug/library/user/UserEvent; = AddParam(Com.Instabug.Library.User.UserEventParam)
  setDate(J)Lcom/instabug/library/user/UserEvent; = SetDate(long)
  setEventIdentifier(Ljava/lang/String;)Lcom/instabug/library/user/UserEvent; = SetEventIdentifier(string)
  toJson()Lorg/json/JSONObject; = ToJson()
  toJson(Ljava/util/List;)Lorg/json/JSONArray; = ToJson(System.Collections.Generic.IList<Com.Instabug.Library.User.UserEvent>)
com/instabug/library/user/UserEventParam = Com.Instabug.Library.User.UserEventParam
  <init>()V = .ctor()
  getKey()Ljava/lang/String; = Key
  getValue()Ljava/lang/String; = Value
  setKey(Ljava/lang/String;)Lcom/instabug/library/user/UserEventParam; = SetKey(string)
  setValue(Ljava/lang/String;)Lcom/instabug/library/user/UserEventParam; = SetValue(string)
org/jcodec/algo/DataConvert = Org.Jcodec.Algo.DataConvert
  <init>()V = .ctor()
  from16BE([B)[I = From16BE(byte[])
  from16LE([B)[I = From16LE(byte[])
  from24BE([B)[I = From24BE(byte[])
  from24LE([B)[I = From24LE(byte[])
  fromByte([BIZ)[I = FromByte(byte[], int, bool)
  to16BE([I)[B = To16BE(int[])
  to16LE([I)[B = To16LE(int[])
  to24BE([I)[B = To24BE(int[])
  to24LE([I)[B = To24LE(int[])
  toByte([IIZ)[B = ToByte(int[], int, bool)
org/jcodec/algo/SoundFilter = Org.Jcodec.Algo.SoundFilter
  <init>()V = .ctor()
  linear = Linear
  sine = Sine
  in16BitSignedLE([BI[I)V = In16BitSignedLE(byte[], int, int[])
  out16BitSignedLE([BI[I)V = Out16BitSignedLE(byte[], int, int[])
org/jcodec/api/FrameGrab = Org.Jcodec.Api.FrameGrab
  getNativeFrame()Lorg/jcodec/common/model/Picture; = NativeFrame
  getMediaInfo()Lorg/jcodec/api/FrameGrab$MediaInfo; = GetMediaInfo()
  getNativeFrame(Ljava/io/File;D)Lorg/jcodec/common/model/Picture; = GetNativeFrame(Java.IO.File, double)
  getNativeFrame(Ljava/io/File;I)Lorg/jcodec/common/model/Picture; = GetNativeFrame(Java.IO.File, int)
  seekToFramePrecise(I)Lorg/jcodec/api/FrameGrab; = SeekToFramePrecise(int)
  seekToFrameSloppy(I)Lorg/jcodec/api/FrameGrab; = SeekToFrameSloppy(int)
  seekToSecondPrecise(D)Lorg/jcodec/api/FrameGrab; = SeekToSecondPrecise(double)
  seekToSecondSloppy(D)Lorg/jcodec/api/FrameGrab; = SeekToSecondSloppy(double)
org/jcodec/api/JCodecException = Org.Jcodec.Api.JCodecException
  <init>(Ljava/lang/String;)V = .ctor(string)
org/jcodec/api/SequenceEncoder = Org.Jcodec.Api.SequenceEncoder
  <init>(Ljava/io/File;)V = .ctor(Java.IO.File)
  encodeNativeFrame(Lorg/jcodec/common/model/Picture;)V = EncodeNativeFrame(Org.Jcodec.Common.Model.Picture)
  finish()V = Finish()
org/jcodec/api/specific/AVCMP4Adaptor = Org.Jcodec.Api.Specific.AVCMP4Adaptor
  getMediaInfo()Lorg/jcodec/api/FrameGrab$MediaInfo; = MediaInfo
  allocatePicture()[[I = AllocatePicture()
  canSeek(Lorg/jcodec/common/model/Packet;)Z = CanSeek(Org.Jcodec.Common.Model.Packet)
  decodeFrame(Lorg/jcodec/common/model/Packet;[[I)Lorg/jcodec/common/model/Picture; = DecodeFrame(Org.Jcodec.Common.Model.Packet, int[][])
org/jcodec/api/specific/ContainerAdaptor = Org.Jcodec.Api.Specific.IContainerAdaptor
  getMediaInfo()Lorg/jcodec/api/FrameGrab$MediaInfo; = MediaInfo
  allocatePicture()[[I = AllocatePicture()
  canSeek(Lorg/jcodec/common/model/Packet;)Z = CanSeek(Org.Jcodec.Common.Model.Packet)
  decodeFrame(Lorg/jcodec/common/model/Packet;[[I)Lorg/jcodec/common/model/Picture; = DecodeFrame(Org.Jcodec.Common.Model.Packet, int[][])
org/jcodec/api/specific/GenericAdaptor = Org.Jcodec.Api.Specific.GenericAdaptor
  getMediaInfo()Lorg/jcodec/api/FrameGrab$MediaInfo; = MediaInfo
  allocatePicture()[[I = AllocatePicture()
  canSeek(Lorg/jcodec/common/model/Packet;)Z = CanSeek(Org.Jcodec.Common.Model.Packet)
  decodeFrame(Lorg/jcodec/common/model/Packet;[[I)Lorg/jcodec/common/model/Picture; = DecodeFrame(Org.Jcodec.Common.Model.Packet, int[][])
org/jcodec/api/UnsupportedFormatException = Org.Jcodec.Api.UnsupportedFormatException
  <init>(Ljava/lang/String;)V = .ctor(string)
org/jcodec/audio/Audio = Org.Jcodec.Audio.Audio
  <init>()V = .ctor()
  print(Ljava/nio/FloatBuffer;)V = Print(Java.Nio.FloatBuffer)
  rotate(Ljava/nio/FloatBuffer;)V = Rotate(Java.Nio.FloatBuffer)
org/jcodec/audio/AudioFilter = Org.Jcodec.Audio.IAudioFilter
  getDelay()I = Delay
  getNInputs()I = NInputs
  getNOutputs()I = NOutputs
  filter([Ljava/nio/FloatBuffer;[J[Ljava/nio/FloatBuffer;)V = Filter(Java.Nio.FloatBuffer[], long[], Java.Nio.FloatBuffer[])
org/jcodec/audio/AudioSink = Org.Jcodec.Audio.IAudioSink
  write(Ljava/nio/FloatBuffer;)V = Write(Java.Nio.FloatBuffer)
org/jcodec/audio/ChannelMerge = Org.Jcodec.Audio.ChannelMerge
  getDelay()I = Delay
  getNInputs()I = NInputs
  getNOutputs()I = NOutputs
  filter([Ljava/nio/FloatBuffer;[J[Ljava/nio/FloatBuffer;)V = Filter(Java.Nio.FloatBuffer[], long[], Java.Nio.FloatBuffer[])
org/jcodec/audio/ChannelSplit = Org.Jcodec.Audio.ChannelSplit
  getDelay()I = Delay
  getNInputs()I = NInputs
  getNOutputs()I = NOutputs
  filter([Ljava/nio/FloatBuffer;[J[Ljava/nio/FloatBuffer;)V = Filter(Java.Nio.FloatBuffer[], long[], Java.Nio.FloatBuffer[])
org/jcodec/audio/ConvolutionFilter = Org.Jcodec.Audio.ConvolutionFilter
  <init>()V = .ctor()
  getDelay()I = Delay
  getNInputs()I = NInputs
  getNOutputs()I = NOutputs
  buildKernel()[D = BuildKernel()
  filter([Ljava/nio/FloatBuffer;[J[Ljava/nio/FloatBuffer;)V = Filter(Java.Nio.FloatBuffer[], long[], Java.Nio.FloatBuffer[])
org/jcodec/audio/FilterGraph = Org.Jcodec.Audio.FilterGraph
  getDelay()I = Delay
  getNInputs()I = NInputs
  getNOutputs()I = NOutputs
  addLevel(Lorg/jcodec/audio/AudioFilter;)Lorg/jcodec/audio/FilterGraph$Factory; = AddLevel(Org.Jcodec.Audio.IAudioFilter)
  filter([Ljava/nio/FloatBuffer;[J[Ljava/nio/FloatBuffer;)V = Filter(Java.Nio.FloatBuffer[], long[], Java.Nio.FloatBuffer[])
org/jcodec/audio/FilterSocket = Org.Jcodec.Audio.FilterSocket
  <init>([Lorg/jcodec/audio/AudioFilter;)V = .ctor(params Org.Jcodec.Audio.IAudioFilter[])
  getTotalInputs()I = TotalInputs
  getTotalOutputs()I = TotalOutputs
  allocateBuffers(I)V = AllocateBuffers(int)
  filter([Ljava/nio/FloatBuffer;)V = Filter(Java.Nio.FloatBuffer[])
  getPositions()[J = GetPositions()
  rotate()V = Rotate()
  setBuffers([Ljava/nio/FloatBuffer;[J)V = SetBuffers(Java.Nio.FloatBuffer[], long[])
org/jcodec/audio/LanczosInterpolator = Org.Jcodec.Audio.LanczosInterpolator
  <init>(II)V = .ctor(int, int)
  getDelay()I = Delay
  getNInputs()I = NInputs
  getNOutputs()I = NOutputs
  filter([Ljava/nio/FloatBuffer;[J[Ljava/nio/FloatBuffer;)V = Filter(Java.Nio.FloatBuffer[], long[], Java.Nio.FloatBuffer[])
  lanczos(DI)D = Lanczos(double, int)
org/jcodec/audio/SincLowPassFilter = Org.Jcodec.Audio.SincLowPassFilter
  <init>(D)V = .ctor(double)
  <init>(ID)V = .ctor(int, double)
  <init>(II)V = .ctor(int, int)
  buildKernel()[D = BuildKernel()
org/jcodec/codecs/aac/AACConts = Org.Jcodec.Codecs.Aac.AACConts
  <init>()V = .ctor()
  AAC_CHANNEL_COUNT = AacChannelCount
  AAC_SAMPLE_RATES = AacSampleRates
org/jcodec/codecs/aac/AACUtils = Org.Jcodec.Codecs.Aac.AACUtils
  <init>()V = .ctor()
  parseAudioInfo(Ljava/nio/ByteBuffer;)Lorg/jcodec/codecs/aac/AACUtils$AudioInfo; = ParseAudioInfo(Java.Nio.ByteBuffer)
org/jcodec/codecs/aac/ADTSParser = Org.Jcodec.Codecs.Aac.ADTSParser
  <init>()V = .ctor()
  read(Ljava/nio/ByteBuffer;)Lorg/jcodec/codecs/aac/ADTSParser$Header; = Read(Java.Nio.ByteBuffer)
  write(Lorg/jcodec/codecs/aac/ADTSParser$Header;Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer; = Write(Org.Jcodec.Codecs.Aac.ADTSParser.Header, Java.Nio.ByteBuffer, int)
org/jcodec/codecs/aac/BlockReader = Org.Jcodec.Codecs.Aac.BlockReader
  <init>()V = .ctor()
  nextBlock(Lorg/jcodec/common/io/BitReader;)Lorg/jcodec/codecs/aac/blocks/Block; = NextBlock(Org.Jcodec.Common.IO.BitReader)
org/jcodec/codecs/aac/blocks/AACTab = Org.Jcodec.Codecs.Aac.Blocks.AACTab
  <init>()V = .ctor()
org/jcodec/codecs/aac/blocks/Block = Org.Jcodec.Codecs.Aac.Blocks.Block
  <init>()V = .ctor()
  getType()Lorg/jcodec/codecs/aac/BlockType; = Type
  parse(Lorg/jcodec/common/io/BitReader;)V = Parse(Org.Jcodec.Common.IO.BitReader)
org/jcodec/codecs/aac/blocks/BlockCCE = Org.Jcodec.Codecs.Aac.Blocks.BlockCCE
  <init>([Lorg/jcodec/codecs/aac/blocks/BlockICS$BandType;)V = .ctor(Org.Jcodec.Codecs.Aac.Blocks.BlockICS.BandType[])
  parse(Lorg/jcodec/common/io/BitReader;)V = Parse(Org.Jcodec.Common.IO.BitReader)
org/jcodec/codecs/aac/blocks/BlockCPE = Org.Jcodec.Codecs.Aac.Blocks.BlockCPE
  <init>()V = .ctor()
org/jcodec/codecs/aac/blocks/BlockDSE = Org.Jcodec.Codecs.Aac.Blocks.BlockDSE
  <init>()V = .ctor()
  parse(Lorg/jcodec/common/io/BitReader;)V = Parse(Org.Jcodec.Common.IO.BitReader)
org/jcodec/codecs/aac/blocks/BlockFil = Org.Jcodec.Codecs.Aac.Blocks.BlockFil
  <init>()V = .ctor()
  parse(Lorg/jcodec/common/io/BitReader;)V = Parse(Org.Jcodec.Common.IO.BitReader)
org/jcodec/codecs/aac/blocks/BlockICS = Org.Jcodec.Codecs.Aac.Blocks.BlockICS
  <init>()V = .ctor()
  parse(Lorg/jcodec/common/io/BitReader;)V = Parse(Org.Jcodec.Common.IO.BitReader)
  parseICSInfo(Lorg/jcodec/common/io/BitReader;)I = ParseICSInfo(Org.Jcodec.Common.IO.BitReader)
org/jcodec/codecs/aac/blocks/BlockPCE = Org.Jcodec.Codecs.Aac.Blocks.BlockPCE
  <init>()V = .ctor()
  parse(Lorg/jcodec/common/io/BitReader;)V = Parse(Org.Jcodec.Common.IO.BitReader)
org/jcodec/codecs/aac/blocks/RawDataBlockType = Org.Jcodec.Codecs.Aac.Blocks.RawDataBlockType
  TYPE_CCE = TypeCce
  TYPE_CPE = TypeCpe
  TYPE_DSE = TypeDse
  TYPE_END = TypeEnd
  TYPE_FIL = TypeFil
  TYPE_LFE = TypeLfe
  TYPE_PCE = TypePce
  TYPE_SCE = TypeSce
  fromOrdinal(I)Lorg/jcodec/codecs/aac/blocks/RawDataBlockType; = FromOrdinal(int)
  valueOf(Ljava/lang/String;)Lorg/jcodec/codecs/aac/blocks/RawDataBlockType; = ValueOf(string)
  values()[Lorg/jcodec/codecs/aac/blocks/RawDataBlockType; = Values()
org/jcodec/codecs/aac/BlockType = Org.Jcodec.Codecs.Aac.BlockType
  TYPE_CCE = TypeCce
  TYPE_CPE = TypeCpe
  TYPE_DSE = TypeDse
  TYPE_END = TypeEnd
  TYPE_FIL = TypeFil
  TYPE_LFE = TypeLfe
  TYPE_PCE = TypePce
  TYPE_SCE = TypeSce
  getCode()I = Code
  fromCode(J)Lorg/jcodec/codecs/aac/BlockType; = FromCode(long)
  valueOf(Ljava/lang/String;)Lorg/jcodec/codecs/aac/BlockType; = ValueOf(string)
  values()[Lorg/jcodec/codecs/aac/BlockType; = Values()
org/jcodec/codecs/aac/BlockWriter = Org.Jcodec.Codecs.Aac.BlockWriter
  <init>()V = .ctor()
  nextBlock(Lorg/jcodec/common/io/BitWriter;Lorg/jcodec/codecs/aac/blocks/Block;)V = NextBlock(Org.Jcodec.Common.IO.BitWriter, Org.Jcodec.Codecs.Aac.Blocks.Block)
org/jcodec/codecs/aac/ChannelPosition = Org.Jcodec.Codecs.Aac.ChannelPosition
  AAC_CHANNEL_BACK = AacChannelBack
  AAC_CHANNEL_CC = AacChannelCc
  AAC_CHANNEL_FRONT = AacChannelFront
  AAC_CHANNEL_LFE = AacChannelLfe
  AAC_CHANNEL_SIDE = AacChannelSide
  valueOf(Ljava/lang/String;)Lorg/jcodec/codecs/aac/ChannelPosition; = ValueOf(string)
  values()[Lorg/jcodec/codecs/aac/ChannelPosition; = Values()
org/jcodec/codecs/aac/ObjectType = Org.Jcodec.Codecs.Aac.ObjectType
  AOT_AAC_LC = AotAacLc
  AOT_AAC_LTP = AotAacLtp
  AOT_AAC_MAIN = AotAacMain
  AOT_AAC_SCALABLE = AotAacScalable
  AOT_AAC_SSR = AotAacSsr
  AOT_ALS = AotAls
  AOT_CELP = AotCelp
  AOT_DST = AotDst
  AOT_ER_AAC_ELD = AotErAacEld
  AOT_ER_AAC_LC = AotErAacLc
  AOT_ER_AAC_LD = AotErAacLd
  AOT_ER_AAC_LTP = AotErAacLtp
  AOT_ER_AAC_SCALABLE = AotErAacScalable
  AOT_ER_BSAC = AotErBsac
  AOT_ER_CELP = AotErCelp
  AOT_ER_HILN = AotErHiln
  AOT_ER_HVXC = AotErHvxc
  AOT_ER_PARAM = AotErParam
  AOT_ER_TWINVQ = AotErTwinvq
  AOT_ESCAPE = AotEscape
  AOT_HVXC = AotHvxc
  AOT_L1 = AotL1
  AOT_L2 = AotL2
  AOT_L3 = AotL3
  AOT_LD_SURROUND = AotLdSurround
  AOT_MAINSYNTH = AotMainsynth
  AOT_MIDI = AotMidi
  AOT_NULL = AotNull
  AOT_PS = AotPs
  AOT_SAFX = AotSafx
  AOT_SAOC = AotSaoc
  AOT_SBR = AotSbr
  AOT_SLS = AotSls
  AOT_SLS_NON_CORE = AotSlsNonCore
  AOT_SMR_MAIN = AotSmrMain
  AOT_SMR_SIMPLE = AotSmrSimple
  AOT_SSC = AotSsc
  AOT_SURROUND = AotSurround
  AOT_TTSI = AotTtsi
  AOT_TWINVQ = AotTwinvq
  AOT_USAC = AotUsac
  AOT_USAC_NOSBR = AotUsacNosbr
  AOT_WAVESYNTH = AotWavesynth
  CRAP1 = Crap1
  CRAP2 = Crap2
  CRAP3 = Crap3
  valueOf(Ljava/lang/String;)Lorg/jcodec/codecs/aac/ObjectType; = ValueOf(string)
  values()[Lorg/jcodec/codecs/aac/ObjectType; = Values()
org/jcodec/codecs/aac/Profile = Org.Jcodec.Codecs.Aac.Profile
  LC = Lc
  MAIN = Main
  OTHER = Other
  valueOf(Ljava/lang/String;)Lorg/jcodec/codecs/aac/Profile; = ValueOf(string)
  values()[Lorg/jcodec/codecs/aac/Profile; = Values()
org/jcodec/codecs/common/biari/BitIO = Org.Jcodec.Codecs.Common.Biari.BitIO
  <init>()V = .ctor()
  compressBits([I)[B = CompressBits(int[])
  decompressBits([B)[I = DecompressBits(byte[])
  inputFromArray([B)Lorg/jcodec/codecs/common/biari/BitIO$InputBits; = InputFromArray(byte[])
  inputFromStream(Ljava/io/InputStream;)Lorg/jcodec/codecs/common/biari/BitIO$InputBits; = InputFromStream(System.IO.Stream)
  outputFromArray([B)Lorg/jcodec/codecs/common/biari/BitIO$OutputBits; = OutputFromArray(byte[])
  outputFromStream(Ljava/io/OutputStream;)Lorg/jcodec/codecs/common/biari/BitIO$OutputBits; = OutputFromStream(System.IO.Stream)
org/jcodec/codecs/common/biari/Context = Org.Jcodec.Codecs.Common.Biari.Context
  <init>(II)V = .ctor(int, int)
  getMps()I = Mps
  setMps(I)V = Mps
  getState()I = State
  setState(I)V = State
org/jcodec/codecs/common/biari/MConst = Org.Jcodec.Codecs.Common.Biari.MConst
  <init>()V = .ctor()
  rangeLPS = RangeLPS
  transitLPS = TransitLPS
org/jcodec/codecs/common/biari/MDecoder = Org.Jcodec.Codecs.Common.Biari.MDecoder
  <init>(Ljava/nio/ByteBuffer;[[I)V = .ctor(Java.Nio.ByteBuffer, int[][])
  decodeBin(I)I = DecodeBin(int)
  decodeBinBypass()I = DecodeBinBypass()
  decodeFinalBin()I = DecodeFinalBin()
  initCodeRegister()V = InitCodeRegister()
  readOneByte()V = ReadOneByte()
org/jcodec/codecs/common/biari/MEncoder = Org.Jcodec.Codecs.Common.Biari.MEncoder
  <init>(Ljava/nio/ByteBuffer;[[I)V = .ctor(Java.Nio.ByteBuffer, int[][])
  encodeBin(II)V = EncodeBin(int, int)
  encodeBinBypass(I)V = EncodeBinBypass(int)
  encodeBinFinal(I)V = EncodeBinFinal(int)
  finishEncoding()V = FinishEncoding()
org/jcodec/codecs/common/biari/MQConst = Org.Jcodec.Codecs.Common.Biari.MQConst
  <init>()V = .ctor()
  mpsSwitch = MpsSwitch
  pLps = PLps
  transitLPS = TransitLPS
  transitMPS = TransitMPS
org/jcodec/codecs/common/biari/MQDecoder = Org.Jcodec.Codecs.Common.Biari.MQDecoder
  <init>(Ljava/io/InputStream;)V = .ctor(System.IO.Stream)
  decode(Lorg/jcodec/codecs/common/biari/Context;)I = Decode(Org.Jcodec.Codecs.Common.Biari.Context)
org/jcodec/codecs/common/biari/MQEncoder = Org.Jcodec.Codecs.Common.Biari.MQEncoder
  <init>(Ljava/io/OutputStream;)V = .ctor(System.IO.Stream)
  CARRY_MASK = CarryMask
  encode(ILorg/jcodec/codecs/common/biari/Context;)V = Encode(int, Org.Jcodec.Codecs.Common.Biari.Context)
  finish()V = Finish()
org/jcodec/codecs/common/biari/TreeBinarizer = Org.Jcodec.Codecs.Common.Biari.TreeBinarizer
  <init>()V = .ctor()
  binarize(ILorg/jcodec/codecs/common/biari/MQEncoder;)V = Binarize(int, Org.Jcodec.Codecs.Common.Biari.MQEncoder)
  debinarize(Lorg/jcodec/codecs/common/biari/MQDecoder;)I = Debinarize(Org.Jcodec.Codecs.Common.Biari.MQDecoder)
org/jcodec/codecs/common/biari/VPxBooleanEncoder = Org.Jcodec.Codecs.Common.Biari.VPxBooleanEncoder
  <init>(Ljava/nio/ByteBuffer;)V = .ctor(Java.Nio.ByteBuffer)
  position()I = Position()
  stop()V = Stop()
  writeBit(II)V = WriteBit(int, int)
org/jcodec/codecs/h264/decode/aso/FlatMBlockMapper = Org.Jcodec.Codecs.H264.Decode.Aso.FlatMBlockMapper
  <init>(II)V = .ctor(int, int)
  getAddress(I)I = GetAddress(int)
  getMbX(I)I = GetMbX(int)
  getMbY(I)I = GetMbY(int)
  leftAvailable(I)Z = LeftAvailable(int)
  topAvailable(I)Z = TopAvailable(int)
  topLeftAvailable(I)Z = TopLeftAvailable(int)
  topRightAvailable(I)Z = TopRightAvailable(int)
org/jcodec/codecs/h264/decode/aso/MapManager = Org.Jcodec.Codecs.H264.Decode.Aso.MapManager
org/jcodec/codecs/h264/decode/aso/Mapper = Org.Jcodec.Codecs.H264.Decode.Aso.IMapper
  getAddress(I)I = GetAddress(int)
  getMbX(I)I = GetMbX(int)
  getMbY(I)I = GetMbY(int)
  leftAvailable(I)Z = LeftAvailable(int)
  topAvailable(I)Z = TopAvailable(int)
  topLeftAvailable(I)Z = TopLeftAvailable(int)
  topRightAvailable(I)Z = TopRightAvailable(int)
org/jcodec/codecs/h264/decode/aso/MBToSliceGroupMap = Org.Jcodec.Codecs.H264.Decode.Aso.MBToSliceGroupMap
  <init>([I[I[[I)V = .ctor(int[], int[], int[][])
  getGroups()[I = GetGroups()
  getIndices()[I = GetIndices()
  getInverse()[[I = GetInverse()
org/jcodec/codecs/h264/decode/aso/PrebuiltMBlockMapper = Org.Jcodec.Codecs.H264.Decode.Aso.PrebuiltMBlockMapper
  <init>(Lorg/jcodec/codecs/h264/decode/aso/MBToSliceGroupMap;II)V = .ctor(Org.Jcodec.Codecs.H264.Decode.Aso.MBToSliceGroupMap, int, int)
  getAddress(I)I = GetAddress(int)
  getMbX(I)I = GetMbX(int)
  getMbY(I)I = GetMbY(int)
  leftAvailable(I)Z = LeftAvailable(int)
  topAvailable(I)Z = TopAvailable(int)
  topLeftAvailable(I)Z = TopLeftAvailable(int)
  topRightAvailable(I)Z = TopRightAvailable(int)
org/jcodec/codecs/h264/decode/aso/SliceGroupMapBuilder = Org.Jcodec.Codecs.H264.Decode.Aso.SliceGroupMapBuilder
  <init>()V = .ctor()
  buildBoxOutMap(IIZI)[I = BuildBoxOutMap(int, int, bool, int)
  buildDispersedMap(III)[I = BuildDispersedMap(int, int, int)
  buildForegroundMap(III[I[I)[I = BuildForegroundMap(int, int, int, int[], int[])
  buildInterleavedMap(II[I)[I = BuildInterleavedMap(int, int, int[])
  buildRasterScanMap(IIIZ)[I = BuildRasterScanMap(int, int, int, bool)
  buildWipeMap(IIIZ)[I = BuildWipeMap(int, int, int, bool)
org/jcodec/codecs/h264/decode/BlockInterpolator = Org.Jcodec.Codecs.H264.Decode.BlockInterpolator
  <init>()V = .ctor()
  getBlockChroma([III[IIIIIII)V = GetBlockChroma(int[], int, int, int[], int, int, int, int, int, int)
  getBlockLuma(Lorg/jcodec/common/model/Picture;Lorg/jcodec/common/model/Picture;IIIII)V = GetBlockLuma(Org.Jcodec.Common.Model.Picture, Org.Jcodec.Common.Model.Picture, int, int, int, int, int)
org/jcodec/codecs/h264/decode/CABACContst = Org.Jcodec.Codecs.H264.Decode.CABACContst
  <init>()V = .ctor()
  cabac_context_init_I_A = CabacContextInitIA
  cabac_context_init_I_B = CabacContextInitIB
  cabac_context_init_PB_A = CabacContextInitPBA
  cabac_context_init_PB_B = CabacContextInitPBB
org/jcodec/codecs/h264/decode/CAVLCReader = Org.Jcodec.Codecs.H264.Decode.CAVLCReader
  moreRBSPData(Lorg/jcodec/common/io/BitReader;)Z = MoreRBSPData(Org.Jcodec.Common.IO.BitReader)
  readBool(Lorg/jcodec/common/io/BitReader;Ljava/lang/String;)Z = ReadBool(Org.Jcodec.Common.IO.BitReader, string)
  readME(Lorg/jcodec/common/io/BitReader;Ljava/lang/String;)I = ReadME(Org.Jcodec.Common.IO.BitReader, string)
  readNBit(Lorg/jcodec/common/io/BitReader;ILjava/lang/String;)I = ReadNBit(Org.Jcodec.Common.IO.BitReader, int, string)
  readSE(Lorg/jcodec/common/io/BitReader;Ljava/lang/String;)I = ReadSE(Org.Jcodec.Common.IO.BitReader, string)
  readTE(Lorg/jcodec/common/io/BitReader;I)I = ReadTE(Org.Jcodec.Common.IO.BitReader, int)
  readU(Lorg/jcodec/common/io/BitReader;ILjava/lang/String;)I = ReadU(Org.Jcodec.Common.IO.BitReader, int, string)
  readUE(Lorg/jcodec/common/io/BitReader;)I = ReadUE(Org.Jcodec.Common.IO.BitReader)
  readUE(Lorg/jcodec/common/io/BitReader;Ljava/lang/String;)I = ReadUE(Org.Jcodec.Common.IO.BitReader, string)
  readZeroBitCount(Lorg/jcodec/common/io/BitReader;Ljava/lang/String;)I = ReadZeroBitCount(Org.Jcodec.Common.IO.BitReader, string)
org/jcodec/codecs/h264/decode/ChromaPredictionBuilder = Org.Jcodec.Codecs.H264.Decode.ChromaPredictionBuilder
  <init>()V = .ctor()
  predictDC([IIZZ[I[I)V = PredictDC(int[], int, bool, bool, int[], int[])
  predictDCInside([IIIIZZ[I[I)V = PredictDCInside(int[], int, int, int, bool, bool, int[], int[])
  predictDCLeftBorder([IIIIZZ[I[I)V = PredictDCLeftBorder(int[], int, int, int, bool, bool, int[], int[])
  predictDCTopBorder([IIIIZZ[I[I)V = PredictDCTopBorder(int[], int, int, int, bool, bool, int[], int[])
  predictHorizontal([IIZ[I)V = PredictHorizontal(int[], int, bool, int[])
  predictPlane([IIZZ[I[I[I)V = PredictPlane(int[], int, bool, bool, int[], int[], int[])
  predictVertical([IIZ[I)V = PredictVertical(int[], int, bool, int[])
  predictWithMode([IIIZZ[I[I[I)V = PredictWithMode(int[], int, int, bool, bool, int[], int[], int[])
org/jcodec/codecs/h264/decode/CoeffTransformer = Org.Jcodec.Codecs.H264.Decode.CoeffTransformer
  <init>([[I)V = .ctor(int[][])
  zigzag4x4 = Zigzag4x4
  zigzag8x8 = Zigzag8x8
  dequantizeAC([II)V = DequantizeAC(int[], int)
  dequantizeAC8x8([II)V = DequantizeAC8x8(int[], int)
  dequantizeDC2x2([II)V = DequantizeDC2x2(int[], int)
  dequantizeDC4x2([II)V = DequantizeDC4x2(int[], int)
  dequantizeDC4x4([II)V = DequantizeDC4x4(int[], int)
  fdct4x4([I)V = Fdct4x4(int[])
  fvdDC2x2([I)V = FvdDC2x2(int[])
  fvdDC4x2([I)V = FvdDC4x2(int[])
  fvdDC4x4([I)V = FvdDC4x4(int[])
  idct4x4([I)V = Idct4x4(int[])
  idct4x4([I[I)V = Idct4x4(int[], int[])
  idct8x8([I)V = Idct8x8(int[])
  invDC2x2([I)V = InvDC2x2(int[])
  invDC4x2([I)V = InvDC4x2(int[])
  invDC4x4([I)V = InvDC4x4(int[])
  quantizeAC([II)V = QuantizeAC(int[], int)
  quantizeDC2x2([II)V = QuantizeDC2x2(int[], int)
  quantizeDC4x2([II)V = QuantizeDC4x2(int[], int)
  quantizeDC4x4([II)V = QuantizeDC4x4(int[], int)
  reorderDC4x4([I)V = ReorderDC4x4(int[])
  unzigzagAC([I)[I = UnzigzagAC(int[])
org/jcodec/codecs/h264/decode/deblock/DeblockingFilter = Org.Jcodec.Codecs.H264.Decode.Deblock.DeblockingFilter
  deblockFrame(Lorg/jcodec/common/model/Picture;)V = DeblockFrame(Org.Jcodec.Common.Model.Picture)
org/jcodec/codecs/h264/decode/Interpolator = Org.Jcodec.Codecs.H264.Decode.Interpolator
  <init>()V = .ctor()
  fillFullPel([III[I)V = FillFullPel(int[], int, int, int[])
  interpolateChroma([III)[I = InterpolateChroma(int[], int, int)
  interpolateLuma([III)[I = InterpolateLuma(int[], int, int)
  roundHPelVertical(II[I)V = RoundHPelVertical(int, int, int[])
  scanHPelCenterWidhRound(II[I)V = ScanHPelCenterWidhRound(int, int, int[])
  scanHPelHorizontalWithRound(II[I)V = ScanHPelHorizontalWithRound(int, int, int[])
  scanHPelVertical(II[I)V = ScanHPelVertical(int, int, int[])
  scanQPel(II[I)V = ScanQPel(int, int, int[])
org/jcodec/codecs/h264/decode/Intra16x16PredictionBuilder = Org.Jcodec.Codecs.H264.Decode.Intra16x16PredictionBuilder
  <init>()V = .ctor()
  predictDC([IZZ[I[II)V = PredictDC(int[], bool, bool, int[], int[], int)
  predictHorizontal([IZ[II)V = PredictHorizontal(int[], bool, int[], int)
  predictPlane([IZZ[I[I[II)V = PredictPlane(int[], bool, bool, int[], int[], int[], int)
  predictVertical([IZ[II)V = PredictVertical(int[], bool, int[], int)
  predictWithMode(I[IZZ[I[I[II)V = PredictWithMode(int, int[], bool, bool, int[], int[], int[], int)
org/jcodec/codecs/h264/decode/Intra4x4PredictionBuilder = Org.Jcodec.Codecs.H264.Decode.Intra4x4PredictionBuilder
  <init>()V = .ctor()
  predictDC([IZZ[I[IIII)V = PredictDC(int[], bool, bool, int[], int[], int, int, int)
  predictDiagonalDownLeft([IZZ[IIII)V = PredictDiagonalDownLeft(int[], bool, bool, int[], int, int, int)
  predictDiagonalDownRight([IZZ[I[I[IIII)V = PredictDiagonalDownRight(int[], bool, bool, int[], int[], int[], int, int, int)
  predictHorizontal([IZ[IIII)V = PredictHorizontal(int[], bool, int[], int, int, int)
  predictHorizontalDown([IZZ[I[I[IIII)V = PredictHorizontalDown(int[], bool, bool, int[], int[], int[], int, int, int)
  predictHorizontalUp([IZ[IIII)V = PredictHorizontalUp(int[], bool, int[], int, int, int)
  predictVertical([IZ[IIII)V = PredictVertical(int[], bool, int[], int, int, int)
  predictVerticalLeft([IZZ[IIII)V = PredictVerticalLeft(int[], bool, bool, int[], int, int, int)
  predictVerticalRight([IZZ[I[I[IIII)V = PredictVerticalRight(int[], bool, bool, int[], int[], int[], int, int, int)
  predictWithMode(I[IZZZ[I[I[IIII)V = PredictWithMode(int, int[], bool, bool, bool, int[], int[], int[], int, int, int)
org/jcodec/codecs/h264/decode/Intra8x8PredictionBuilder = Org.Jcodec.Codecs.H264.Decode.Intra8x8PredictionBuilder
  <init>()V = .ctor()
  copyAdd([II[II)V = CopyAdd(int[], int, int[], int)
  fillAdd([III)V = FillAdd(int[], int, int)
  predictWithMode(I[IZZZZ[I[I[IIII)V = PredictWithMode(int, int[], bool, bool, bool, bool, int[], int[], int[], int, int, int)
org/jcodec/codecs/h264/decode/Prediction = Org.Jcodec.Codecs.H264.Decode.Prediction
org/jcodec/codecs/h264/decode/SliceDecoder = Org.Jcodec.Codecs.H264.Decode.SliceDecoder
  calcMVPrediction16x8Bottom([I[I[I[IZZZZII)I = CalcMVPrediction16x8Bottom(int[], int[], int[], int[], bool, bool, bool, bool, int, int)
  calcMVPrediction16x8Top([I[I[I[IZZZZII)I = CalcMVPrediction16x8Top(int[], int[], int[], int[], bool, bool, bool, bool, int, int)
  calcMVPrediction8x16Left([I[I[I[IZZZZII)I = CalcMVPrediction8x16Left(int[], int[], int[], int[], bool, bool, bool, bool, int, int)
  calcMVPrediction8x16Right([I[I[I[IZZZZII)I = CalcMVPrediction8x16Right(int[], int[], int[], int[], bool, bool, bool, bool, int, int)
  calcMVPredictionMedian([I[I[I[IZZZZII)I = CalcMVPredictionMedian(int[], int[], int[], int[], bool, bool, bool, bool, int, int)
  decodeMBlockIPCM(Lorg/jcodec/common/io/BitReader;ILorg/jcodec/common/model/Picture;)V = DecodeMBlockIPCM(Org.Jcodec.Common.IO.BitReader, int, Org.Jcodec.Common.Model.Picture)
  put(Lorg/jcodec/common/model/Picture;Lorg/jcodec/common/model/Picture;II)V = Put(Org.Jcodec.Common.Model.Picture, Org.Jcodec.Common.Model.Picture, int, int)
  setDebug(Z)V = SetDebug(bool)
org/jcodec/codecs/h264/decode/SliceHeaderReader = Org.Jcodec.Codecs.H264.Decode.SliceHeaderReader
  <init>()V = .ctor()
org/jcodec/codecs/h264/encode/DumbRateControl = Org.Jcodec.Codecs.H264.Encode.DumbRateControl
  <init>()V = .ctor()
  getInitQp()I = InitQp
  getQpDelta()I = QpDelta
  accept(I)Z = Accept(int)
  reset()V = Reset()
org/jcodec/codecs/h264/encode/H264FixedRateControl = Org.Jcodec.Codecs.H264.Encode.H264FixedRateControl
  <init>(I)V = .ctor(int)
  getInitQp()I = InitQp
  getQpDelta()I = QpDelta
  accept(I)Z = Accept(int)
  calcFrameSize(I)I = CalcFrameSize(int)
  reset()V = Reset()
  setRate(I)V = SetRate(int)
org/jcodec/codecs/h264/encode/RateControl = Org.Jcodec.Codecs.H264.Encode.IRateControl
  getInitQp()I = InitQp
  getQpDelta()I = QpDelta
  accept(I)Z = Accept(int)
  reset()V = Reset()
org/jcodec/codecs/h264/io/CABAC = Org.Jcodec.Codecs.H264.IO.CABAC
  <init>(I)V = .ctor(int)
  tmp = Tmp
  prev4x4PredModeFlag(Lorg/jcodec/codecs/common/biari/MDecoder;)Z = Prev4x4PredModeFlag(Org.Jcodec.Codecs.Common.Biari.MDecoder)
  readCoeffs(Lorg/jcodec/codecs/common/biari/MDecoder;Lorg/jcodec/codecs/h264/io/CABAC$BlockType;[III[I[I[I)I = ReadCoeffs(Org.Jcodec.Codecs.Common.Biari.MDecoder, Org.Jcodec.Codecs.H264.IO.CABAC.BlockType, int[], int, int, int[], int[], int[])
  readMBTypeP(Lorg/jcodec/codecs/common/biari/MDecoder;)I = ReadMBTypeP(Org.Jcodec.Codecs.Common.Biari.MDecoder)
  readSubMbTypeB(Lorg/jcodec/codecs/common/biari/MDecoder;)I = ReadSubMbTypeB(Org.Jcodec.Codecs.Common.Biari.MDecoder)
  readSubMbTypeP(Lorg/jcodec/codecs/common/biari/MDecoder;)I = ReadSubMbTypeP(Org.Jcodec.Codecs.Common.Biari.MDecoder)
  rem4x4PredMode(Lorg/jcodec/codecs/common/biari/MDecoder;)I = Rem4x4PredMode(Org.Jcodec.Codecs.Common.Biari.MDecoder)
  setCodedBlock(II)V = SetCodedBlock(int, int)
  setPrevCBP(I)V = SetPrevCBP(int)
  writeCoeffs(Lorg/jcodec/codecs/common/biari/MEncoder;Lorg/jcodec/codecs/h264/io/CABAC$BlockType;[III[I)V = WriteCoeffs(Org.Jcodec.Codecs.Common.Biari.MEncoder, Org.Jcodec.Codecs.H264.IO.CABAC.BlockType, int[], int, int, int[])
org/jcodec/codecs/h264/io/CAVLC = Org.Jcodec.Codecs.H264.IO.CAVLC
  NO_ZIGZAG = NoZigzag
  getCoeffTokenVLCForChromaDC()Lorg/jcodec/common/io/VLC; = CoeffTokenVLCForChromaDC
  codeTableChromaDC()Lorg/jcodec/common/io/VLC; = CodeTableChromaDC()
  coeffToken(II)I = CoeffToken(int, int)
  readChromaDCBlock(Lorg/jcodec/common/io/BitReader;[IZZ)V = ReadChromaDCBlock(Org.Jcodec.Common.IO.BitReader, int[], bool, bool)
  readCoeffs(Lorg/jcodec/common/io/BitReader;Lorg/jcodec/common/io/VLC;[Lorg/jcodec/common/io/VLC;[III[I)I = ReadCoeffs(Org.Jcodec.Common.IO.BitReader, Org.Jcodec.Common.IO.VLC, Org.Jcodec.Common.IO.VLC[], int[], int, int, int[])
  setZeroCoeff(II)V = SetZeroCoeff(int, int)
  totalCoeff(I)I = TotalCoeff(int)
  trailingOnes(I)I = TrailingOnes(int)
  writeChrDCBlock(Lorg/jcodec/common/io/BitWriter;[I[Lorg/jcodec/common/io/VLC;II[I)V = WriteChrDCBlock(Org.Jcodec.Common.IO.BitWriter, int[], Org.Jcodec.Common.IO.VLC[], int, int, int[])
org/jcodec/codecs/h264/io/write/CAVLCWriter = Org.Jcodec.Codecs.H264.IO.Write.CAVLCWriter
  writeBool(Lorg/jcodec/common/io/BitWriter;ZLjava/lang/String;)V = WriteBool(Org.Jcodec.Common.IO.BitWriter, bool, string)
  writeNBit(Lorg/jcodec/common/io/BitWriter;JILjava/lang/String;)V = WriteNBit(Org.Jcodec.Common.IO.BitWriter, long, int, string)
  writeSE(Lorg/jcodec/common/io/BitWriter;I)V = WriteSE(Org.Jcodec.Common.IO.BitWriter, int)
  writeSE(Lorg/jcodec/common/io/BitWriter;ILjava/lang/String;)V = WriteSE(Org.Jcodec.Common.IO.BitWriter, int, string)
  writeSliceTrailingBits()V = WriteSliceTrailingBits()
  writeTrailingBits(Lorg/jcodec/common/io/BitWriter;)V = WriteTrailingBits(Org.Jcodec.Common.IO.BitWriter)
  writeU(Lorg/jcodec/common/io/BitWriter;II)V = WriteU(Org.Jcodec.Common.IO.BitWriter, int, int)
  writeU(Lorg/jcodec/common/io/BitWriter;IILjava/lang/String;)V = WriteU(Org.Jcodec.Common.IO.BitWriter, int, int, string)
  writeUE(Lorg/jcodec/common/io/BitWriter;I)V = WriteUE(Org.Jcodec.Common.IO.BitWriter, int)
  writeUE(Lorg/jcodec/common/io/BitWriter;ILjava/lang/String;)V = WriteUE(Org.Jcodec.Common.IO.BitWriter, int, string)
org/jcodec/codecs/h264/io/write/NALUnitWriter = Org.Jcodec.Codecs.H264.IO.Write.NALUnitWriter
  <init>(Ljava/nio/channels/WritableByteChannel;)V = .ctor(Java.Nio.Channels.IWritableByteChannel)
org/jcodec/codecs/h264/io/write/SliceHeaderWriter = Org.Jcodec.Codecs.H264.IO.Write.SliceHeaderWriter
  <init>()V = .ctor()
org/jcodec/codecs/mjpeg/FrameHeader = Org.Jcodec.Codecs.Mjpeg.FrameHeader
  <init>()V = .ctor()
  getHmax()I = Hmax
  getVmax()I = Vmax
  read(Ljava/nio/ByteBuffer;)Lorg/jcodec/codecs/mjpeg/FrameHeader; = Read(Java.Nio.ByteBuffer)
org/jcodec/codecs/mjpeg/JPEGBitStream = Org.Jcodec.Codecs.Mjpeg.JPEGBitStream
  <init>(Ljava/nio/ByteBuffer;[Lorg/jcodec/common/io/VLC;I)V = .ctor(Java.Nio.ByteBuffer, Org.Jcodec.Common.IO.VLC[], int)
  readACValues([ILorg/jcodec/common/io/VLC;)V = ReadACValues(int[], Org.Jcodec.Common.IO.VLC)
  readDCValue(ILorg/jcodec/common/io/VLC;)I = ReadDCValue(int, Org.Jcodec.Common.IO.VLC)
  readMCU([[I)V = ReadMCU(int[][])
  toValue(II)I = ToValue(int, int)
org/jcodec/codecs/mjpeg/JpegConst = Org.Jcodec.Codecs.Mjpeg.JpegConst
  <init>()V = .ctor()
  APP0 = App0
  APP1 = App1
  APP2 = App2
  APP3 = App3
  APP4 = App4
  APP5 = App5
  APP6 = App6
  APP7 = App7
  APP8 = App8
  APP9 = App9
  APPA = Appa
  APPB = Appb
  APPC = Appc
  APPD = Appd
  APPE = Appe
  APPF = Appf
  CAC_DEFAULT = CacDefault
  CDC_DEFAULT = CdcDefault
  COM = Com
  DHT = Dht
  DQT = Dqt
  DRI = Dri
  EOI = Eoi
  naturalOrder = NaturalOrder
  RST0 = Rst0
  RST1 = Rst1
  RST2 = Rst2
  RST3 = Rst3
  RST4 = Rst4
  RST5 = Rst5
  RST6 = Rst6
  RST7 = Rst7
  SOF0 = Sof0
  SOF1 = Sof1
  SOF2 = Sof2
  SOF3 = Sof3
  SOI = Soi
  SOS = Sos
  YAC_DEFAULT = YacDefault
  YDC_DEFAULT = YdcDefault
  toString(I)Ljava/lang/String; = ToString(int)
org/jcodec/codecs/mjpeg/JpegDecoder = Org.Jcodec.Codecs.Mjpeg.JpegDecoder
  <init>()V = .ctor()
  <init>(ZZ)V = .ctor(bool, bool)
  decodeField(Ljava/nio/ByteBuffer;[[III)Lorg/jcodec/common/model/Picture; = DecodeField(Java.Nio.ByteBuffer, int[][], int, int)
  decodeFrame(Ljava/nio/ByteBuffer;[[I)Lorg/jcodec/common/model/Picture; = DecodeFrame(Java.Nio.ByteBuffer, int[][])
  probe(Ljava/nio/ByteBuffer;)I = Probe(Java.Nio.ByteBuffer)
  toValue(II)I = ToValue(int, int)
org/jcodec/codecs/mjpeg/JpegToThumb2x2 = Org.Jcodec.Codecs.Mjpeg.JpegToThumb2x2
  <init>()V = .ctor()
  <init>(ZZ)V = .ctor(bool, bool)
org/jcodec/codecs/mjpeg/JpegToThumb4x4 = Org.Jcodec.Codecs.Mjpeg.JpegToThumb4x4
  <init>()V = .ctor()
  <init>(ZZ)V = .ctor(bool, bool)
org/jcodec/codecs/mjpeg/ScanHeader = Org.Jcodec.Codecs.Mjpeg.ScanHeader
  <init>()V = .ctor()
  isInterleaved()Z = IsInterleaved
  read(Ljava/nio/ByteBuffer;)Lorg/jcodec/codecs/mjpeg/ScanHeader; = Read(Java.Nio.ByteBuffer)
org/jcodec/codecs/mjpeg/tools/Asserts = Org.Jcodec.Codecs.Mjpeg.Tools.Asserts
  <init>()V = .ctor()
  assertEpsilonEquals([B[BI)V = AssertEpsilonEquals(byte[], byte[], int)
  assertEpsilonEquals([I[II)V = AssertEpsilonEquals(int[], int[], int)
  assertEquals(II)V = AssertEquals(int, int)
  assertInRange(Ljava/lang/String;III)V = AssertInRange(string, int, int, int)
org/jcodec/codecs/mpeg12/bitstream/CopyrightExtension = Org.Jcodec.Codecs.Mpeg12.Bitstream.CopyrightExtension
  <init>()V = .ctor()
  copyright_flag = CopyrightFlag
  copyright_identifier = CopyrightIdentifier
  copyright_number_1 = CopyrightNumber1
  copyright_number_2 = CopyrightNumber2
  copyright_number_3 = CopyrightNumber3
  original_or_copy = OriginalOrCopy
  read(Lorg/jcodec/common/io/BitReader;)Lorg/jcodec/codecs/mpeg12/bitstream/CopyrightExtension; = Read(Org.Jcodec.Common.IO.BitReader)
  write(Ljava/nio/ByteBuffer;)V = Write(Java.Nio.ByteBuffer)
org/jcodec/codecs/mpeg12/bitstream/GOPHeader = Org.Jcodec.Codecs.Mpeg12.Bitstream.GOPHeader
  <init>(Lorg/jcodec/common/model/TapeTimecode;ZZ)V = .ctor(Org.Jcodec.Common.Model.TapeTimecode, bool, bool)
  isBrokenLink()Z = IsBrokenLink
  isClosedGop()Z = IsClosedGop
  getTimeCode()Lorg/jcodec/common/model/TapeTimecode; = TimeCode
  read(Ljava/nio/ByteBuffer;)Lorg/jcodec/codecs/mpeg12/bitstream/GOPHeader; = Read(Java.Nio.ByteBuffer)
  write(Ljava/nio/ByteBuffer;)V = Write(Java.Nio.ByteBuffer)
org/jcodec/codecs/mpeg12/bitstream/MPEGHeader = Org.Jcodec.Codecs.Mpeg12.Bitstream.IMPEGHeader
  write(Ljava/nio/ByteBuffer;)V = Write(Java.Nio.ByteBuffer)
org/jcodec/codecs/mpeg12/bitstream/PictureCodingExtension = Org.Jcodec.Codecs.Mpeg12.Bitstream.PictureCodingExtension
  <init>()V = .ctor()
  alternate_scan = AlternateScan
  Bottom_Field = BottomField
  chroma_420_type = Chroma420Type
  compositeDisplay = CompositeDisplay
  concealment_motion_vectors = ConcealmentMotionVectors
  f_code = FCode
  Frame = Frame
  frame_pred_frame_dct = FramePredFrameDct
  intra_dc_precision = IntraDcPrecision
  intra_vlc_format = IntraVlcFormat
  picture_structure = PictureStructure
  progressive_frame = ProgressiveFrame
  q_scale_type = QScaleType
  repeat_first_field = RepeatFirstField
  Top_Field = TopField
  top_field_first = TopFieldFirst
  read(Lorg/jcodec/common/io/BitReader;)Lorg/jcodec/codecs/mpeg12/bitstream/PictureCodingExtension; = Read(Org.Jcodec.Common.IO.BitReader)
  write(Ljava/nio/ByteBuffer;)V = Write(Java.Nio.ByteBuffer)
org/jcodec/codecs/mpeg12/bitstream/PictureDisplayExtension = Org.Jcodec.Codecs.Mpeg12.Bitstream.PictureDisplayExtension
  <init>()V = .ctor()
  frame_centre_offsets = FrameCentreOffsets
  read(Lorg/jcodec/common/io/BitReader;Lorg/jcodec/codecs/mpeg12/bitstream/SequenceExtension;Lorg/jcodec/codecs/mpeg12/bitstream/PictureCodingExtension;)Lorg/jcodec/codecs/mpeg12/bitstream/PictureDisplayExtension; = Read(Org.Jcodec.Common.IO.BitReader, Org.Jcodec.Codecs.Mpeg12.Bitstream.SequenceExtension, Org.Jcodec.Codecs.Mpeg12.Bitstream.PictureCodingExtension)
  write(Ljava/nio/ByteBuffer;)V = Write(Java.Nio.ByteBuffer)
org/jcodec/codecs/mpeg12/bitstream/PictureHeader = Org.Jcodec.Codecs.Mpeg12.Bitstream.PictureHeader
  <init>(IIIIIII)V = .ctor(int, int, int, int, int, int, int)
  backward_f_code = BackwardFCode
  BiPredictiveCoded = BiPredictiveCoded
  Copyright_Extension = CopyrightExtension
  copyrightExtension = CopyrightExtension
  forward_f_code = ForwardFCode
  full_pel_backward_vector = FullPelBackwardVector
  full_pel_forward_vector = FullPelForwardVector
  IntraCoded = IntraCoded
  Picture_Coding_Extension = PictureCodingExtension
  pictureCodingExtension = PictureCodingExtension
  picture_coding_type = PictureCodingType
  Picture_Display_Extension = PictureDisplayExtension
  pictureDisplayExtension = PictureDisplayExtension
  Picture_Spatial_Scalable_Extension = PictureSpatialScalableExtension
  pictureSpatialScalableExtension = PictureSpatialScalableExtension
  Picture_Temporal_Scalable_Extension = PictureTemporalScalableExtension
  pictureTemporalScalableExtension = PictureTemporalScalableExtension
  PredictiveCoded = PredictiveCoded
  Quant_Matrix_Extension = QuantMatrixExtension
  quantMatrixExtension = QuantMatrixExtension
  temporal_reference = TemporalReference
  vbv_delay = VbvDelay
  hasExtensions()Z = HasExtensions
  read(Ljava/nio/ByteBuffer;)Lorg/jcodec/codecs/mpeg12/bitstream/PictureHeader; = Read(Java.Nio.ByteBuffer)
  readExtension(Ljava/nio/ByteBuffer;Lorg/jcodec/codecs/mpeg12/bitstream/PictureHeader;Lorg/jcodec/codecs/mpeg12/bitstream/SequenceHeader;)V = ReadExtension(Java.Nio.ByteBuffer, Org.Jcodec.Codecs.Mpeg12.Bitstream.PictureHeader, Org.Jcodec.Codecs.Mpeg12.Bitstream.SequenceHeader)
  write(Ljava/nio/ByteBuffer;)V = Write(Java.Nio.ByteBuffer)
org/jcodec/codecs/mpeg12/bitstream/PictureSpatialScalableExtension = Org.Jcodec.Codecs.Mpeg12.Bitstream.PictureSpatialScalableExtension
  <init>()V = .ctor()
  lower_layer_deinterlaced_field_select = LowerLayerDeinterlacedFieldSelect
  lower_layer_horizontal_offset = LowerLayerHorizontalOffset
  lower_layer_progressive_frame = LowerLayerProgressiveFrame
  lower_layer_temporal_reference = LowerLayerTemporalReference
  lower_layer_vertical_offset = LowerLayerVerticalOffset
  spatial_temporal_weight_code_table_index = SpatialTemporalWeightCodeTableIndex
  read(Lorg/jcodec/common/io/BitReader;)Lorg/jcodec/codecs/mpeg12/bitstream/PictureSpatialScalableExtension; = Read(Org.Jcodec.Common.IO.BitReader)
  write(Ljava/nio/ByteBuffer;)V = Write(Java.Nio.ByteBuffer)
org/jcodec/codecs/mpeg12/bitstream/PictureTemporalScalableExtension = Org.Jcodec.Codecs.Mpeg12.Bitstream.PictureTemporalScalableExtension
  <init>()V = .ctor()
  backward_temporal_reference = BackwardTemporalReference
  forward_temporal_reference = ForwardTemporalReference
  reference_select_code = ReferenceSelectCode
  read(Lorg/jcodec/common/io/BitReader;)Lorg/jcodec/codecs/mpeg12/bitstream/PictureTemporalScalableExtension; = Read(Org.Jcodec.Common.IO.BitReader)
  write(Ljava/nio/ByteBuffer;)V = Write(Java.Nio.ByteBuffer)
org/jcodec/codecs/mpeg12/bitstream/QuantMatrixExtension = Org.Jcodec.Codecs.Mpeg12.Bitstream.QuantMatrixExtension
  <init>()V = .ctor()
  chroma_intra_quantiser_matrix = ChromaIntraQuantiserMatrix
  chroma_non_intra_quantiser_matrix = ChromaNonIntraQuantiserMatrix
  intra_quantiser_matrix = IntraQuantiserMatrix
  non_intra_quantiser_matrix = NonIntraQuantiserMatrix
  read(Lorg/jcodec/common/io/BitReader;)Lorg/jcodec/codecs/mpeg12/bitstream/QuantMatrixExtension; = Read(Org.Jcodec.Common.IO.BitReader)
  write(Ljava/nio/ByteBuffer;)V = Write(Java.Nio.ByteBuffer)
org/jcodec/codecs/mpeg12/bitstream/SequenceDisplayExtension = Org.Jcodec.Codecs.Mpeg12.Bitstream.SequenceDisplayExtension
  <init>()V = .ctor()
  colorDescription = ColorDescription
  display_horizontal_size = DisplayHorizontalSize
  display_vertical_size = DisplayVerticalSize
  video_format = VideoFormat
  read(Lorg/jcodec/common/io/BitReader;)Lorg/jcodec/codecs/mpeg12/bitstream/SequenceDisplayExtension; = Read(Org.Jcodec.Common.IO.BitReader)
  write(Ljava/nio/ByteBuffer;)V = Write(Java.Nio.ByteBuffer)
org/jcodec/codecs/mpeg12/bitstream/SequenceExtension = Org.Jcodec.Codecs.Mpeg12.Bitstream.SequenceExtension
  <init>(IIIIIIIIII)V = .ctor(int, int, int, int, int, int, int, int, int, int)
  bit_rate_extension = BitRateExtension
  Chroma420 = Chroma420
  Chroma422 = Chroma422
  Chroma444 = Chroma444
  chroma_format = ChromaFormat
  frame_rate_extension_d = FrameRateExtensionD
  frame_rate_extension_n = FrameRateExtensionN
  horizontal_size_extension = HorizontalSizeExtension
  low_delay = LowDelay
  profile_and_level = ProfileAndLevel
  progressive_sequence = ProgressiveSequence
  vbv_buffer_size_extension = VbvBufferSizeExtension
  vertical_size_extension = VerticalSizeExtension
  read(Lorg/jcodec/common/io/BitReader;)Lorg/jcodec/codecs/mpeg12/bitstream/SequenceExtension; = Read(Org.Jcodec.Common.IO.BitReader)
  write(Ljava/nio/ByteBuffer;)V = Write(Java.Nio.ByteBuffer)
org/jcodec/codecs/mpeg12/bitstream/SequenceHeader = Org.Jcodec.Codecs.Mpeg12.Bitstream.SequenceHeader
  <init>(IIIIIII[I[I)V = .ctor(int, int, int, int, int, int, int, int[], int[])
  aspect_ratio_information = AspectRatioInformation
  bit_rate = BitRate
  constrained_parameters_flag = ConstrainedParametersFlag
  frame_rate_code = FrameRateCode
  horizontal_size = HorizontalSize
  intra_quantiser_matrix = IntraQuantiserMatrix
  non_intra_quantiser_matrix = NonIntraQuantiserMatrix
  Sequence_Display_Extension = SequenceDisplayExtension
  sequenceDisplayExtension = SequenceDisplayExtension
  Sequence_Extension = SequenceExtension
  sequenceExtension = SequenceExtension
  Sequence_Scalable_Extension = SequenceScalableExtension
  sequenceScalableExtension = SequenceScalableExtension
  vbv_buffer_size_value = VbvBufferSizeValue
  vertical_size = VerticalSize
  hasExtensions()Z = HasExtensions
  copyExtensions(Lorg/jcodec/codecs/mpeg12/bitstream/SequenceHeader;)V = CopyExtensions(Org.Jcodec.Codecs.Mpeg12.Bitstream.SequenceHeader)
  read(Ljava/nio/ByteBuffer;)Lorg/jcodec/codecs/mpeg12/bitstream/SequenceHeader; = Read(Java.Nio.ByteBuffer)
  readExtension(Ljava/nio/ByteBuffer;Lorg/jcodec/codecs/mpeg12/bitstream/SequenceHeader;)V = ReadExtension(Java.Nio.ByteBuffer, Org.Jcodec.Codecs.Mpeg12.Bitstream.SequenceHeader)
  write(Ljava/nio/ByteBuffer;)V = Write(Java.Nio.ByteBuffer)
org/jcodec/codecs/mpeg12/bitstream/SequenceScalableExtension = Org.Jcodec.Codecs.Mpeg12.Bitstream.SequenceScalableExtension
  <init>()V = .ctor()
  DATA_PARTITIONING = DataPartitioning
  horizontal_subsampling_factor_m = HorizontalSubsamplingFactorM
  horizontal_subsampling_factor_n = HorizontalSubsamplingFactorN
  layer_id = LayerId
  lower_layer_prediction_horizontal_size = LowerLayerPredictionHorizontalSize
  lower_layer_prediction_vertical_size = LowerLayerPredictionVerticalSize
  mux_to_progressive_sequence = MuxToProgressiveSequence
  picture_mux_enable = PictureMuxEnable
  picture_mux_factor = PictureMuxFactor
  picture_mux_order = PictureMuxOrder
  scalable_mode = ScalableMode
  SNR_SCALABILITY = SnrScalability
  SPATIAL_SCALABILITY = SpatialScalability
  TEMPORAL_SCALABILITY = TemporalScalability
  vertical_subsampling_factor_m = VerticalSubsamplingFactorM
  vertical_subsampling_factor_n = VerticalSubsamplingFactorN
  read(Lorg/jcodec/common/io/BitReader;)Lorg/jcodec/codecs/mpeg12/bitstream/SequenceScalableExtension; = Read(Org.Jcodec.Common.IO.BitReader)
  write(Ljava/nio/ByteBuffer;)V = Write(Java.Nio.ByteBuffer)
org/jcodec/codecs/mpeg12/FixHLSTimestamps = Org.Jcodec.Codecs.Mpeg12.FixHLSTimestamps
  <init>()V = .ctor()
  doWithTimestamp(IJZ)J = DoWithTimestamp(int, long, bool)
  main([Ljava/lang/String;)V = Main(string[])
org/jcodec/codecs/mpeg12/FixTimestamp = Org.Jcodec.Codecs.Mpeg12.FixTimestamp
  <init>()V = .ctor()
  doWithTimestamp(IJZ)J = DoWithTimestamp(int, long, bool)
  fix(Ljava/io/File;)V = Fix(Java.IO.File)
  fixMpeg1(ILjava/nio/ByteBuffer;)V = FixMpeg1(int, Java.Nio.ByteBuffer)
  fixMpeg2(ILjava/nio/ByteBuffer;)V = FixMpeg2(int, Java.Nio.ByteBuffer)
  fixTs(ILjava/nio/ByteBuffer;Z)J = FixTs(int, Java.Nio.ByteBuffer, bool)
  isAudio(I)Z = IsAudio(int)
  isVideo(I)Z = IsVideo(int)
org/jcodec/codecs/mpeg12/HLSFixPMT = Org.Jcodec.Codecs.Mpeg12.HLSFixPMT
  <init>()V = .ctor()
  fix(Ljava/io/File;)V = Fix(Java.IO.File)
  fixPAT(Ljava/nio/ByteBuffer;)V = FixPAT(Java.Nio.ByteBuffer)
  main([Ljava/lang/String;)V = Main(string[])
org/jcodec/codecs/mpeg12/Mpeg2Thumb2x2 = Org.Jcodec.Codecs.Mpeg12.Mpeg2Thumb2x2
  <init>()V = .ctor()
  BLOCK_POS_X = BlockPosX
  BLOCK_POS_Y = BlockPosY
  scan2x2 = Scan2x2
org/jcodec/codecs/mpeg12/Mpeg2Thumb4x4 = Org.Jcodec.Codecs.Mpeg12.Mpeg2Thumb4x4
  <init>()V = .ctor()
  BLOCK_POS_X = BlockPosX
  BLOCK_POS_Y = BlockPosY
  scan4x4 = Scan4x4
org/jcodec/codecs/mpeg12/MPEGConst = Org.Jcodec.Codecs.Mpeg12.MPEGConst
  <init>()V = .ctor()
  BLOCK_POS_X = BlockPosX
  BLOCK_POS_Y = BlockPosY
  BLOCK_TO_CC = BlockToCc
  CODE_END = CodeEnd
  CODE_ESCAPE = CodeEscape
  defaultQMatInter = DefaultQMatInter
  defaultQMatIntra = DefaultQMatIntra
  EXTENSION_START_CODE = ExtensionStartCode
  GROUP_START_CODE = GroupStartCode
  mbTypeValB = MbTypeValB
  mbTypeValBSpat = MbTypeValBSpat
  mbTypeValI = MbTypeValI
  mbTypeValISpat = MbTypeValISpat
  mbTypeValP = MbTypeValP
  mbTypeValPSpat = MbTypeValPSpat
  mbTypeValSNR = MbTypeValSNR
  PICTURE_START_CODE = PictureStartCode
  qScaleTab1 = QScaleTab1
  qScaleTab2 = QScaleTab2
  scan = Scan
  SEQUENCE_END_CODE = SequenceEndCode
  SEQUENCE_ERROR_CODE = SequenceErrorCode
  SEQUENCE_HEADER_CODE = SequenceHeaderCode
  SLICE_START_CODE_FIRST = SliceStartCodeFirst
  SLICE_START_CODE_LAST = SliceStartCodeLast
  SQUEEZE_X = SqueezeX
  SQUEEZE_Y = SqueezeY
  STEP_Y = StepY
  USER_DATA_START_CODE = UserDataStartCode
  vlcAddressIncrement = VlcAddressIncrement
  vlcCBP = VlcCBP
  vlcCoeff0 = VlcCoeff0
  vlcCoeff1 = VlcCoeff1
  vlcDCSizeChroma = VlcDCSizeChroma
  vlcDCSizeLuma = VlcDCSizeLuma
  vlcDualPrime = VlcDualPrime
  vlcMBTypeB = VlcMBTypeB
  vlcMBTypeBSpat = VlcMBTypeBSpat
  vlcMBTypeI = VlcMBTypeI
  vlcMBTypeISpat = VlcMBTypeISpat
  vlcMBTypeP = VlcMBTypeP
  vlcMBTypePSpat = VlcMBTypePSpat
  vlcMBTypeSNR = VlcMBTypeSNR
  vlcMotionCode = VlcMotionCode
  mbTypeVal(ILorg/jcodec/codecs/mpeg12/bitstream/SequenceScalableExtension;)[Lorg/jcodec/codecs/mpeg12/MPEGConst$MBType; = MbTypeVal(int, Org.Jcodec.Codecs.Mpeg12.Bitstream.SequenceScalableExtension)
  vlcMBType(ILorg/jcodec/codecs/mpeg12/bitstream/SequenceScalableExtension;)Lorg/jcodec/common/io/VLC; = VlcMBType(int, Org.Jcodec.Codecs.Mpeg12.Bitstream.SequenceScalableExtension)
org/jcodec/codecs/mpeg12/MPEGDecoder = Org.Jcodec.Codecs.Mpeg12.MPEGDecoder
  <init>()V = .ctor()
  <init>(Lorg/jcodec/codecs/mpeg12/bitstream/SequenceHeader;Lorg/jcodec/codecs/mpeg12/bitstream/GOPHeader;)V = .ctor(Org.Jcodec.Codecs.Mpeg12.Bitstream.SequenceHeader, Org.Jcodec.Codecs.Mpeg12.Bitstream.GOPHeader)
  gh = Gh
  sh = Sh
  blockInter(Lorg/jcodec/common/io/BitReader;Lorg/jcodec/common/io/VLC;[I[III[I)V = BlockInter(Org.Jcodec.Common.IO.BitReader, Org.Jcodec.Common.IO.VLC, int[], int[], int, int, int[])
  blockIntra(Lorg/jcodec/common/io/BitReader;Lorg/jcodec/common/io/VLC;[I[II[IIII[I)V = BlockIntra(Org.Jcodec.Common.IO.BitReader, Org.Jcodec.Common.IO.VLC, int[], int[], int, int[], int, int, int, int[])
  clip(I)I = Clip(int)
  decodeFrame(Ljava/nio/ByteBuffer;[[I)Lorg/jcodec/common/model/Picture; = DecodeFrame(Java.Nio.ByteBuffer, int[][])
  decodeMacroblock(Lorg/jcodec/codecs/mpeg12/bitstream/PictureHeader;Lorg/jcodec/codecs/mpeg12/MPEGDecoder$Context;I[I[[IILorg/jcodec/common/io/BitReader;IILorg/jcodec/codecs/mpeg12/MPEGPred;)I = DecodeMacroblock(Org.Jcodec.Codecs.Mpeg12.Bitstream.PictureHeader, Org.Jcodec.Codecs.Mpeg12.MPEGDecoder.Context, int, int[], int[][], int, Org.Jcodec.Common.IO.BitReader, int, int, Org.Jcodec.Codecs.Mpeg12.MPEGPred)
  decodePicture(Lorg/jcodec/codecs/mpeg12/MPEGDecoder$Context;Lorg/jcodec/codecs/mpeg12/bitstream/PictureHeader;Ljava/nio/ByteBuffer;[[III)Lorg/jcodec/common/model/Picture; = DecodePicture(Org.Jcodec.Codecs.Mpeg12.MPEGDecoder.Context, Org.Jcodec.Codecs.Mpeg12.Bitstream.PictureHeader, Java.Nio.ByteBuffer, int[][], int, int)
  decodeSlice(Lorg/jcodec/codecs/mpeg12/bitstream/PictureHeader;ILorg/jcodec/codecs/mpeg12/MPEGDecoder$Context;[[ILorg/jcodec/common/io/BitReader;II)V = DecodeSlice(Org.Jcodec.Codecs.Mpeg12.Bitstream.PictureHeader, int, Org.Jcodec.Codecs.Mpeg12.MPEGDecoder.Context, int[][], Org.Jcodec.Common.IO.BitReader, int, int)
  getCodedHeight(Lorg/jcodec/codecs/mpeg12/bitstream/SequenceHeader;Lorg/jcodec/codecs/mpeg12/bitstream/PictureHeader;)I = GetCodedHeight(Org.Jcodec.Codecs.Mpeg12.Bitstream.SequenceHeader, Org.Jcodec.Codecs.Mpeg12.Bitstream.PictureHeader)
  getSize(Ljava/nio/ByteBuffer;)Lorg/jcodec/common/model/Size; = GetSize(Java.Nio.ByteBuffer)
  initContext(Lorg/jcodec/codecs/mpeg12/bitstream/SequenceHeader;Lorg/jcodec/codecs/mpeg12/bitstream/PictureHeader;)Lorg/jcodec/codecs/mpeg12/MPEGDecoder$Context; = InitContext(Org.Jcodec.Codecs.Mpeg12.Bitstream.SequenceHeader, Org.Jcodec.Codecs.Mpeg12.Bitstream.PictureHeader)
  mapBlock([I[IIII)V = MapBlock(int[], int[], int, int, int)
  mpegSigned(Lorg/jcodec/common/io/BitReader;I)I = MpegSigned(Org.Jcodec.Common.IO.BitReader, int)
  probe(Ljava/nio/ByteBuffer;)I = Probe(Java.Nio.ByteBuffer)
  put([[I[[IIIIIIIII)V = Put(int[][], int[][], int, int, int, int, int, int, int, int)
  quantInter(II)I = QuantInter(int, int)
  quantInterSigned(II)I = QuantInterSigned(int, int)
  toSigned(II)I = ToSigned(int, int)
  twosSigned(Lorg/jcodec/common/io/BitReader;I)I = TwosSigned(Org.Jcodec.Common.IO.BitReader, int)
org/jcodec/codecs/mpeg12/MPEGEncoder = Org.Jcodec.Codecs.Mpeg12.MPEGEncoder
  <init>()V = .ctor()
org/jcodec/codecs/mpeg12/MPEGES = Org.Jcodec.Codecs.Mpeg12.MPEGES
  <init>(Ljava/nio/channels/ReadableByteChannel;)V = .ctor(Java.Nio.Channels.IReadableByteChannel)
  <init>(Ljava/nio/channels/ReadableByteChannel;I)V = .ctor(Java.Nio.Channels.IReadableByteChannel, int)
  curPts = CurPts
  getFrame(Ljava/nio/ByteBuffer;)Lorg/jcodec/containers/mps/MPSDemuxer$MPEGPacket; = GetFrame(Java.Nio.ByteBuffer)
org/jcodec/codecs/mpeg12/MPEGPred = Org.Jcodec.Codecs.Mpeg12.MPEGPred
  <init>([[IIZ)V = .ctor(int[][], int, bool)
  <init>(Lorg/jcodec/codecs/mpeg12/MPEGPred;)V = .ctor(Org.Jcodec.Codecs.Mpeg12.MPEGPred)
  mvPred = MvPred
  getPix1([IIIIIII)I = GetPix1(int[], int, int, int, int, int, int)
  getPix2([IIIIIIIII)I = GetPix2(int[], int, int, int, int, int, int, int, int)
  getPix4([IIIIIIIIIIIII)I = GetPix4(int[], int, int, int, int, int, int, int, int, int, int, int, int)
  predict16x16Field([Lorg/jcodec/common/model/Picture;IILorg/jcodec/common/io/BitReader;I[[I)V = Predict16x16Field(Org.Jcodec.Common.Model.Picture[], int, int, Org.Jcodec.Common.IO.BitReader, int, int[][])
  predict16x16Frame(Lorg/jcodec/common/model/Picture;IILorg/jcodec/common/io/BitReader;I[[I)V = Predict16x16Frame(Org.Jcodec.Common.Model.Picture, int, int, Org.Jcodec.Common.IO.BitReader, int, int[][])
  predict16x16NoMV(Lorg/jcodec/common/model/Picture;IIII[[I)V = Predict16x16NoMV(Org.Jcodec.Common.Model.Picture, int, int, int, int, int[][])
  predictEvenEvenSafe([IIIIIII[IIIII)V = PredictEvenEvenSafe(int[], int, int, int, int, int, int, int[], int, int, int, int)
  predictEvenEvenUnSafe([IIIIIII[IIIII)V = PredictEvenEvenUnSafe(int[], int, int, int, int, int, int, int[], int, int, int, int)
  predictEvenOddSafe([IIIIIII[IIIII)V = PredictEvenOddSafe(int[], int, int, int, int, int, int, int[], int, int, int, int)
  predictEvenOddUnSafe([IIIIIII[IIIII)V = PredictEvenOddUnSafe(int[], int, int, int, int, int, int, int[], int, int, int, int)
  predictGeneric(Lorg/jcodec/common/model/Picture;IILorg/jcodec/common/io/BitReader;I[[IIIIIIIII)V = PredictGeneric(Org.Jcodec.Common.Model.Picture, int, int, Org.Jcodec.Common.IO.BitReader, int, int[][], int, int, int, int, int, int, int, int)
  predictInField([Lorg/jcodec/common/model/Picture;II[[ILorg/jcodec/common/io/BitReader;III)V = PredictInField(Org.Jcodec.Common.Model.Picture[], int, int, int[][], Org.Jcodec.Common.IO.BitReader, int, int, int)
  predictInFrame(Lorg/jcodec/common/model/Picture;II[[ILorg/jcodec/common/io/BitReader;III)V = PredictInFrame(Org.Jcodec.Common.Model.Picture, int, int, int[][], Org.Jcodec.Common.IO.BitReader, int, int, int)
  predictMB(Lorg/jcodec/common/model/Picture;IIIIIIII[[III)V = PredictMB(Org.Jcodec.Common.Model.Picture, int, int, int, int, int, int, int, int, int[][], int, int)
  predictOddEvenSafe([IIIIIII[IIIII)V = PredictOddEvenSafe(int[], int, int, int, int, int, int, int[], int, int, int, int)
  predictOddEvenUnSafe([IIIIIII[IIIII)V = PredictOddEvenUnSafe(int[], int, int, int, int, int, int, int[], int, int, int, int)
  predictOddOddSafe([IIIIIII[IIIII)V = PredictOddOddSafe(int[], int, int, int, int, int, int, int[], int, int, int, int)
  predictOddOddUnSafe([IIIIIII[IIIII)V = PredictOddOddUnSafe(int[], int, int, int, int, int, int, int[], int, int, int, int)
  predictPlane([IIIIIII[IIIII)V = PredictPlane(int[], int, int, int, int, int, int, int[], int, int, int, int)
  reset()V = Reset()
org/jcodec/codecs/mpeg12/MPEGPredOct = Org.Jcodec.Codecs.Mpeg12.MPEGPredOct
  <init>(Lorg/jcodec/codecs/mpeg12/MPEGPred;)V = .ctor(Org.Jcodec.Codecs.Mpeg12.MPEGPred)
  getPix2([IIIIIIIIII)I = GetPix2(int[], int, int, int, int, int, int, int, int, int)
org/jcodec/codecs/mpeg12/MPEGPredQuad = Org.Jcodec.Codecs.Mpeg12.MPEGPredQuad
  <init>(Lorg/jcodec/codecs/mpeg12/MPEGPred;)V = .ctor(Org.Jcodec.Codecs.Mpeg12.MPEGPred)
  getPix2([IIIIIIIIII)I = GetPix2(int[], int, int, int, int, int, int, int, int, int)
org/jcodec/codecs/mpeg12/MPEGUtil = Org.Jcodec.Codecs.Mpeg12.MPEGUtil
  <init>()V = .ctor()
  gotoMarker(Ljava/nio/ByteBuffer;III)Ljava/nio/ByteBuffer; = GotoMarker(Java.Nio.ByteBuffer, int, int, int)
  gotoNextMarker(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer; = GotoNextMarker(Java.Nio.ByteBuffer)
  nextSegment(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer; = NextSegment(Java.Nio.ByteBuffer)
org/jcodec/codecs/mpeg12/MPSMediaInfo = Org.Jcodec.Codecs.Mpeg12.MPSMediaInfo
  <init>()V = .ctor()
  getAudioTracks()Ljava/util/List; = AudioTracks
  getInfos()Ljava/util/List; = Infos
  getVideoTrack()Lorg/jcodec/codecs/mpeg12/MPSMediaInfo$MPEGTrackMetadata; = VideoTrack
  getMediaInfo(Ljava/io/File;)Ljava/util/List; = GetMediaInfo(Java.IO.File)
  main([Ljava/lang/String;)V = Main(string[])
  pes(Ljava/nio/ByteBuffer;JII)V = Pes(Java.Nio.ByteBuffer, long, int, int)
org/jcodec/codecs/mpeg12/MTSMediaInfo = Org.Jcodec.Codecs.Mpeg12.MTSMediaInfo
  <init>()V = .ctor()
  getAudioTracks()Ljava/util/List; = AudioTracks
  getVideoTrack()Lorg/jcodec/codecs/mpeg12/MPSMediaInfo$MPEGTrackMetadata; = VideoTrack
  getMediaInfo(Ljava/io/File;)Ljava/util/List; = GetMediaInfo(Java.IO.File)
  main([Ljava/lang/String;)V = Main(string[])
org/jcodec/codecs/mpeg12/SegmentReader = Org.Jcodec.Codecs.Mpeg12.SegmentReader
  <init>(Ljava/nio/channels/ReadableByteChannel;)V = .ctor(Java.Nio.Channels.IReadableByteChannel)
  <init>(Ljava/nio/channels/ReadableByteChannel;I)V = .ctor(Java.Nio.Channels.IReadableByteChannel, int)
  curMarker = CurMarker
  curPos()J = CurPos()
  read(Ljava/nio/ByteBuffer;I)Z = Read(Java.Nio.ByteBuffer, int)
  readToNextMarker(Ljava/nio/ByteBuffer;)Z = ReadToNextMarker(Java.Nio.ByteBuffer)
  skipToMarker()Z = SkipToMarker()
org/jcodec/codecs/mpeg12/SetBaseTimestamp = Org.Jcodec.Codecs.Mpeg12.SetBaseTimestamp
  <init>(ZI)V = .ctor(bool, int)
  doWithTimestamp(IJZ)J = DoWithTimestamp(int, long, bool)
  main([Ljava/lang/String;)V = Main(string[])
org/jcodec/codecs/mpeg4/es/DecoderConfig = Org.Jcodec.Codecs.Mpeg4.ES.DecoderConfig
  <init>(II)V = .ctor(int, int)
  <init>(IIII[Lorg/jcodec/codecs/mpeg4/es/Descriptor;)V = .ctor(int, int, int, int, params Org.Jcodec.Codecs.Mpeg4.ES.Descriptor[])
  getAvgBitrate()I = AvgBitrate
  getBufSize()I = BufSize
  getMaxBitrate()I = MaxBitrate
  getObjectType()I = ObjectType
  tag()I = Tag()
org/jcodec/codecs/mpeg4/es/DecoderSpecific = Org.Jcodec.Codecs.Mpeg4.ES.DecoderSpecific
  <init>(II)V = .ctor(int, int)
  <init>(Ljava/nio/ByteBuffer;)V = .ctor(Java.Nio.ByteBuffer)
  getData()Ljava/nio/ByteBuffer; = Data
  doWrite(Ljava/nio/ByteBuffer;)V = DoWrite(Java.Nio.ByteBuffer)
  parse(Ljava/nio/ByteBuffer;)V = Parse(Java.Nio.ByteBuffer)
  tag()I = Tag()
org/jcodec/codecs/mpeg4/es/Descriptor = Org.Jcodec.Codecs.Mpeg4.ES.Descriptor
  <init>(I)V = .ctor(int)
  <init>(II)V = .ctor(int, int)
  doWrite(Ljava/nio/ByteBuffer;)V = DoWrite(Java.Nio.ByteBuffer)
  find(Lorg/jcodec/codecs/mpeg4/es/Descriptor;Ljava/lang/Class;I)Ljava/lang/Object; = Find(Org.Jcodec.Codecs.Mpeg4.ES.Descriptor, Java.Lang.Class, int)
  parse(Ljava/nio/ByteBuffer;)V = Parse(Java.Nio.ByteBuffer)
  read(Ljava/nio/ByteBuffer;)Lorg/jcodec/codecs/mpeg4/es/Descriptor; = Read(Java.Nio.ByteBuffer)
  write(Ljava/nio/ByteBuffer;)V = Write(Java.Nio.ByteBuffer)
org/jcodec/codecs/mpeg4/es/DescriptorFactory = Org.Jcodec.Codecs.Mpeg4.ES.DescriptorFactory
  <init>()V = .ctor()
  byTag(I)Ljava/lang/Class; = ByTag(int)
org/jcodec/codecs/mpeg4/es/ES = Org.Jcodec.Codecs.Mpeg4.ES.ES
  <init>(I[Lorg/jcodec/codecs/mpeg4/es/Descriptor;)V = .ctor(int, params Org.Jcodec.Codecs.Mpeg4.ES.Descriptor[])
  <init>(II)V = .ctor(int, int)
  getTrackId()I = TrackId
  tag()I = Tag()
org/jcodec/codecs/mpeg4/es/NodeDescriptor = Org.Jcodec.Codecs.Mpeg4.ES.NodeDescriptor
  <init>(I)V = .ctor(int)
  <init>(I[Lorg/jcodec/codecs/mpeg4/es/Descriptor;)V = .ctor(int, Org.Jcodec.Codecs.Mpeg4.ES.Descriptor[])
  <init>(II)V = .ctor(int, int)
  getChildren()Ljava/util/Collection; = Children
  doWrite(Ljava/nio/ByteBuffer;)V = DoWrite(Java.Nio.ByteBuffer)
  parse(Ljava/nio/ByteBuffer;)V = Parse(Java.Nio.ByteBuffer)
org/jcodec/codecs/mpeg4/es/SL = Org.Jcodec.Codecs.Mpeg4.ES.SL
  <init>()V = .ctor()
  <init>(II)V = .ctor(int, int)
  doWrite(Ljava/nio/ByteBuffer;)V = DoWrite(Java.Nio.ByteBuffer)
  parse(Ljava/nio/ByteBuffer;)V = Parse(Java.Nio.ByteBuffer)
  tag()I = Tag()
org/jcodec/codecs/pcmdvd/PCMDVDDecoder = Org.Jcodec.Codecs.Pcmdvd.PCMDVDDecoder
  <init>()V = .ctor()
  decodeFrame(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lorg/jcodec/common/model/AudioBuffer; = DecodeFrame(Java.Nio.ByteBuffer, Java.Nio.ByteBuffer)
org/jcodec/codecs/ppm/PPMEncoder = Org.Jcodec.Codecs.Ppm.PPMEncoder
  <init>()V = .ctor()
  encodeFrame(Lorg/jcodec/common/model/Picture;)Ljava/nio/ByteBuffer; = EncodeFrame(Org.Jcodec.Common.Model.Picture)
org/jcodec/codecs/prores/Codebook = Org.Jcodec.Codecs.Prores.Codebook
  <init>(III)V = .ctor(int, int, int)
org/jcodec/codecs/prores/DCT2Prores = Org.Jcodec.Codecs.Prores.DCT2Prores
  <init>(Lorg/jcodec/codecs/prores/ProresEncoder$Profile;)V = .ctor(Org.Jcodec.Codecs.Prores.ProresEncoder.Profile)
org/jcodec/codecs/prores/Mpeg2Prores = Org.Jcodec.Codecs.Prores.Mpeg2Prores
  <init>(Lorg/jcodec/codecs/mpeg12/bitstream/SequenceHeader;Lorg/jcodec/codecs/mpeg12/bitstream/GOPHeader;Lorg/jcodec/codecs/prores/ProresEncoder$Profile;)V = .ctor(Org.Jcodec.Codecs.Mpeg12.Bitstream.SequenceHeader, Org.Jcodec.Codecs.Mpeg12.Bitstream.GOPHeader, Org.Jcodec.Codecs.Prores.ProresEncoder.Profile)
  idctPut([I[[IIIIIII)V = IdctPut(int[], int[][], int, int, int, int, int, int)
  transcode(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer; = Transcode(Java.Nio.ByteBuffer, Java.Nio.ByteBuffer)
org/jcodec/codecs/prores/ProresConsts = Org.Jcodec.Codecs.Prores.ProresConsts
  <init>()V = .ctor()
  dcCodebooks = DcCodebooks
  firstDCCodebook = FirstDCCodebook
  interlaced_scan = InterlacedScan
  levCodebooks = LevCodebooks
  progressive_scan = ProgressiveScan
  QMAT_CHROMA_APCH = QmatChromaApch
  QMAT_CHROMA_APCN = QmatChromaApcn
  QMAT_CHROMA_APCO = QmatChromaApco
  QMAT_CHROMA_APCS = QmatChromaApcs
  QMAT_LUMA_APCH = QmatLumaApch
  QMAT_LUMA_APCN = QmatLumaApcn
  QMAT_LUMA_APCO = QmatLumaApco
  QMAT_LUMA_APCS = QmatLumaApcs
  runCodebooks = RunCodebooks
org/jcodec/codecs/prores/ProresDecoder = Org.Jcodec.Codecs.Prores.ProresDecoder
  <init>()V = .ctor()
  decodeFields(Ljava/nio/ByteBuffer;[[[I)[Lorg/jcodec/common/model/Picture; = DecodeFields(Java.Nio.ByteBuffer, int[][][])
  decodeFrame(Ljava/nio/ByteBuffer;[[I)Lorg/jcodec/common/model/Picture; = DecodeFrame(Java.Nio.ByteBuffer, int[][])
  decodeOnePlane(Lorg/jcodec/common/io/BitReader;I[I[IIII)[I = DecodeOnePlane(Org.Jcodec.Common.IO.BitReader, int, int[], int[], int, int, int)
  decodePicture(Ljava/nio/ByteBuffer;[[IIII[I[I[III)V = DecodePicture(Java.Nio.ByteBuffer, int[][], int, int, int, int[], int[], int[], int, int)
  golumbSign(I)I = GolumbSign(int)
  golumbToSigned(I)I = GolumbToSigned(int)
  isProgressive(Ljava/nio/ByteBuffer;)Z = IsProgressive(Java.Nio.ByteBuffer)
  nZeros(I)I = NZeros(int)
  probe(Ljava/nio/ByteBuffer;)I = Probe(Java.Nio.ByteBuffer)
  putSlice([[IIII[I[I[IIII)V = PutSlice(int[][], int, int, int, int[], int[], int[], int, int, int)
  readACCoeffs(Lorg/jcodec/common/io/BitReader;[I[II[III)V = ReadACCoeffs(Org.Jcodec.Common.IO.BitReader, int[], int[], int, int[], int, int)
  readCodeword(Lorg/jcodec/common/io/BitReader;Lorg/jcodec/codecs/prores/Codebook;)I = ReadCodeword(Org.Jcodec.Common.IO.BitReader, Org.Jcodec.Codecs.Prores.Codebook)
  readDCCoeffs(Lorg/jcodec/common/io/BitReader;[I[III)V = ReadDCCoeffs(Org.Jcodec.Common.IO.BitReader, int[], int[], int, int)
  readFrameHeader(Ljava/nio/ByteBuffer;)Lorg/jcodec/codecs/prores/ProresConsts$FrameHeader; = ReadFrameHeader(Java.Nio.ByteBuffer)
  readPictureHeader(Ljava/nio/ByteBuffer;)Lorg/jcodec/codecs/prores/ProresConsts$PictureHeader; = ReadPictureHeader(Java.Nio.ByteBuffer)
  scaleMat([II)[I = ScaleMat(int[], int)
org/jcodec/codecs/prores/ProresEncoder = Org.Jcodec.Codecs.Prores.ProresEncoder
  <init>(Lorg/jcodec/codecs/prores/ProresEncoder$Profile;)V = .ctor(Org.Jcodec.Codecs.Prores.ProresEncoder.Profile)
  profile = Profile
  encodeFrame(Ljava/nio/ByteBuffer;[Lorg/jcodec/common/model/Picture;)V = EncodeFrame(Java.Nio.ByteBuffer, params Org.Jcodec.Common.Model.Picture[])
  encodePicture(Ljava/nio/ByteBuffer;[[I[[I[ILorg/jcodec/common/model/Picture;)V = EncodePicture(Java.Nio.ByteBuffer, int[][], int[][], int[], Org.Jcodec.Common.Model.Picture)
  encodeSlice(Ljava/nio/ByteBuffer;[[I[[I[IIIILorg/jcodec/common/model/Picture;IIIZ)I = EncodeSlice(Java.Nio.ByteBuffer, int[][], int[][], int[], int, int, int, Org.Jcodec.Common.Model.Picture, int, int, int, bool)
  encodeSliceData(Ljava/nio/ByteBuffer;[I[I[IILorg/jcodec/common/model/Picture;I[I)V = EncodeSliceData(Java.Nio.ByteBuffer, int[], int[], int[], int, Org.Jcodec.Common.Model.Picture, int, int[])
  getLevel(I)I = GetLevel(int)
  writeCodeword(Lorg/jcodec/common/io/BitWriter;Lorg/jcodec/codecs/prores/Codebook;I)V = WriteCodeword(Org.Jcodec.Common.IO.BitWriter, Org.Jcodec.Codecs.Prores.Codebook, int)
  writeFrameHeader(Ljava/nio/ByteBuffer;Lorg/jcodec/codecs/prores/ProresConsts$FrameHeader;)V = WriteFrameHeader(Java.Nio.ByteBuffer, Org.Jcodec.Codecs.Prores.ProresConsts.FrameHeader)
  writePictureHeader(IILjava/nio/ByteBuffer;)V = WritePictureHeader(int, int, Java.Nio.ByteBuffer)
org/jcodec/codecs/prores/ProresFix = Org.Jcodec.Codecs.Prores.ProresFix
  <init>()V = .ctor()
  check(Ljava/nio/ByteBuffer;)Ljava/util/List; = Check(Java.Nio.ByteBuffer)
  transcode(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer; = Transcode(Java.Nio.ByteBuffer, Java.Nio.ByteBuffer)
org/jcodec/codecs/prores/ProresToProxy = Org.Jcodec.Codecs.Prores.ProresToProxy
  <init>(III)V = .ctor(int, int, int)
  getFrameSize()I = FrameSize
  transcode(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V = Transcode(Java.Nio.ByteBuffer, Java.Nio.ByteBuffer)
org/jcodec/codecs/prores/ProresToThumb = Org.Jcodec.Codecs.Prores.ProresToThumb
  <init>()V = .ctor()
org/jcodec/codecs/prores/ProresToThumb2x2 = Org.Jcodec.Codecs.Prores.ProresToThumb2x2
  <init>()V = .ctor()
org/jcodec/codecs/prores/ProresToThumb4x4 = Org.Jcodec.Codecs.Prores.ProresToThumb4x4
  <init>()V = .ctor()
  interlaced_scan_4x4 = InterlacedScan4x4
  progressive_scan_4x4 = ProgressiveScan4x4
org/jcodec/codecs/raw/V210Decoder = Org.Jcodec.Codecs.Raw.V210Decoder
  <init>(II)V = .ctor(int, int)
  decode([B)Lorg/jcodec/common/model/Picture; = Decode(byte[])
org/jcodec/codecs/raw/V210Encoder = Org.Jcodec.Codecs.Raw.V210Encoder
  <init>()V = .ctor()
  encodeFrame(Ljava/nio/ByteBuffer;Lorg/jcodec/common/model/Picture;)Ljava/nio/ByteBuffer; = EncodeFrame(Java.Nio.ByteBuffer, Org.Jcodec.Common.Model.Picture)
org/jcodec/codecs/s302/S302MDecoder = Org.Jcodec.Codecs.S302.S302MDecoder
  <init>()V = .ctor()
  SAMPLE_RATE = SampleRate
  decodeFrame(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)Lorg/jcodec/common/model/AudioBuffer; = DecodeFrame(Java.Nio.ByteBuffer, Java.Nio.ByteBuffer)
org/jcodec/codecs/s302/S302MUtils = Org.Jcodec.Codecs.S302.S302MUtils
  <init>()V = .ctor()
  labels(I)[Lorg/jcodec/common/model/ChannelLabel; = Labels(int)
  name(I)Ljava/lang/String; = Name(int)
org/jcodec/codecs/vp8/BooleanArithmeticDecoder = Org.Jcodec.Codecs.Vp8.BooleanArithmeticDecoder
  <init>(Ljava/nio/ByteBuffer;I)V = .ctor(Java.Nio.ByteBuffer, int)
  <init>(Ljava/nio/ByteBuffer;ILjava/lang/String;)V = .ctor(Java.Nio.ByteBuffer, int, string)
  decodeBit()I = DecodeBit()
  decodeBool(I)I = DecodeBool(int)
  decodeInt(I)I = DecodeInt(int)
  getBitInBytes([BI)I = GetBitInBytes(byte[], int)
  getBitsInBytes([BII)I = GetBitsInBytes(byte[], int, int)
  leadingZeroCountInByte(B)I = LeadingZeroCountInByte(sbyte)
  readTree([I[I)I = ReadTree(int[], int[])
  readTreeSkip([I[II)I = ReadTreeSkip(int[], int[], int)
  seek()V = Seek()
org/jcodec/codecs/vp8/FilterUtil = Org.Jcodec.Codecs.Vp8.FilterUtil
  <init>()V = .ctor()
  loopFilterUV([[Lorg/jcodec/codecs/vp8/Macroblock;IZ)V = LoopFilterUV(Org.Jcodec.Codecs.Vp8.Macroblock[][], int, bool)
  loopFilterY([[Lorg/jcodec/codecs/vp8/Macroblock;IZ)V = LoopFilterY(Org.Jcodec.Codecs.Vp8.Macroblock[][], int, bool)
org/jcodec/codecs/vp8/Macroblock = Org.Jcodec.Codecs.Vp8.Macroblock
  <init>(II)V = .ctor(int, int)
  chromaMode = ChromaMode
  column = Column
  debug = Debug
  filterLevel = FilterLevel
  lumaMode = LumaMode
  Rrow = Rrow
  segment = Segment
  skipCoeff = SkipCoeff
  uSubblocks = USubblocks
  vSubblocks = VSubblocks
  y2 = Y2
  ySubblocks = YSubblocks
  decodeMacroBlock([[Lorg/jcodec/codecs/vp8/Macroblock;Lorg/jcodec/codecs/vp8/BooleanArithmeticDecoder;[[[[I)V = DecodeMacroBlock(Org.Jcodec.Codecs.Vp8.Macroblock[][], Org.Jcodec.Codecs.Vp8.BooleanArithmeticDecoder, int[][][][])
  dequantMacroBlock([[Lorg/jcodec/codecs/vp8/Macroblock;Lorg/jcodec/codecs/vp8/VP8Util$QuantizationParams;)V = DequantMacroBlock(Org.Jcodec.Codecs.Vp8.Macroblock[][], Org.Jcodec.Codecs.Vp8.VP8Util.QuantizationParams)
  getBottomSubblock(ILorg/jcodec/codecs/vp8/VP8Util$PLANE;)Lorg/jcodec/codecs/vp8/Macroblock$Subblock; = GetBottomSubblock(int, Org.Jcodec.Codecs.Vp8.VP8Util.PLANE)
  getRightSubBlock(ILorg/jcodec/codecs/vp8/VP8Util$PLANE;)Lorg/jcodec/codecs/vp8/Macroblock$Subblock; = GetRightSubBlock(int, Org.Jcodec.Codecs.Vp8.VP8Util.PLANE)
  predictUV([[Lorg/jcodec/codecs/vp8/Macroblock;)V = PredictUV(Org.Jcodec.Codecs.Vp8.Macroblock[][])
  reconstruct()V = Reconstruct()
org/jcodec/codecs/vp8/VP8DCT = Org.Jcodec.Codecs.Vp8.VP8DCT
  <init>()V = .ctor()
  decodeDCT([I)[I = DecodeDCT(int[])
  decodeWHT([I)[I = DecodeWHT(int[])
  encodeDCT([I)[I = EncodeDCT(int[])
  encodeWHT([I)[I = EncodeWHT(int[])
org/jcodec/codecs/vp8/VP8Decoder = Org.Jcodec.Codecs.Vp8.VP8Decoder
  <init>()V = .ctor()
  getPicture()Lorg/jcodec/common/model/Picture; = Picture
  decode(Ljava/nio/ByteBuffer;)V = Decode(Java.Nio.ByteBuffer)
  printHexByte(B)Ljava/lang/String; = PrintHexByte(sbyte)
org/jcodec/codecs/vp8/VP8Util = Org.Jcodec.Codecs.Vp8.VP8Util
  <init>()V = .ctor()
  BLOCK_TYPES = BlockTypes
  COEF_BANDS = CoefBands
  keyFrameYModeProb = KeyFrameYModeProb
  keyFrameYModeTree = KeyFrameYModeTree
  MAX_ENTROPY_TOKENS = MaxEntropyTokens
  MAX_MODE_LF_DELTAS = MaxModeLfDeltas
  MAX_REF_LF_DELTAS = MaxRefLfDeltas
  MB_FEATURE_TREE_PROBS = MbFeatureTreeProbs
  PRED_BLOCK_127 = PredBlock127
  PRED_BLOCK_129 = PredBlock129
  PREV_COEF_CONTEXTS = PrevCoefContexts
  vp8KeyFrameUVModeProb = Vp8KeyFrameUVModeProb
  vp8UVModeTree = Vp8UVModeTree
  avg2(II)I = Avg2(int, int)
  avg3(III)I = Avg3(int, int, int)
  delta(Lorg/jcodec/codecs/vp8/BooleanArithmeticDecoder;)I = Delta(Org.Jcodec.Codecs.Vp8.BooleanArithmeticDecoder)
  getBitInBytes([BI)I = GetBitInBytes(byte[], int)
  getBitsInBytes([BII)I = GetBitsInBytes(byte[], int, int)
  getDefaultCoefProbs()[[[[I = GetDefaultCoefProbs()
  getMacroblockCount(I)I = GetMacroblockCount(int)
  pickDefaultPrediction(I)[I = PickDefaultPrediction(int)
  planeToType(Lorg/jcodec/codecs/vp8/VP8Util$PLANE;Ljava/lang/Boolean;)I = PlaneToType(Org.Jcodec.Codecs.Vp8.VP8Util.PLANE, Java.Lang.Boolean)
  predictDC([I[I)[I = PredictDC(int[], int[])
  predictHD([I[II)[I = PredictHD(int[], int[], int)
  predictHE([II)[I = PredictHE(int[], int)
  predictHU([I)[I = PredictHU(int[])
  predictLD([I[I)[I = PredictLD(int[], int[])
  predictRD([I[II)[I = PredictRD(int[], int[], int)
  predictTM([I[II)[I = PredictTM(int[], int[], int)
  predictVE([II[I)[I = PredictVE(int[], int, int[])
  predictVL([I[I)[I = PredictVL(int[], int[])
  predictVR([I[II)[I = PredictVR(int[], int[], int)
org/jcodec/codecs/vpx/IVFMuxer = Org.Jcodec.Codecs.Vpx.IVFMuxer
  addFrame(Lorg/jcodec/common/model/Packet;)V = AddFrame(Org.Jcodec.Common.Model.Packet)
  close()V = Close()
org/jcodec/codecs/vpx/NopRateControl = Org.Jcodec.Codecs.Vpx.NopRateControl
  <init>(I)V = .ctor(int)
  getSegment()I = Segment
  getSegmentQps()[I = GetSegmentQps()
  report(I)V = Report(int)
  reset()V = Reset()
org/jcodec/codecs/vpx/RateControl = Org.Jcodec.Codecs.Vpx.IRateControl
  getSegment()I = Segment
  getSegmentQps()[I = GetSegmentQps()
  report(I)V = Report(int)
  reset()V = Reset()
org/jcodec/codecs/vpx/VP8Encoder = Org.Jcodec.Codecs.Vpx.VP8Encoder
  <init>(I)V = .ctor(int)
  <init>(Lorg/jcodec/codecs/vpx/RateControl;)V = .ctor(Org.Jcodec.Codecs.Vpx.IRateControl)
  encodeFrame(Lorg/jcodec/common/model/Picture;Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer; = EncodeFrame(Org.Jcodec.Common.Model.Picture, Java.Nio.ByteBuffer)
  getSupportedColorSpaces()[Lorg/jcodec/common/model/ColorSpace; = GetSupportedColorSpaces()
org/jcodec/codecs/vpx/VP8FixedRateControl = Org.Jcodec.Codecs.Vpx.VP8FixedRateControl
  <init>(I)V = .ctor(int)
  getSegment()I = Segment
  getSegmentQps()[I = GetSegmentQps()
  report(I)V = Report(int)
  reset()V = Reset()
org/jcodec/codecs/vpx/VPXBitstream = Org.Jcodec.Codecs.Vpx.VPXBitstream
  <init>([[[[II)V = .ctor(int[][][][], int)
  coeffBandMapping = CoeffBandMapping
  encodeCoeffs(Lorg/jcodec/codecs/common/biari/VPxBooleanEncoder;[IIIII)V = EncodeCoeffs(Org.Jcodec.Codecs.Common.Biari.VPxBooleanEncoder, int[], int, int, int, int)
  encodeCoeffsDCT15(Lorg/jcodec/codecs/common/biari/VPxBooleanEncoder;[IIII)V = EncodeCoeffsDCT15(Org.Jcodec.Codecs.Common.Biari.VPxBooleanEncoder, int[], int, int, int)
  encodeCoeffsDCT16(Lorg/jcodec/codecs/common/biari/VPxBooleanEncoder;[IIII)V = EncodeCoeffsDCT16(Org.Jcodec.Codecs.Common.Biari.VPxBooleanEncoder, int[], int, int, int)
  encodeCoeffsDCTUV(Lorg/jcodec/codecs/common/biari/VPxBooleanEncoder;[IIIII)V = EncodeCoeffsDCTUV(Org.Jcodec.Codecs.Common.Biari.VPxBooleanEncoder, int[], int, int, int, int)
  encodeCoeffsWHT(Lorg/jcodec/codecs/common/biari/VPxBooleanEncoder;[II)V = EncodeCoeffsWHT(Org.Jcodec.Codecs.Common.Biari.VPxBooleanEncoder, int[], int)
org/jcodec/codecs/vpx/VPXConst = Org.Jcodec.Codecs.Vpx.VPXConst
  <init>()V = .ctor()
  ac_qlookup = AcQlookup
  dc_qlookup = DcQlookup
  probCoeffExtCat5 = ProbCoeffExtCat5
  probCoeffExtCat6 = ProbCoeffExtCat6
  tokenDefaultBinProbs = TokenDefaultBinProbs
  tokenProbUpdateFlagProbs = TokenProbUpdateFlagProbs
  vp8Norm = Vp8Norm
  zigzag = Zigzag
org/jcodec/codecs/vpx/VPXDCT = Org.Jcodec.Codecs.Vpx.VPXDCT
  <init>()V = .ctor()
  cospi8sqrt2minus1 = Cospi8sqrt2minus1
  sinpi8sqrt2 = Sinpi8sqrt2
  fdct4x4([I)V = Fdct4x4(int[])
  idct4x4([I)V = Idct4x4(int[])
  iwalsh4x4([I)V = Iwalsh4x4(int[])
  walsh4x4([I)V = Walsh4x4(int[])
org/jcodec/codecs/vpx/VPXQuantizer = Org.Jcodec.Codecs.Vpx.VPXQuantizer
  <init>()V = .ctor()
  dequantizeUV([II)V = DequantizeUV(int[], int)
  dequantizeY([II)V = DequantizeY(int[], int)
  dequantizeY2([II)V = DequantizeY2(int[], int)
  quantizeUV([II)V = QuantizeUV(int[], int)
  quantizeY([II)V = QuantizeY(int[], int)
  quantizeY2([II)V = QuantizeY2(int[], int)
org/jcodec/codecs/wav/ReaderLE = Org.Jcodec.Codecs.Wav.ReaderLE
  <init>()V = .ctor()
  readInt(Ljava/io/InputStream;)I = ReadInt(System.IO.Stream)
  readLong(Ljava/io/InputStream;)J = ReadLong(System.IO.Stream)
  readShort(Ljava/io/InputStream;)S = ReadShort(System.IO.Stream)
org/jcodec/codecs/wav/StringReader = Org.Jcodec.Codecs.Wav.StringReader
  <init>()V = .ctor()
  readString(Ljava/io/InputStream;I)Ljava/lang/String; = ReadString(System.IO.Stream, int)
  sureRead(Ljava/io/InputStream;[BI)I = SureRead(System.IO.Stream, byte[], int)
  sureRead(Ljava/io/InputStream;I)[B = SureRead(System.IO.Stream, int)
  sureSkip(Ljava/io/InputStream;J)V = SureSkip(System.IO.Stream, long)
org/jcodec/codecs/wav/WavHeader = Org.Jcodec.Codecs.Wav.WavHeader
  <init>(Ljava/lang/String;ILjava/lang/String;Lorg/jcodec/codecs/wav/WavHeader$FmtChunk;IJ)V = .ctor(string, int, string, Org.Jcodec.Codecs.Wav.WavHeader.FmtChunk, int, long)
  <init>(Lorg/jcodec/codecs/wav/WavHeader;)V = .ctor(Org.Jcodec.Codecs.Wav.WavHeader)
  chunkId = ChunkId
  chunkSize = ChunkSize
  dataOffset = DataOffset
  dataSize = DataSize
  fmt = Fmt
  format = Format
  WAV_HEADER_SIZE = WavHeaderSize
  calcDataSize(IIJ)J = CalcDataSize(int, int, long)
  copyWithChannels(Lorg/jcodec/codecs/wav/WavHeader;I)Lorg/jcodec/codecs/wav/WavHeader; = CopyWithChannels(Org.Jcodec.Codecs.Wav.WavHeader, int)
  copyWithRate(Lorg/jcodec/codecs/wav/WavHeader;I)Lorg/jcodec/codecs/wav/WavHeader; = CopyWithRate(Org.Jcodec.Codecs.Wav.WavHeader, int)
  emptyWavHeader()Lorg/jcodec/codecs/wav/WavHeader; = EmptyWavHeader()
  getChannelLabels()[Lorg/jcodec/common/model/ChannelLabel; = GetChannelLabels()
  mono48k(J)Lorg/jcodec/codecs/wav/WavHeader; = Mono48k(long)
  multiChannelWav([Ljava/io/File;)Lorg/jcodec/codecs/wav/WavHeader; = MultiChannelWav(params Java.IO.File[])
  multiChannelWav(Ljava/util/List;)Lorg/jcodec/codecs/wav/WavHeader; = MultiChannelWav(System.Collections.Generic.IList<Java.IO.File>)
  multiChannelWav([Lorg/jcodec/codecs/wav/WavHeader;)Lorg/jcodec/codecs/wav/WavHeader; = MultiChannelWav(params Org.Jcodec.Codecs.Wav.WavHeader[])
  read(Ljava/io/File;)Lorg/jcodec/codecs/wav/WavHeader; = Read(Java.IO.File)
  read(Ljava/nio/channels/ReadableByteChannel;)Lorg/jcodec/codecs/wav/WavHeader; = Read(Java.Nio.Channels.IReadableByteChannel)
  stereo48k()Lorg/jcodec/codecs/wav/WavHeader; = Stereo48k()
  stereo48k(J)Lorg/jcodec/codecs/wav/WavHeader; = Stereo48k(long)
  write(Ljava/nio/channels/WritableByteChannel;)V = Write(Java.Nio.Channels.IWritableByteChannel)
org/jcodec/codecs/wav/WavInput = Org.Jcodec.Codecs.Wav.WavInput
  <init>(Ljava/nio/channels/ReadableByteChannel;)V = .ctor(Java.Nio.Channels.IReadableByteChannel)
  header = Header
  in = In
  prevBuf = PrevBuf
  getHeader()Lorg/jcodec/codecs/wav/WavHeader; = Header
  close()V = Close()
  read(Ljava/nio/ByteBuffer;)I = Read(Java.Nio.ByteBuffer)
org/jcodec/codecs/wav/WavOutput = Org.Jcodec.Codecs.Wav.WavOutput
  header = Header
  written = Written
  close()V = Close()
  write(Ljava/nio/ByteBuffer;)V = Write(Java.Nio.ByteBuffer)
org/jcodec/codecs/wav/WriterLE = Org.Jcodec.Codecs.Wav.WriterLE
  <init>()V = .ctor()
  writeInt(Ljava/io/OutputStream;I)V = WriteInt(System.IO.Stream, int)
  writeLong(Ljava/io/OutputStream;J)V = WriteLong(System.IO.Stream, long)
  writeShort(Ljava/io/OutputStream;S)V = WriteShort(System.IO.Stream, short)
org/jcodec/codecs/y4m/Y4MDecoder = Org.Jcodec.Codecs.Y4m.Y4MDecoder
  getFps()Lorg/jcodec/common/model/Rational; = Fps
  getHeight()I = Height
  getSize()Lorg/jcodec/common/model/Size; = Size
  getWidth()I = Width
  nextFrame([[I)Lorg/jcodec/common/model/Picture; = NextFrame(int[][])
org/jcodec/common/dct/DCT = Org.Jcodec.Common.Dct.DCT
  <init>()V = .ctor()
  decode([I)[I = Decode(int[])
  decodeAll([[I)V = DecodeAll(int[][])
  encode([B)[S = Encode(byte[])
org/jcodec/common/dct/DCTRef = Org.Jcodec.Common.Dct.DCTRef
  <init>()V = .ctor()
  fdct([II)V = Fdct(int[], int)
  idct([II)V = Idct(int[], int)
org/jcodec/common/dct/FfmpegIntDct = Org.Jcodec.Common.Dct.FfmpegIntDct
  <init>()V = .ctor()
  decode([S)[S = Decode(short[])
org/jcodec/common/dct/IDCT2x2 = Org.Jcodec.Common.Dct.IDCT2x2
  <init>()V = .ctor()
  idct([II)V = Idct(int[], int)
org/jcodec/common/dct/IDCT4x4 = Org.Jcodec.Common.Dct.IDCT4x4
  <init>()V = .ctor()
  C1 = C1
  C2 = C2
  C3 = C3
  CN_SHIFT = CnShift
  C_SHIFT = CShift
  R1 = R1
  R2 = R2
  R3 = R3
  RN_SHIFT = RnShift
  R_SHIFT = RShift
  C_FIX(D)I = C_FIX(double)
  idct([II)V = Idct(int[], int)
  R_FIX(D)I = R_FIX(double)
org/jcodec/common/dct/IntDCT = Org.Jcodec.Common.Dct.IntDCT
  <init>()V = .ctor()
  INSTANCE = Instance
  decode([I)[I = Decode(int[])
  decode(Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;)Ljava/nio/IntBuffer; = Decode(Java.Nio.IntBuffer, Java.Nio.IntBuffer, Java.Nio.IntBuffer)
  range_limit(I)I = Range_limit(int)
org/jcodec/common/dct/SimpleIDCT10Bit = Org.Jcodec.Common.Dct.SimpleIDCT10Bit
  <init>()V = .ctor()
  COL_SHIFT = ColShift
  ROW_SHIFT = RowShift
  W1 = W1
  W2 = W2
  W3 = W3
  W4 = W4
  W5 = W5
  W6 = W6
  W7 = W7
  idct10([II)V = Idct10(int[], int)
org/jcodec/common/dct/SlowDCT = Org.Jcodec.Common.Dct.SlowDCT
  <init>()V = .ctor()
  INSTANCE = Instance
  decode([I)[I = Decode(int[])
org/jcodec/common/dct/SparseIDCT = Org.Jcodec.Common.Dct.SparseIDCT
  <init>()V = .ctor()
  COEFF = Coeff
  DC_SHIFT = DcShift
  PRECISION = Precision
  coeff([III)V = Coeff(int[], int, int)
  finish([I)V = Finish(int[])
  start([II)V = Start(int[], int)
org/jcodec/common/io/AutoPool = Org.Jcodec.Common.IO.AutoPool
  getInstance()Lorg/jcodec/common/io/AutoPool; = Instance
  add(Lorg/jcodec/common/io/AutoResource;)V = Add(Org.Jcodec.Common.IO.IAutoResource)
org/jcodec/common/io/AutoResource = Org.Jcodec.Common.IO.IAutoResource
  setCurTime(J)V = SetCurTime(long)
org/jcodec/common/io/BitReader = Org.Jcodec.Common.IO.BitReader
  <init>(Ljava/nio/ByteBuffer;)V = .ctor(Java.Nio.ByteBuffer)
  curInt = CurInt
  deficit = Deficit
  isByteAligned()Z = IsByteAligned
  align()I = Align()
  check16Bits()I = Check16Bits()
  check24Bits()I = Check24Bits()
  checkAllBits()I = CheckAllBits()
  checkNBit(I)I = CheckNBit(int)
  curBit()I = CurBit()
  fork()Lorg/jcodec/common/io/BitReader; = Fork()
  lastByte()Z = LastByte()
  moreData()Z = MoreData()
  position()I = Position()
  read1Bit()I = Read1Bit()
  readFast16(I)I = ReadFast16(int)
  readInt()I = ReadInt()
  readNBit(I)I = ReadNBit(int)
  remaining()I = Remaining()
  skip(I)I = Skip(int)
  skipFast(I)I = SkipFast(int)
  stop()V = Stop()
  terminate()V = Terminate()
org/jcodec/common/io/BitWriter = Org.Jcodec.Common.IO.BitWriter
  <init>(Ljava/nio/ByteBuffer;)V = .ctor(Java.Nio.ByteBuffer)
  getBuffer()Ljava/nio/ByteBuffer; = Buffer
  curBit()I = CurBit()
  flush()V = Flush()
  fork()Lorg/jcodec/common/io/BitWriter; = Fork()
  position()I = Position()
  write1Bit(I)V = Write1Bit(int)
  writeNBit(II)V = WriteNBit(int, int)
org/jcodec/common/io/DummyBitstreamReader = Org.Jcodec.Common.IO.DummyBitstreamReader
  <init>(Ljava/io/InputStream;)V = .ctor(System.IO.Stream)
  bitsRead = BitsRead
  getBitPosition()J = BitPosition
  getCurBit()I = CurBit
  isByteAligned()Z = IsByteAligned
  align()I = Align()
  checkNBit(I)I = CheckNBit(int)
  close()V = Close()
  curBit()I = InvokeCurBit()
  lastByte()Z = LastByte()
  moreData()Z = MoreData()
  moreData(I)Z = MoreData(int)
  moreRBSPData()Z = MoreRBSPData()
  peakNextBits(I)I = PeakNextBits(int)
  read1Bit()I = Read1Bit()
  read1BitInt()I = Read1BitInt()
  readByte()I = ReadByte()
  readNBit(I)I = ReadNBit(int)
  readRemainingByte()J = ReadRemainingByte()
  skip(I)I = Skip(int)
org/jcodec/common/io/VLC = Org.Jcodec.Common.IO.VLC
  <init>([I[I)V = .ctor(int[], int[])
  <init>([Ljava/lang/String;)V = .ctor(params string[])
  getCodes()[I = GetCodes()
  getCodeSizes()[I = GetCodeSizes()
  printTable(Ljava/io/PrintStream;)V = PrintTable(Java.IO.PrintStream)
  readVLC(Lorg/jcodec/common/io/BitReader;)I = ReadVLC(Org.Jcodec.Common.IO.BitReader)
  readVLC16(Lorg/jcodec/common/io/BitReader;)I = ReadVLC16(Org.Jcodec.Common.IO.BitReader)
  writeVLC(Lorg/jcodec/common/io/BitWriter;I)V = WriteVLC(Org.Jcodec.Common.IO.BitWriter, int)
org/jcodec/common/io/VLCBuilder = Org.Jcodec.Common.IO.VLCBuilder
  <init>()V = .ctor()
  <init>([I[I[I)V = .ctor(int[], int[], int[])
  getVLC()Lorg/jcodec/common/io/VLC; = VLC
  set(III)Lorg/jcodec/common/io/VLCBuilder; = Set(int, int, int)
  set(ILjava/lang/String;)Lorg/jcodec/common/io/VLCBuilder; = Set(int, string)
org/jcodec/common/logging/BufferLogSink = Org.Jcodec.Common.Logging.BufferLogSink
  <init>()V = .ctor()
  getMessages()Ljava/util/List; = Messages
  postMessage(Lorg/jcodec/common/logging/Logger$Message;)V = PostMessage(Org.Jcodec.Common.Logging.Logger.Message)
org/jcodec/common/logging/Logger = Org.Jcodec.Common.Logging.Logger
  <init>()V = .ctor()
  addSink(Lorg/jcodec/common/logging/Logger$LogSink;)V = AddSink(Org.Jcodec.Common.Logging.Logger.ILogSink)
  debug(Ljava/lang/String;)V = Debug(string)
  error(Ljava/lang/String;)V = Error(string)
  info(Ljava/lang/String;)V = Info(string)
  warn(Ljava/lang/String;)V = Warn(string)
org/jcodec/common/logging/OutLogSink = Org.Jcodec.Common.Logging.OutLogSink
  <init>()V = .ctor()
  <init>(Ljava/io/PrintStream;Lorg/jcodec/common/logging/OutLogSink$MessageFormat;)V = .ctor(Java.IO.PrintStream, Org.Jcodec.Common.Logging.OutLogSink.IMessageFormat)
  <init>(Lorg/jcodec/common/logging/OutLogSink$MessageFormat;)V = .ctor(Org.Jcodec.Common.Logging.OutLogSink.IMessageFormat)
  DEFAULT_FORMAT = DefaultFormat
  postMessage(Lorg/jcodec/common/logging/Logger$Message;)V = PostMessage(Org.Jcodec.Common.Logging.Logger.Message)
org/jcodec/common/model/AudioBuffer = Org.Jcodec.Common.Model.AudioBuffer
  <init>(Lorg/jcodec/common/model/AudioBuffer;)V = .ctor(Org.Jcodec.Common.Model.AudioBuffer)
  getData()Ljava/nio/ByteBuffer; = Data
  getNFrames()I = NFrames
org/jcodec/common/model/AudioFrame = Org.Jcodec.Common.Model.AudioFrame
  <init>(Lorg/jcodec/common/model/AudioBuffer;JJJI)V = .ctor(Org.Jcodec.Common.Model.AudioBuffer, long, long, long, int)
  getDuration()J = Duration
  getFrameNo()I = FrameNo
  getPts()J = Pts
  getTimescale()J = Timescale
org/jcodec/common/model/ChannelLabel = Org.Jcodec.Common.Model.ChannelLabel
  CENTER = Center
  FRONT_CENTER_LEFT = FrontCenterLeft
  FRONT_CENTER_RIGHT = FrontCenterRight
  FRONT_LEFT = FrontLeft
  FRONT_RIGHT = FrontRight
  LEFT_TOTAL = LeftTotal
  LFE = Lfe
  MONO = Mono
  REAR_CENTER = RearCenter
  REAR_LEFT = RearLeft
  REAR_RIGHT = RearRight
  RIGHT_TOTAL = RightTotal
  SIDE_LEFT = SideLeft
  SIDE_RIGHT = SideRight
  STEREO_LEFT = StereoLeft
  STEREO_RIGHT = StereoRight
  valueOf(Ljava/lang/String;)Lorg/jcodec/common/model/ChannelLabel; = ValueOf(string)
  values()[Lorg/jcodec/common/model/ChannelLabel; = Values()
org/jcodec/common/model/ColorSpace = Org.Jcodec.Common.Model.ColorSpace
  compHeight = CompHeight
  compPlane = CompPlane
  compWidth = CompWidth
  GREY = Grey
  MAX_PLANES = MaxPlanes
  MONO = Mono
  nComp = NComp
  RGB = Rgb
  YUV420 = Yuv420
  YUV420J = Yuv420j
  YUV422 = Yuv422
  YUV422_10 = Yuv42210
  YUV422J = Yuv422j
  YUV444 = Yuv444
  YUV444_10 = Yuv44410
  YUV444J = Yuv444j
  valueOf(Ljava/lang/String;)Lorg/jcodec/common/model/ColorSpace; = ValueOf(string)
  values()[Lorg/jcodec/common/model/ColorSpace; = Values()
org/jcodec/common/model/Frame = Org.Jcodec.Common.Model.Frame
  <init>(Lorg/jcodec/common/model/Picture;Lorg/jcodec/common/model/RationalLarge;Lorg/jcodec/common/model/RationalLarge;Lorg/jcodec/common/model/Rational;ILorg/jcodec/common/model/TapeTimecode;Ljava/util/List;)V = .ctor(Org.Jcodec.Common.Model.Picture, Org.Jcodec.Common.Model.RationalLarge, Org.Jcodec.Common.Model.RationalLarge, Org.Jcodec.Common.Model.Rational, int, Org.Jcodec.Common.Model.TapeTimecode, System.Collections.Generic.IList<string>)
  getDuration()Lorg/jcodec/common/model/RationalLarge; = Duration
  getFrameNo()I = FrameNo
  isAvailable()Z = IsAvailable
  getMessages()Ljava/util/List; = Messages
  getPic()Lorg/jcodec/common/model/Picture; = Pic
  getPixelAspect()Lorg/jcodec/common/model/Rational; = PixelAspect
  getPts()Lorg/jcodec/common/model/RationalLarge; = Pts
  getTapeTimecode()Lorg/jcodec/common/model/TapeTimecode; = TapeTimecode
org/jcodec/common/model/Packet = Org.Jcodec.Common.Model.Packet
  <init>(Ljava/nio/ByteBuffer;JJJJZLorg/jcodec/common/model/TapeTimecode;)V = .ctor(Java.Nio.ByteBuffer, long, long, long, long, bool, Org.Jcodec.Common.Model.TapeTimecode)
  <init>(Ljava/nio/ByteBuffer;JJJJZLorg/jcodec/common/model/TapeTimecode;I)V = .ctor(Java.Nio.ByteBuffer, long, long, long, long, bool, Org.Jcodec.Common.Model.TapeTimecode, int)
  <init>(Lorg/jcodec/common/model/Packet;)V = .ctor(Org.Jcodec.Common.Model.Packet)
  <init>(Lorg/jcodec/common/model/Packet;Ljava/nio/ByteBuffer;)V = .ctor(Org.Jcodec.Common.Model.Packet, Java.Nio.ByteBuffer)
  <init>(Lorg/jcodec/common/model/Packet;Lorg/jcodec/common/model/TapeTimecode;)V = .ctor(Org.Jcodec.Common.Model.Packet, Org.Jcodec.Common.Model.TapeTimecode)
  FRAME_ASC = FrameAsc
  getData()Ljava/nio/ByteBuffer; = Data
  setData(Ljava/nio/ByteBuffer;)V = Data
  getDisplayOrder()I = DisplayOrder
  setDisplayOrder(I)V = DisplayOrder
  getDuration()J = Duration
  getDurationD()D = DurationD
  getFrameNo()J = FrameNo
  isKeyFrame()Z = IsKeyFrame
  getPts()J = Pts
  getPtsD()D = PtsD
  getPtsR()Lorg/jcodec/common/model/RationalLarge; = PtsR
  getTapeTimecode()Lorg/jcodec/common/model/TapeTimecode; = TapeTimecode
  setTapeTimecode(Lorg/jcodec/common/model/TapeTimecode;)V = TapeTimecode
  getTimescale()J = Timescale
  setTimescale(I)V = SetTimescale(int)
org/jcodec/common/model/Picture = Org.Jcodec.Common.Model.Picture
  <init>(II[[ILorg/jcodec/common/model/ColorSpace;)V = .ctor(int, int, int[][], Org.Jcodec.Common.Model.ColorSpace)
  <init>(II[[ILorg/jcodec/common/model/ColorSpace;Lorg/jcodec/common/model/Rect;)V = .ctor(int, int, int[][], Org.Jcodec.Common.Model.ColorSpace, Org.Jcodec.Common.Model.Rect)
  <init>(Lorg/jcodec/common/model/Picture;)V = .ctor(Org.Jcodec.Common.Model.Picture)
  getColor()Lorg/jcodec/common/model/ColorSpace; = Color
  getCrop()Lorg/jcodec/common/model/Rect; = Crop
  setCrop(Lorg/jcodec/common/model/Rect;)V = Crop
  getCroppedHeight()I = CroppedHeight
  getCroppedWidth()I = CroppedWidth
  getHeight()I = Height
  getWidth()I = Width
  compatible(Lorg/jcodec/common/model/Picture;)Z = Compatible(Org.Jcodec.Common.Model.Picture)
  copyFrom(Lorg/jcodec/common/model/Picture;)V = CopyFrom(Org.Jcodec.Common.Model.Picture)
  create(IILorg/jcodec/common/model/ColorSpace;)Lorg/jcodec/common/model/Picture; = Create(int, int, Org.Jcodec.Common.Model.ColorSpace)
  create(IILorg/jcodec/common/model/ColorSpace;Lorg/jcodec/common/model/Rect;)Lorg/jcodec/common/model/Picture; = Create(int, int, Org.Jcodec.Common.Model.ColorSpace, Org.Jcodec.Common.Model.Rect)
  createCompatible()Lorg/jcodec/common/model/Picture; = CreateCompatible()
  cropped()Lorg/jcodec/common/model/Picture; = Cropped()
  getData()[[I = GetData()
  getPlaneData(I)[I = GetPlaneData(int)
  getPlaneHeight(I)I = GetPlaneHeight(int)
  getPlaneWidth(I)I = GetPlaneWidth(int)
org/jcodec/common/model/Picture8Bit = Org.Jcodec.Common.Model.Picture8Bit
  <init>(II[B[B[B)V = .ctor(int, int, byte[], byte[], byte[])
  <init>(Lorg/jcodec/common/model/Picture8Bit;)V = .ctor(Org.Jcodec.Common.Model.Picture8Bit)
  getHeight()I = Height
  getWidth()I = Width
  create420(II)Lorg/jcodec/common/model/Picture8Bit; = Create420(int, int)
  create422(II)Lorg/jcodec/common/model/Picture8Bit; = Create422(int, int)
  getCb()[B = GetCb()
  getCr()[B = GetCr()
  getY()[B = GetY()
org/jcodec/common/model/Plane = Org.Jcodec.Common.Model.Plane
  <init>([ILorg/jcodec/common/model/Size;)V = .ctor(int[], Org.Jcodec.Common.Model.Size)
  getSize()Lorg/jcodec/common/model/Size; = Size
  getData()[I = GetData()
org/jcodec/common/model/Point = Org.Jcodec.Common.Model.Point
  <init>(II)V = .ctor(int, int)
  getX()I = GetX()
  getY()I = GetY()
org/jcodec/common/model/Rational = Org.Jcodec.Common.Model.Rational
  <init>(II)V = .ctor(int, int)
  HALF = Half
  ONE = One
  ZERO = Zero
  getDen()I = Den
  getNum()I = Num
  divide(I)Lorg/jcodec/common/model/Rational; = Divide(int)
  divide(J)J = Divide(long)
  divide(Lorg/jcodec/common/model/Rational;)Lorg/jcodec/common/model/Rational; = Divide(Org.Jcodec.Common.Model.Rational)
  divide(Lorg/jcodec/common/model/RationalLarge;)Lorg/jcodec/common/model/RationalLarge; = Divide(Org.Jcodec.Common.Model.RationalLarge)
  divideBy(I)Lorg/jcodec/common/model/Rational; = DivideBy(int)
  divideBy(Lorg/jcodec/common/model/Rational;)Lorg/jcodec/common/model/Rational; = DivideBy(Org.Jcodec.Common.Model.Rational)
  divideBy(Lorg/jcodec/common/model/RationalLarge;)Lorg/jcodec/common/model/RationalLarge; = DivideBy(Org.Jcodec.Common.Model.RationalLarge)
  divideByS(I)I = DivideByS(int)
  divideS(I)I = DivideS(int)
  equals(Lorg/jcodec/common/model/Rational;)Z = Equals(Org.Jcodec.Common.Model.Rational)
  flip()Lorg/jcodec/common/model/Rational; = Flip()
  greaterOrEqualTo(Lorg/jcodec/common/model/Rational;)Z = GreaterOrEqualTo(Org.Jcodec.Common.Model.Rational)
  greaterThen(Lorg/jcodec/common/model/Rational;)Z = GreaterThen(Org.Jcodec.Common.Model.Rational)
  minus(I)Lorg/jcodec/common/model/Rational; = Minus(int)
  minus(Lorg/jcodec/common/model/Rational;)Lorg/jcodec/common/model/Rational; = Minus(Org.Jcodec.Common.Model.Rational)
  minus(Lorg/jcodec/common/model/RationalLarge;)Lorg/jcodec/common/model/RationalLarge; = Minus(Org.Jcodec.Common.Model.RationalLarge)
  multiply(I)Lorg/jcodec/common/model/Rational; = Multiply(int)
  multiply(J)J = Multiply(long)
  multiply(Lorg/jcodec/common/model/Rational;)Lorg/jcodec/common/model/Rational; = Multiply(Org.Jcodec.Common.Model.Rational)
  multiply(Lorg/jcodec/common/model/RationalLarge;)Lorg/jcodec/common/model/RationalLarge; = Multiply(Org.Jcodec.Common.Model.RationalLarge)
  multiplyS(I)I = MultiplyS(int)
  parse(Ljava/lang/String;)Lorg/jcodec/common/model/Rational; = Parse(string)
  plus(I)Lorg/jcodec/common/model/Rational; = Plus(int)
  plus(Lorg/jcodec/common/model/Rational;)Lorg/jcodec/common/model/Rational; = Plus(Org.Jcodec.Common.Model.Rational)
  plus(Lorg/jcodec/common/model/RationalLarge;)Lorg/jcodec/common/model/RationalLarge; = Plus(Org.Jcodec.Common.Model.RationalLarge)
  R(I)Lorg/jcodec/common/model/Rational; = R(int)
  R(II)Lorg/jcodec/common/model/Rational; = R(int, int)
  scalar()F = Scalar()
  scalarClip()I = ScalarClip()
  smallerOrEqualTo(Lorg/jcodec/common/model/Rational;)Z = SmallerOrEqualTo(Org.Jcodec.Common.Model.Rational)
  smallerThen(Lorg/jcodec/common/model/Rational;)Z = SmallerThen(Org.Jcodec.Common.Model.Rational)
org/jcodec/common/model/RationalLarge = Org.Jcodec.Common.Model.RationalLarge
  <init>(JJ)V = .ctor(long, long)
  HALF = Half
  ONE = One
  ZERO = Zero
  getDen()J = Den
  getNum()J = Num
  divide(J)Lorg/jcodec/common/model/RationalLarge; = Divide(long)
  divide(Lorg/jcodec/common/model/Rational;)Lorg/jcodec/common/model/RationalLarge; = Divide(Org.Jcodec.Common.Model.Rational)
  divide(Lorg/jcodec/common/model/RationalLarge;)Lorg/jcodec/common/model/RationalLarge; = Divide(Org.Jcodec.Common.Model.RationalLarge)
  divideBy(J)Lorg/jcodec/common/model/RationalLarge; = DivideBy(long)
  divideBy(Lorg/jcodec/common/model/Rational;)Lorg/jcodec/common/model/RationalLarge; = DivideBy(Org.Jcodec.Common.Model.Rational)
  divideBy(Lorg/jcodec/common/model/RationalLarge;)Lorg/jcodec/common/model/RationalLarge; = DivideBy(Org.Jcodec.Common.Model.RationalLarge)
  divideByS(J)J = DivideByS(long)
  divideS(J)J = DivideS(long)
  equals(Lorg/jcodec/common/model/RationalLarge;)Z = Equals(Org.Jcodec.Common.Model.RationalLarge)
  flip()Lorg/jcodec/common/model/RationalLarge; = Flip()
  greaterOrEqualTo(Lorg/jcodec/common/model/RationalLarge;)Z = GreaterOrEqualTo(Org.Jcodec.Common.Model.RationalLarge)
  greaterThen(Lorg/jcodec/common/model/RationalLarge;)Z = GreaterThen(Org.Jcodec.Common.Model.RationalLarge)
  lessThen(Lorg/jcodec/common/model/RationalLarge;)Z = LessThen(Org.Jcodec.Common.Model.RationalLarge)
  minus(J)Lorg/jcodec/common/model/RationalLarge; = Minus(long)
  minus(Lorg/jcodec/common/model/Rational;)Lorg/jcodec/common/model/RationalLarge; = Minus(Org.Jcodec.Common.Model.Rational)
  minus(Lorg/jcodec/common/model/RationalLarge;)Lorg/jcodec/common/model/RationalLarge; = Minus(Org.Jcodec.Common.Model.RationalLarge)
  multiply(J)Lorg/jcodec/common/model/RationalLarge; = Multiply(long)
  multiply(Lorg/jcodec/common/model/Rational;)Lorg/jcodec/common/model/RationalLarge; = Multiply(Org.Jcodec.Common.Model.Rational)
  multiply(Lorg/jcodec/common/model/RationalLarge;)Lorg/jcodec/common/model/RationalLarge; = Multiply(Org.Jcodec.Common.Model.RationalLarge)
  multiplyS(J)J = MultiplyS(long)
  parse(Ljava/lang/String;)Lorg/jcodec/common/model/Rational; = Parse(string)
  plus(J)Lorg/jcodec/common/model/RationalLarge; = Plus(long)
  plus(Lorg/jcodec/common/model/Rational;)Lorg/jcodec/common/model/RationalLarge; = Plus(Org.Jcodec.Common.Model.Rational)
  plus(Lorg/jcodec/common/model/RationalLarge;)Lorg/jcodec/common/model/RationalLarge; = Plus(Org.Jcodec.Common.Model.RationalLarge)
  R(J)Lorg/jcodec/common/model/RationalLarge; = R(long)
  R(JJ)Lorg/jcodec/common/model/RationalLarge; = R(long, long)
  scalar()D = Scalar()
  scalarClip()J = ScalarClip()
  smallerOrEqualTo(Lorg/jcodec/common/model/RationalLarge;)Z = SmallerOrEqualTo(Org.Jcodec.Common.Model.RationalLarge)
org/jcodec/common/model/Rect = Org.Jcodec.Common.Model.Rect
  <init>(IIII)V = .ctor(int, int, int, int)
  getHeight()I = Height
  getWidth()I = Width
  getX()I = GetX()
  getY()I = GetY()
org/jcodec/common/model/Size = Org.Jcodec.Common.Model.Size
  <init>(II)V = .ctor(int, int)
  getHeight()I = Height
  getWidth()I = Width
org/jcodec/common/model/TapeTimecode = Org.Jcodec.Common.Model.TapeTimecode
  <init>(SBBBZ)V = .ctor(short, sbyte, sbyte, sbyte, bool)
  getFrame()B = Frame
  getHour()S = Hour
  isDropFrame()Z = IsDropFrame
  getMinute()B = Minute
  getSecond()B = Second
org/jcodec/common/model/Unit = Org.Jcodec.Common.Model.Unit
  FRAME = Frame
  SEC = Sec
  valueOf(Ljava/lang/String;)Lorg/jcodec/common/model/Unit; = ValueOf(string)
  values()[Lorg/jcodec/common/model/Unit; = Values()
org/jcodec/containers/mkv/boxes/EbmlBase = Org.Jcodec.Containers.Mkv.Boxes.EbmlBase
  <init>()V = .ctor()
  dataLen = DataLen
  dataOffset = DataOffset
  id = Id
  offset = Offset
  parent = Parent
  type = Type
  typeSizeLength = TypeSizeLength
  getData()Ljava/nio/ByteBuffer; = Data
  equalId([B)Z = EqualId(byte[])
  size()J = Size()
org/jcodec/containers/mkv/boxes/EbmlBin = Org.Jcodec.Containers.Mkv.Boxes.EbmlBin
  <init>([B)V = .ctor(byte[])
  data = Data
  dataRead = DataRead
  getData()Ljava/nio/ByteBuffer; = Data
  read(Ljava/nio/ByteBuffer;)V = Read(Java.Nio.ByteBuffer)
  set(Ljava/nio/ByteBuffer;)V = Set(Java.Nio.ByteBuffer)
  skip(Ljava/nio/ByteBuffer;)V = Skip(Java.Nio.ByteBuffer)
org/jcodec/containers/mkv/boxes/EbmlDate = Org.Jcodec.Containers.Mkv.Boxes.EbmlDate
  <init>([B)V = .ctor(byte[])
  MILISECONDS_SINCE_UNIX_EPOCH_START = MilisecondsSinceUnixEpochStart
  getDate()Ljava/util/Date; = Date
  setDate(Ljava/util/Date;)V = Date
org/jcodec/containers/mkv/boxes/EbmlFloat = Org.Jcodec.Containers.Mkv.Boxes.EbmlFloat
  <init>([B)V = .ctor(byte[])
  get()D = Get()
  set(D)V = Set(double)
org/jcodec/containers/mkv/boxes/EbmlMaster = Org.Jcodec.Containers.Mkv.Boxes.EbmlMaster
  <init>([B)V = .ctor(byte[])
  children = Children
  usedSize = UsedSize
  getData()Ljava/nio/ByteBuffer; = Data
  getDataLen()J = DataLen
  add(Lorg/jcodec/containers/mkv/boxes/EbmlBase;)V = Add(Org.Jcodec.Containers.Mkv.Boxes.EbmlBase)
org/jcodec/containers/mkv/boxes/EbmlSint = Org.Jcodec.Containers.Mkv.Boxes.EbmlSint
  <init>([B)V = .ctor(byte[])
  signedComplement = SignedComplement
  convertToBytes(J)[B = ConvertToBytes(long)
  ebmlSignedLength(J)I = EbmlSignedLength(long)
  get()J = Get()
  set(J)V = Set(long)
org/jcodec/containers/mkv/boxes/EbmlString = Org.Jcodec.Containers.Mkv.Boxes.EbmlString
  <init>([B)V = .ctor(byte[])
  <init>([BLjava/lang/String;)V = .ctor(byte[], string)
  charset = Charset
  get()Ljava/lang/String; = Get()
  set(Ljava/lang/String;)V = Set(string)
org/jcodec/containers/mkv/boxes/EbmlUint = Org.Jcodec.Containers.Mkv.Boxes.EbmlUint
  <init>([B)V = .ctor(byte[])
  <init>([BJ)V = .ctor(byte[], long)
  calculatePayloadSize(J)I = CalculatePayloadSize(long)
  get()J = Get()
  longToBytes(J)[B = LongToBytes(long)
  set(J)V = Set(long)
org/jcodec/containers/mkv/boxes/EbmlUlong = Org.Jcodec.Containers.Mkv.Boxes.EbmlUlong
  <init>([B)V = .ctor(byte[])
  <init>([BJ)V = .ctor(byte[], long)
  get()J = Get()
  set(J)V = Set(long)
org/jcodec/containers/mkv/boxes/EbmlVoid = Org.Jcodec.Containers.Mkv.Boxes.EbmlVoid
  <init>([B)V = .ctor(byte[])
  getData()Ljava/nio/ByteBuffer; = Data
org/jcodec/containers/mkv/boxes/MkvBlock = Org.Jcodec.Containers.Mkv.Boxes.MkvBlock
  <init>([B)V = .ctor(byte[])
  absoluteTimecode = AbsoluteTimecode
  discardable = Discardable
  frameOffsets = FrameOffsets
  frames = Frames
  frameSizes = FrameSizes
  headerSize = HeaderSize
  keyFrame = KeyFrame
  lacing = Lacing
  lacingPresent = LacingPresent
  timecode = Timecode
  trackNumber = TrackNumber
  getDataSize()I = DataSize
  calcEbmlLacingDiffs([I)[J = CalcEbmlLacingDiffs(int[])
  copy(Lorg/jcodec/containers/mkv/boxes/MkvBlock;)Lorg/jcodec/containers/mkv/boxes/MkvBlock; = Copy(Org.Jcodec.Containers.Mkv.Boxes.MkvBlock)
  ebmlDecode(Ljava/nio/ByteBuffer;)J = EbmlDecode(Java.Nio.ByteBuffer)
  ebmlDecodeSigned(Ljava/nio/ByteBuffer;)J = EbmlDecodeSigned(Java.Nio.ByteBuffer)
  getFrames(Ljava/nio/ByteBuffer;)[Ljava/nio/ByteBuffer; = GetFrames(Java.Nio.ByteBuffer)
  keyFrame(JILjava/nio/ByteBuffer;)Lorg/jcodec/containers/mkv/boxes/MkvBlock; = KeyFrame(long, int, Java.Nio.ByteBuffer)
  muxEbmlLacing([I)[B = MuxEbmlLacing(int[])
  muxXiphLacing([I)[B = MuxXiphLacing(int[])
  readEBMLLaceSizes(Ljava/nio/ByteBuffer;[III)I = ReadEBMLLaceSizes(Java.Nio.ByteBuffer, int[], int, int)
  readFrames(Ljava/nio/ByteBuffer;)V = ReadFrames(Java.Nio.ByteBuffer)
  readXiphLaceSizes(Ljava/nio/ByteBuffer;[III)I = ReadXiphLaceSizes(Java.Nio.ByteBuffer, int[], int, int)
  seekAndReadContent(Ljava/nio/channels/FileChannel;)V = SeekAndReadContent(Java.Nio.Channels.FileChannel)
org/jcodec/containers/mkv/boxes/MkvSegment = Org.Jcodec.Containers.Mkv.Boxes.MkvSegment
  <init>()V = .ctor()
  <init>([B)V = .ctor(byte[])
  getHeader()Ljava/nio/ByteBuffer; = Header
  getHeaderSize()J = HeaderSize
org/jcodec/containers/mkv/CuesFactory = Org.Jcodec.Containers.Mkv.CuesFactory
  <init>(JJ)V = .ctor(long, long)
  add(Lorg/jcodec/containers/mkv/CuesFactory$CuePointMock;)V = Add(Org.Jcodec.Containers.Mkv.CuesFactory.CuePointMock)
  addFixedSize(Lorg/jcodec/containers/mkv/CuesFactory$CuePointMock;)V = AddFixedSize(Org.Jcodec.Containers.Mkv.CuesFactory.CuePointMock)
  computeCuesSize()I = ComputeCuesSize()
  createCues()Lorg/jcodec/containers/mkv/boxes/EbmlMaster; = CreateCues()
  estimateCuePointSize(III)I = EstimateCuePointSize(int, int, int)
  estimateFixedSize(I)I = EstimateFixedSize(int)
  estimateSize()I = EstimateSize()
org/jcodec/containers/mkv/demuxer/MKVDemuxer = Org.Jcodec.Containers.Mkv.Demuxer.MKVDemuxer
  getPictureHeight()I = PictureHeight
  getPictureWidth()I = PictureWidth
org/jcodec/containers/mkv/MKVParser = Org.Jcodec.Containers.Mkv.MKVParser
  isKnownType([B)Z = IsKnownType(byte[])
  parse()Ljava/util/List; = Parse()
org/jcodec/containers/mkv/MKVStreamingMuxer = Org.Jcodec.Containers.Mkv.MKVStreamingMuxer
  <init>()V = .ctor()
org/jcodec/containers/mkv/MKVType = Org.Jcodec.Containers.Mkv.MKVType
  AlphaMode = AlphaMode
  AspectRatioType = AspectRatioType
  AttachedFile = AttachedFile
  AttachmentLink = AttachmentLink
  Attachments = Attachments
  Audio = Audio
  BitDepth = BitDepth
  Block = Block
  BlockAddID = BlockAddID
  BlockAdditional = BlockAdditional
  BlockAdditions = BlockAdditions
  BlockDuration = BlockDuration
  BlockGroup = BlockGroup
  BlockMore = BlockMore
  Channels = Channels
  ChapCountry = ChapCountry
  ChapLanguage = ChapLanguage
  ChapProcess = ChapProcess
  ChapProcessCodecID = ChapProcessCodecID
  ChapProcessCommand = ChapProcessCommand
  ChapProcessData = ChapProcessData
  ChapProcessPrivate = ChapProcessPrivate
  ChapProcessTime = ChapProcessTime
  ChapString = ChapString
  ChapterAtom = ChapterAtom
  ChapterDisplay = ChapterDisplay
  ChapterFlagEnabled = ChapterFlagEnabled
  ChapterFlagHidden = ChapterFlagHidden
  ChapterPhysicalEquiv = ChapterPhysicalEquiv
  Chapters = Chapters
  ChapterSegmentEditionUID = ChapterSegmentEditionUID
  ChapterSegmentUID = ChapterSegmentUID
  ChapterStringUID = ChapterStringUID
  ChapterTimeEnd = ChapterTimeEnd
  ChapterTimeStart = ChapterTimeStart
  ChapterTrack = ChapterTrack
  ChapterTrackNumber = ChapterTrackNumber
  ChapterTranslate = ChapterTranslate
  ChapterTranslateCodec = ChapterTranslateCodec
  ChapterTranslateEditionUID = ChapterTranslateEditionUID
  ChapterTranslateID = ChapterTranslateID
  ChapterUID = ChapterUID
  children = Children
  clazz = Clazz
  Cluster = Cluster
  CodecDecodeAll = CodecDecodeAll
  CodecID = CodecID
  CodecName = CodecName
  CodecPrivate = CodecPrivate
  CodecState = CodecState
  ColourSpace = ColourSpace
  ContentCompAlgo = ContentCompAlgo
  ContentCompression = ContentCompression
  ContentCompSettings = ContentCompSettings
  ContentEncAlgo = ContentEncAlgo
  ContentEncKeyID = ContentEncKeyID
  ContentEncoding = ContentEncoding
  ContentEncodingOrder = ContentEncodingOrder
  ContentEncodings = ContentEncodings
  ContentEncodingScope = ContentEncodingScope
  ContentEncodingType = ContentEncodingType
  ContentEncryption = ContentEncryption
  ContentSigAlgo = ContentSigAlgo
  ContentSigHashAlgo = ContentSigHashAlgo
  ContentSigKeyID = ContentSigKeyID
  ContentSignature = ContentSignature
  CRC32 = Crc32
  CueBlockNumber = CueBlockNumber
  CueClusterPosition = CueClusterPosition
  CueCodecState = CueCodecState
  CueDuration = CueDuration
  CuePoint = CuePoint
  CueReference = CueReference
  CueRefTime = CueRefTime
  CueRelativePosition = CueRelativePosition
  Cues = Cues
  CueTime = CueTime
  CueTrack = CueTrack
  CueTrackPositions = CueTrackPositions
  DateUTC = DateUTC
  DefaultDuration = DefaultDuration
  DisplayHeight = DisplayHeight
  DisplayUnit = DisplayUnit
  DisplayWidth = DisplayWidth
  DocType = DocType
  DocTypeReadVersion = DocTypeReadVersion
  DocTypeVersion = DocTypeVersion
  Duration = Duration
  EBML = Ebml
  EBMLMaxIDLength = EBMLMaxIDLength
  EBMLMaxSizeLength = EBMLMaxSizeLength
  EBMLReadVersion = EBMLReadVersion
  EBMLVersion = EBMLVersion
  EditionEntry = EditionEntry
  EditionFlagDefault = EditionFlagDefault
  EditionFlagHidden = EditionFlagHidden
  EditionFlagOrdered = EditionFlagOrdered
  EditionUID = EditionUID
  FileData = FileData
  FileDescription = FileDescription
  FileMimeType = FileMimeType
  FileName = FileName
  FileUID = FileUID
  firstLevelHeaders = FirstLevelHeaders
  FlagDefault = FlagDefault
  FlagEnabled = FlagEnabled
  FlagForced = FlagForced
  FlagInterlaced = FlagInterlaced
  FlagLacing = FlagLacing
  id = Id
  Info = Info
  LaceNumber = LaceNumber
  Language = Language
  MaxBlockAdditionID = MaxBlockAdditionID
  MaxCache = MaxCache
  MinCache = MinCache
  MuxingApp = MuxingApp
  Name = Name
  NextFilenam = NextFilenam
  NextUID = NextUID
  OutputSamplingFrequency = OutputSamplingFrequency
  PixelCropBottom = PixelCropBottom
  PixelCropLeft = PixelCropLeft
  PixelCropRight = PixelCropRight
  PixelCropTop = PixelCropTop
  PixelHeight = PixelHeight
  PixelWidth = PixelWidth
  Position = Position
  PrevFilename = PrevFilename
  PrevSize = PrevSize
  PrevUID = PrevUID
  ReferenceBlock = ReferenceBlock
  ReferencePriority = ReferencePriority
  SamplingFrequency = SamplingFrequency
  Seek = Seek
  SeekHead = SeekHead
  SeekID = SeekID
  SeekPosition = SeekPosition
  Segment = Segment
  SegmentFamily = SegmentFamily
  SegmentFilename = SegmentFilename
  SegmentUID = SegmentUID
  SilentTrackNumber = SilentTrackNumber
  SilentTracks = SilentTracks
  SimpleBlock = SimpleBlock
  SimpleTag = SimpleTag
  Slices = Slices
  StereoMode = StereoMode
  Tag = Tag
  TagAttachmentUID = TagAttachmentUID
  TagBinary = TagBinary
  TagChapterUID = TagChapterUID
  TagDefault = TagDefault
  TagEditionUID = TagEditionUID
  TagLanguage = TagLanguage
  TagName = TagName
  Tags = Tags
  TagString = TagString
  TagTrackUID = TagTrackUID
  Targets = Targets
  TargetType = TargetType
  TargetTypeValue = TargetTypeValue
  Timecode = Timecode
  TimecodeScale = TimecodeScale
  TimeSlice = TimeSlice
  Title = Title
  TrackCombinePlanes = TrackCombinePlanes
  TrackEntry = TrackEntry
  TrackJoinBlocks = TrackJoinBlocks
  TrackJoinUID = TrackJoinUID
  TrackNumber = TrackNumber
  TrackOperation = TrackOperation
  TrackOverlay = TrackOverlay
  TrackPlane = TrackPlane
  TrackPlaneType = TrackPlaneType
  TrackPlaneUID = TrackPlaneUID
  Tracks = Tracks
  TrackTranslate = TrackTranslate
  TrackTranslateCodec = TrackTranslateCodec
  TrackTranslateEditionUID = TrackTranslateEditionUID
  TrackTranslateTrackID = TrackTranslateTrackID
  TrackType = TrackType
  TrackUID = TrackUID
  Video = Video
  Void = Void
  WritingApp = WritingApp
  createById([BJ)Lorg/jcodec/containers/mkv/boxes/EbmlBase; = CreateById(byte[], long)
  createByType(Lorg/jcodec/containers/mkv/MKVType;)Lorg/jcodec/containers/mkv/boxes/EbmlBase; = CreateByType(Org.Jcodec.Containers.Mkv.MKVType)
  findAll(Ljava/util/List;Ljava/lang/Class;[Lorg/jcodec/containers/mkv/MKVType;)[Ljava/lang/Object; = FindAll(System.Collections.Generic.IList<Org.Jcodec.Containers.Mkv.Boxes.EbmlBase>, Java.Lang.Class, params Org.Jcodec.Containers.Mkv.MKVType[])
  findAll(Lorg/jcodec/containers/mkv/boxes/EbmlBase;Ljava/lang/Class;[Lorg/jcodec/containers/mkv/MKVType;)[Ljava/lang/Object; = FindAll(Org.Jcodec.Containers.Mkv.Boxes.EbmlBase, Java.Lang.Class, params Org.Jcodec.Containers.Mkv.MKVType[])
  findFirst(Ljava/util/List;[Lorg/jcodec/containers/mkv/MKVType;)Ljava/lang/Object; = FindFirst(System.Collections.Generic.IList<Org.Jcodec.Containers.Mkv.Boxes.EbmlBase>, params Org.Jcodec.Containers.Mkv.MKVType[])
  findFirst(Lorg/jcodec/containers/mkv/boxes/EbmlBase;[Lorg/jcodec/containers/mkv/MKVType;)Lorg/jcodec/containers/mkv/boxes/EbmlBase; = FindFirst(Org.Jcodec.Containers.Mkv.Boxes.EbmlBase, params Org.Jcodec.Containers.Mkv.MKVType[])
  findList(Ljava/util/List;Ljava/lang/Class;[Lorg/jcodec/containers/mkv/MKVType;)Ljava/util/List; = FindList(System.Collections.Generic.IList<Org.Jcodec.Containers.Mkv.Boxes.EbmlBase>, Java.Lang.Class, params Org.Jcodec.Containers.Mkv.MKVType[])
  getParent(Lorg/jcodec/containers/mkv/MKVType;)Lorg/jcodec/containers/mkv/MKVType; = GetParent(Org.Jcodec.Containers.Mkv.MKVType)
  isFirstLevelHeader([B)Z = IsFirstLevelHeader(byte[])
  isHeaderFirstByte(B)Z = IsHeaderFirstByte(sbyte)
  isSpecifiedHeader([B)Z = IsSpecifiedHeader(byte[])
  possibleChild(Lorg/jcodec/containers/mkv/boxes/EbmlMaster;[B)Z = PossibleChild(Org.Jcodec.Containers.Mkv.Boxes.EbmlMaster, byte[])
  possibleChild(Lorg/jcodec/containers/mkv/boxes/EbmlMaster;Lorg/jcodec/containers/mkv/boxes/EbmlBase;)Z = PossibleChild(Org.Jcodec.Containers.Mkv.Boxes.EbmlMaster, Org.Jcodec.Containers.Mkv.Boxes.EbmlBase)
  valueOf(Ljava/lang/String;)Lorg/jcodec/containers/mkv/MKVType; = ValueOf(string)
  values()[Lorg/jcodec/containers/mkv/MKVType; = Values()
org/jcodec/containers/mkv/muxer/MKVMuxer = Org.Jcodec.Containers.Mkv.Muxer.MKVMuxer
  <init>()V = .ctor()
  createChild(Lorg/jcodec/containers/mkv/boxes/EbmlMaster;Lorg/jcodec/containers/mkv/MKVType;D)V = CreateChild(Org.Jcodec.Containers.Mkv.Boxes.EbmlMaster, Org.Jcodec.Containers.Mkv.MKVType, double)
  createChild(Lorg/jcodec/containers/mkv/boxes/EbmlMaster;Lorg/jcodec/containers/mkv/MKVType;Ljava/lang/String;)V = CreateChild(Org.Jcodec.Containers.Mkv.Boxes.EbmlMaster, Org.Jcodec.Containers.Mkv.MKVType, string)
  createChild(Lorg/jcodec/containers/mkv/boxes/EbmlMaster;Lorg/jcodec/containers/mkv/MKVType;Ljava/nio/ByteBuffer;)V = CreateChild(Org.Jcodec.Containers.Mkv.Boxes.EbmlMaster, Org.Jcodec.Containers.Mkv.MKVType, Java.Nio.ByteBuffer)
  createChild(Lorg/jcodec/containers/mkv/boxes/EbmlMaster;Lorg/jcodec/containers/mkv/MKVType;Ljava/util/Date;)V = CreateChild(Org.Jcodec.Containers.Mkv.Boxes.EbmlMaster, Org.Jcodec.Containers.Mkv.MKVType, Java.Util.Date)
  createChild(Lorg/jcodec/containers/mkv/boxes/EbmlMaster;Lorg/jcodec/containers/mkv/MKVType;J)V = CreateChild(Org.Jcodec.Containers.Mkv.Boxes.EbmlMaster, Org.Jcodec.Containers.Mkv.MKVType, long)
  createVideoTrack(Lorg/jcodec/common/model/Size;Ljava/lang/String;)Lorg/jcodec/containers/mkv/muxer/MKVMuxerTrack; = CreateVideoTrack(Org.Jcodec.Common.Model.Size, string)
org/jcodec/containers/mkv/muxer/MKVMuxerTrack = Org.Jcodec.Containers.Mkv.Muxer.MKVMuxerTrack
  <init>()V = .ctor()
  codecId = CodecId
  frameDimentions = FrameDimentions
  trackNo = TrackNo
  type = Type
  getTimescale()I = Timescale
  getTrackNo()J = TrackNo
  addSampleEntry(Ljava/nio/ByteBuffer;I)V = AddSampleEntry(Java.Nio.ByteBuffer, int)
org/jcodec/containers/mkv/SeekHeadFactory = Org.Jcodec.Containers.Mkv.SeekHeadFactory
  <init>()V = .ctor()
  add(Lorg/jcodec/containers/mkv/boxes/EbmlBase;)V = Add(Org.Jcodec.Containers.Mkv.Boxes.EbmlBase)
  computeSeekHeadSize()I = ComputeSeekHeadSize()
  estimeteSeekSize(II)I = EstimeteSeekSize(int, int)
  indexSeekHead()Lorg/jcodec/containers/mkv/boxes/EbmlMaster; = IndexSeekHead()
org/jcodec/containers/mkv/util/EbmlUtil = Org.Jcodec.Containers.Mkv.Util.EbmlUtil
  <init>()V = .ctor()
  ebmlLengthMasks = EbmlLengthMasks
  eight = Eight
  five = Five
  four = Four
  lengthOptions = LengthOptions
  one = One
  seven = Seven
  six = Six
  three = Three
  two = Two
  computeLength(B)I = ComputeLength(sbyte)
  ebmlEncode(J)[B = EbmlEncode(long)
  ebmlEncode(JI)[B = EbmlEncode(long, int)
  ebmlLength(J)I = EbmlLength(long)
  toHexString([B)Ljava/lang/String; = ToHexString(byte[])
org/jcodec/containers/mp4/boxes/channel/ChannelLayout = Org.Jcodec.Containers.Mp4.Boxes.Channel.ChannelLayout
  kCAFChannelLayoutTag_AAC_6_0 = KCAFChannelLayoutTagAAC60
  kCAFChannelLayoutTag_AAC_6_1 = KCAFChannelLayoutTagAAC61
  kCAFChannelLayoutTag_AAC_7_0 = KCAFChannelLayoutTagAAC70
  kCAFChannelLayoutTag_AAC_Octagonal = KCAFChannelLayoutTagAACOctagonal
  kCAFChannelLayoutTag_Ambisonic_B_Format = KCAFChannelLayoutTagAmbisonicBFormat
  kCAFChannelLayoutTag_AudioUnit_6_0 = KCAFChannelLayoutTagAudioUnit60
  kCAFChannelLayoutTag_AudioUnit_7_0 = KCAFChannelLayoutTagAudioUnit70
  kCAFChannelLayoutTag_Binaural = KCAFChannelLayoutTagBinaural
  kCAFChannelLayoutTag_Cube = KCAFChannelLayoutTagCube
  kCAFChannelLayoutTag_DVD_10 = KCAFChannelLayoutTagDVD10
  kCAFChannelLayoutTag_DVD_11 = KCAFChannelLayoutTagDVD11
  kCAFChannelLayoutTag_DVD_18 = KCAFChannelLayoutTagDVD18
  kCAFChannelLayoutTag_DVD_4 = KCAFChannelLayoutTagDVD4
  kCAFChannelLayoutTag_DVD_5 = KCAFChannelLayoutTagDVD5
  kCAFChannelLayoutTag_DVD_6 = KCAFChannelLayoutTagDVD6
  kCAFChannelLayoutTag_Emagic_Default_7_1 = KCAFChannelLayoutTagEmagicDefault71
  kCAFChannelLayoutTag_Hexagonal = KCAFChannelLayoutTagHexagonal
  kCAFChannelLayoutTag_ITU_2_1 = KCAFChannelLayoutTagITU21
  kCAFChannelLayoutTag_ITU_2_2 = KCAFChannelLayoutTagITU22
  kCAFChannelLayoutTag_MatrixStereo = KCAFChannelLayoutTagMatrixStereo
  kCAFChannelLayoutTag_MidSide = KCAFChannelLayoutTagMidSide
  kCAFChannelLayoutTag_Mono = KCAFChannelLayoutTagMono
  kCAFChannelLayoutTag_MPEG_3_0_A = KCAFChannelLayoutTagMPEG30A
  kCAFChannelLayoutTag_MPEG_3_0_B = KCAFChannelLayoutTagMPEG30B
  kCAFChannelLayoutTag_MPEG_4_0_A = KCAFChannelLayoutTagMPEG40A
  kCAFChannelLayoutTag_MPEG_4_0_B = KCAFChannelLayoutTagMPEG40B
  kCAFChannelLayoutTag_MPEG_5_0_A = KCAFChannelLayoutTagMPEG50A
  kCAFChannelLayoutTag_MPEG_5_0_B = KCAFChannelLayoutTagMPEG50B
  kCAFChannelLayoutTag_MPEG_5_0_C = KCAFChannelLayoutTagMPEG50C
  kCAFChannelLayoutTag_MPEG_5_0_D = KCAFChannelLayoutTagMPEG50D
  kCAFChannelLayoutTag_MPEG_5_1_A = KCAFChannelLayoutTagMPEG51A
  kCAFChannelLayoutTag_MPEG_5_1_B = KCAFChannelLayoutTagMPEG51B
  kCAFChannelLayoutTag_MPEG_5_1_C = KCAFChannelLayoutTagMPEG51C
  kCAFChannelLayoutTag_MPEG_5_1_D = KCAFChannelLayoutTagMPEG51D
  kCAFChannelLayoutTag_MPEG_6_1_A = KCAFChannelLayoutTagMPEG61A
  kCAFChannelLayoutTag_MPEG_7_1_A = KCAFChannelLayoutTagMPEG71A
  kCAFChannelLayoutTag_MPEG_7_1_B = KCAFChannelLayoutTagMPEG71B
  kCAFChannelLayoutTag_MPEG_7_1_C = KCAFChannelLayoutTagMPEG71C
  kCAFChannelLayoutTag_Octagonal = KCAFChannelLayoutTagOctagonal
  kCAFChannelLayoutTag_Pentagonal = KCAFChannelLayoutTagPentagonal
  kCAFChannelLayoutTag_Quadraphonic = KCAFChannelLayoutTagQuadraphonic
  kCAFChannelLayoutTag_RESERVED_DO_NOT_USE = KCAFChannelLayoutTagRESERVEDDONOTUSE
  kCAFChannelLayoutTag_SMPTE_DTV = KCAFChannelLayoutTagSMPTEDTV
  kCAFChannelLayoutTag_Stereo = KCAFChannelLayoutTagStereo
  kCAFChannelLayoutTag_StereoHeadphones = KCAFChannelLayoutTagStereoHeadphones
  kCAFChannelLayoutTag_TMH_10_2_full = KCAFChannelLayoutTagTMH102Full
  kCAFChannelLayoutTag_TMH_10_2_std = KCAFChannelLayoutTagTMH102Std
  kCAFChannelLayoutTag_UseChannelBitmap = KCAFChannelLayoutTagUseChannelBitmap
  kCAFChannelLayoutTag_UseChannelDescriptions = KCAFChannelLayoutTagUseChannelDescriptions
  kCAFChannelLayoutTag_XY = KCAFChannelLayoutTagXY
  getCode()I = Code
  getLabels()[Lorg/jcodec/containers/mp4/boxes/channel/Label; = GetLabels()
  valueOf(Ljava/lang/String;)Lorg/jcodec/containers/mp4/boxes/channel/ChannelLayout; = ValueOf(string)
  values()[Lorg/jcodec/containers/mp4/boxes/channel/ChannelLayout; = Values()
org/jcodec/containers/mp4/boxes/channel/ChannelUtils = Org.Jcodec.Containers.Mp4.Boxes.Channel.ChannelUtils
  <init>()V = .ctor()
  getLabelsByBitmap(J)[Lorg/jcodec/containers/mp4/boxes/channel/Label; = GetLabelsByBitmap(long)
org/jcodec/containers/mp4/boxes/channel/Label = Org.Jcodec.Containers.Mp4.Boxes.Channel.Label
  Ambisonic_W = AmbisonicW
  Ambisonic_X = AmbisonicX
  Ambisonic_Y = AmbisonicY
  Ambisonic_Z = AmbisonicZ
  Center = Center
  CenterSurround = CenterSurround
  CenterSurroundDirect = CenterSurroundDirect
  channelMappingRegex = ChannelMappingRegex
  ClickTrack = ClickTrack
  DialogCentricMix = DialogCentricMix
  Discrete = Discrete
  Discrete_0 = Discrete0
  Discrete_1 = Discrete1
  Discrete_10 = Discrete10
  Discrete_11 = Discrete11
  Discrete_12 = Discrete12
  Discrete_13 = Discrete13
  Discrete_14 = Discrete14
  Discrete_15 = Discrete15
  Discrete_2 = Discrete2
  Discrete_3 = Discrete3
  Discrete_4 = Discrete4
  Discrete_5 = Discrete5
  Discrete_6 = Discrete6
  Discrete_65535 = Discrete65535
  Discrete_7 = Discrete7
  Discrete_8 = Discrete8
  Discrete_9 = Discrete9
  ForeignLanguage = ForeignLanguage
  HeadphonesLeft = HeadphonesLeft
  HeadphonesRight = HeadphonesRight
  HearingImpaired = HearingImpaired
  Left = Left
  LeftCenter = LeftCenter
  LeftSurround = LeftSurround
  LeftSurroundDirect = LeftSurroundDirect
  LeftTotal = LeftTotal
  LeftWide = LeftWide
  LFE2 = Lfe2
  LFEScreen = LFEScreen
  Mono = Mono
  MS_Mid = MSMid
  MS_Side = MSSide
  Narration = Narration
  RearSurroundLeft = RearSurroundLeft
  RearSurroundRight = RearSurroundRight
  Right = Right
  RightCenter = RightCenter
  RightSurround = RightSurround
  RightSurroundDirect = RightSurroundDirect
  RightTotal = RightTotal
  RightWide = RightWide
  TopBackCenter = TopBackCenter
  TopBackLeft = TopBackLeft
  TopBackRight = TopBackRight
  TopCenterSurround = TopCenterSurround
  Unknown = Unknown
  Unused = Unused
  UseCoordinates = UseCoordinates
  VerticalHeightCenter = VerticalHeightCenter
  VerticalHeightLeft = VerticalHeightLeft
  VerticalHeightRight = VerticalHeightRight
  XY_X = XyX
  XY_Y = XyY
  getVal()I = Val
  getByVal(I)Lorg/jcodec/containers/mp4/boxes/channel/Label; = GetByVal(int)
  valueOf(Ljava/lang/String;)Lorg/jcodec/containers/mp4/boxes/channel/Label; = ValueOf(string)
  values()[Lorg/jcodec/containers/mp4/boxes/channel/Label; = Values()
org/jcodec/containers/mp4/Brand = Org.Jcodec.Containers.Mp4.Brand
  MOV = Mov
  MP4 = Mp4
  valueOf(Ljava/lang/String;)Lorg/jcodec/containers/mp4/Brand; = ValueOf(string)
  values()[Lorg/jcodec/containers/mp4/Brand; = Values()
org/jcodec/containers/mp4/Chunk = Org.Jcodec.Containers.Mp4.Chunk
  <init>(JJII[II[II)V = .ctor(long, long, int, int, int[], int, int[], int)
  getDuration()I = Duration
  getEntry()I = Entry
  getOffset()J = Offset
  getSampleCount()I = SampleCount
  getSampleDur()I = SampleDur
  getSampleSize()I = SampleSize
  getSize()J = Size
  getStartTv()J = StartTv
  getSampleDurs()[I = GetSampleDurs()
  getSampleSizes()[I = GetSampleSizes()
org/jcodec/containers/mp4/ChunkReader = Org.Jcodec.Containers.Mp4.ChunkReader
  hasNext()Z = HasNext
  next()Lorg/jcodec/containers/mp4/Chunk; = Next()
  size()I = Size()
org/jcodec/containers/mp4/ChunkWriter = Org.Jcodec.Containers.Mp4.ChunkWriter
  apply()V = Apply()
  write(Lorg/jcodec/containers/mp4/Chunk;)V = Write(Org.Jcodec.Containers.Mp4.Chunk)
org/jcodec/containers/mp4/MP4DemuxerException = Org.Jcodec.Containers.Mp4.MP4DemuxerException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
org/jcodec/containers/mp4/MP4Packet = Org.Jcodec.Containers.Mp4.MP4Packet
  <init>(Ljava/nio/ByteBuffer;JJJJZLorg/jcodec/common/model/TapeTimecode;JI)V = .ctor(Java.Nio.ByteBuffer, long, long, long, long, bool, Org.Jcodec.Common.Model.TapeTimecode, long, int)
  <init>(Ljava/nio/ByteBuffer;JJJJZLorg/jcodec/common/model/TapeTimecode;JIJIZ)V = .ctor(Java.Nio.ByteBuffer, long, long, long, long, bool, Org.Jcodec.Common.Model.TapeTimecode, long, int, long, int, bool)
  <init>(Lorg/jcodec/common/model/Packet;JI)V = .ctor(Org.Jcodec.Common.Model.Packet, long, int)
  <init>(Lorg/jcodec/containers/mp4/MP4Packet;)V = .ctor(Org.Jcodec.Containers.Mp4.MP4Packet)
  <init>(Lorg/jcodec/containers/mp4/MP4Packet;Ljava/nio/ByteBuffer;)V = .ctor(Org.Jcodec.Containers.Mp4.MP4Packet, Java.Nio.ByteBuffer)
  <init>(Lorg/jcodec/containers/mp4/MP4Packet;Lorg/jcodec/common/model/TapeTimecode;)V = .ctor(Org.Jcodec.Containers.Mp4.MP4Packet, Org.Jcodec.Common.Model.TapeTimecode)
  getEntryNo()I = EntryNo
  getFileOff()J = FileOff
  isPsync()Z = IsPsync
  getMediaPts()J = MediaPts
  getSize()I = Size
org/jcodec/containers/mp4/MP4Util = Org.Jcodec.Containers.Mp4.MP4Util
  <init>()V = .ctor()
org/jcodec/containers/mp4/muxer/AbstractMP4MuxerTrack = Org.Jcodec.Containers.Mp4.Muxer.AbstractMP4MuxerTrack
  <init>(ILorg/jcodec/containers/mp4/TrackType;I)V = .ctor(int, Org.Jcodec.Containers.Mp4.TrackType, int)
  chunkDuration = ChunkDuration
  chunkNo = ChunkNo
  curChunk = CurChunk
  edits = Edits
  finished = Finished
  sampleEntries = SampleEntries
  samplesInChunks = SamplesInChunks
  samplesInLastChunk = SamplesInLastChunk
  tgtChunkDuration = TgtChunkDuration
  tgtChunkDurationUnit = TgtChunkDurationUnit
  timescale = Timescale
  trackId = TrackId
  type = Type
  getDisplayDimensions()Lorg/jcodec/common/model/Size; = DisplayDimensions
  isAudio()Z = IsAudio
  isTimecode()Z = IsTimecode
  isVideo()Z = IsVideo
  getTimescale()I = Timescale
  getTrackTotalDuration()J = TrackTotalDuration
  setName(Ljava/lang/String;)V = SetName(string)
  setTgtChunkDuration(Lorg/jcodec/common/model/Rational;Lorg/jcodec/common/model/Unit;)V = SetTgtChunkDuration(Org.Jcodec.Common.Model.Rational, Org.Jcodec.Common.Model.Unit)
org/jcodec/containers/mp4/muxer/FramesMP4MuxerTrack = Org.Jcodec.Containers.Mp4.Muxer.FramesMP4MuxerTrack
  getTimecodeTrack()Lorg/jcodec/containers/mp4/muxer/TimecodeMP4MuxerTrack; = TimecodeTrack
  getTrackTotalDuration()J = TrackTotalDuration
  addFrame(Lorg/jcodec/containers/mp4/MP4Packet;)V = AddFrame(Org.Jcodec.Containers.Mp4.MP4Packet)
  setTimecode(Lorg/jcodec/containers/mp4/muxer/TimecodeMP4MuxerTrack;)V = SetTimecode(Org.Jcodec.Containers.Mp4.Muxer.TimecodeMP4MuxerTrack)
org/jcodec/containers/mp4/muxer/MP4Muxer = Org.Jcodec.Containers.Mp4.Muxer.MP4Muxer
  mdatOffset = MdatOffset
  getAudioTracks()Ljava/util/List; = AudioTracks
  getTimecodeTrack()Lorg/jcodec/containers/mp4/muxer/AbstractMP4MuxerTrack; = TimecodeTrack
  getTracks()Ljava/util/List; = Tracks
  getVideoTrack()Lorg/jcodec/containers/mp4/muxer/AbstractMP4MuxerTrack; = VideoTrack
  addTimecodeTrack(I)Lorg/jcodec/containers/mp4/muxer/TimecodeMP4MuxerTrack; = AddTimecodeTrack(int)
  addTrack(Lorg/jcodec/containers/mp4/TrackType;I)Lorg/jcodec/containers/mp4/muxer/FramesMP4MuxerTrack; = AddTrack(Org.Jcodec.Containers.Mp4.TrackType, int)
  addVideoTrack(Ljava/lang/String;Lorg/jcodec/common/model/Size;Ljava/lang/String;I)Lorg/jcodec/containers/mp4/muxer/FramesMP4MuxerTrack; = AddVideoTrack(string, Org.Jcodec.Common.Model.Size, string, int)
  addVideoTrackWithTimecode(Ljava/lang/String;Lorg/jcodec/common/model/Size;Ljava/lang/String;I)Lorg/jcodec/containers/mp4/muxer/FramesMP4MuxerTrack; = AddVideoTrackWithTimecode(string, Org.Jcodec.Common.Model.Size, string, int)
  writeHeader()V = WriteHeader()
org/jcodec/containers/mp4/muxer/PCMMP4MuxerTrack = Org.Jcodec.Containers.Mp4.Muxer.PCMMP4MuxerTrack
  getTrackTotalDuration()J = TrackTotalDuration
  addSamples(Ljava/nio/ByteBuffer;)V = AddSamples(Java.Nio.ByteBuffer)
org/jcodec/containers/mp4/muxer/TimecodeMP4MuxerTrack = Org.Jcodec.Containers.Mp4.Muxer.TimecodeMP4MuxerTrack
  addTimecode(Lorg/jcodec/common/model/Packet;)V = AddTimecode(Org.Jcodec.Common.Model.Packet)
org/jcodec/containers/mp4/QTTimeUtil = Org.Jcodec.Containers.Mp4.QTTimeUtil
  <init>()V = .ctor()
org/jcodec/containers/mp4/TimeUtil = Org.Jcodec.Containers.Mp4.TimeUtil
  <init>()V = .ctor()
  MOV_TIME_OFFSET = MovTimeOffset
  fromMovTime(I)J = FromMovTime(int)
  macTimeToDate(I)Ljava/util/Date; = MacTimeToDate(int)
  toMovTime(J)I = ToMovTime(long)
org/jcodec/containers/mp4/TrackType = Org.Jcodec.Containers.Mp4.TrackType
  CC = Cc
  CHAPTERS = Chapters
  HINT = Hint
  HYPER_TEXT = HyperText
  MPEG1 = Mpeg1
  MUSIC = Music
  OBJECTS = Objects
  SOUND = Sound
  SPRITE = Sprite
  STREAMING = Streaming
  SUB = Sub
  TEXT = Text
  THREE_D = ThreeD
  TIMECODE = Timecode
  TWEEN = Tween
  VIDEO = Video
  getHandler()Ljava/lang/String; = Handler
  fromHandler(Ljava/lang/String;)Lorg/jcodec/containers/mp4/TrackType; = FromHandler(string)
  valueOf(Ljava/lang/String;)Lorg/jcodec/containers/mp4/TrackType; = ValueOf(string)
  values()[Lorg/jcodec/containers/mp4/TrackType; = Values()
org/jcodec/containers/mp4/WebOptimizedMP4Muxer = Org.Jcodec.Containers.Mp4.WebOptimizedMP4Muxer
org/jcodec/containers/mps/MPSDemuxer = Org.Jcodec.Containers.Mps.MPSDemuxer
  getBuffer()Ljava/nio/ByteBuffer; = Buffer
  findStreams()V = FindStreams()
  nextPacket(Ljava/nio/ByteBuffer;)Lorg/jcodec/containers/mps/MPSDemuxer$PESPacket; = NextPacket(Java.Nio.ByteBuffer)
  probe(Ljava/nio/ByteBuffer;)I = Probe(Java.Nio.ByteBuffer)
  putBack(Ljava/nio/ByteBuffer;)V = PutBack(Java.Nio.ByteBuffer)
  reset()V = Reset()
  seekByte(J)V = SeekByte(long)
org/jcodec/containers/mps/MPSDump = Org.Jcodec.Containers.Mps.MPSDump
  <init>(Ljava/nio/channels/ReadableByteChannel;)V = .ctor(Java.Nio.Channels.IReadableByteChannel)
  ch = Ch
  dump(Ljava/lang/Long;Ljava/lang/Long;)V = Dump(Java.Lang.Long, Java.Lang.Long)
  fillBuffer(Ljava/nio/ByteBuffer;)I = FillBuffer(Java.Nio.ByteBuffer)
  logPes(Lorg/jcodec/containers/mps/MPSDemuxer$PESPacket;ILjava/nio/ByteBuffer;)V = LogPes(Org.Jcodec.Containers.Mps.MPSDemuxer.PESPacket, int, Java.Nio.ByteBuffer)
  main([Ljava/lang/String;)V = Main(string[])
org/jcodec/containers/mps/MPSUtils = Org.Jcodec.Containers.Mps.MPSUtils
  <init>()V = .ctor()
  AUDIO_MAX = AudioMax
  AUDIO_MIN = AudioMin
  dMapping = DMapping
  PACK = Pack
  PRIVATE_1 = Private1
  PRIVATE_2 = Private2
  PSM = Psm
  SYSTEM = System
  VIDEO_MAX = VideoMax
  VIDEO_MIN = VideoMin
  audioStream(I)Z = AudioStream(int)
  mediaMarker(I)Z = MediaMarker(int)
  mediaStream(I)Z = MediaStream(int)
  mpeg1Pes(IIILjava/nio/ByteBuffer;J)Lorg/jcodec/containers/mps/MPSDemuxer$PESPacket; = Mpeg1Pes(int, int, int, Java.Nio.ByteBuffer, long)
  mpeg2Pes(IIILjava/nio/ByteBuffer;J)Lorg/jcodec/containers/mps/MPSDemuxer$PESPacket; = Mpeg2Pes(int, int, int, Java.Nio.ByteBuffer, long)
  parseDescriptors(Ljava/nio/ByteBuffer;)Ljava/util/List; = ParseDescriptors(Java.Nio.ByteBuffer)
  psMarker(I)Z = PsMarker(int)
  readPESHeader(Ljava/nio/ByteBuffer;J)Lorg/jcodec/containers/mps/MPSDemuxer$PESPacket; = ReadPESHeader(Java.Nio.ByteBuffer, long)
  readTs(Ljava/nio/ByteBuffer;)J = ReadTs(Java.Nio.ByteBuffer)
  readTs(Ljava/nio/ByteBuffer;I)J = ReadTs(Java.Nio.ByteBuffer, int)
  videoMarker(I)Z = VideoMarker(int)
  videoStream(I)Z = VideoStream(int)
  writeTs(Ljava/nio/ByteBuffer;J)V = WriteTs(Java.Nio.ByteBuffer, long)
org/jcodec/containers/mps/MTSDemuxer = Org.Jcodec.Containers.Mps.MTSDemuxer
  getPrograms(Ljava/io/File;)Ljava/util/Set; = GetPrograms(Java.IO.File)
  parsePacket(Ljava/nio/ByteBuffer;)Lorg/jcodec/containers/mps/MTSDemuxer$MTSPacket; = ParsePacket(Java.Nio.ByteBuffer)
  probe(Ljava/nio/ByteBuffer;)I = Probe(Java.Nio.ByteBuffer)
  readPacket(Ljava/nio/channels/ReadableByteChannel;)Lorg/jcodec/containers/mps/MTSDemuxer$MTSPacket; = ReadPacket(Java.Nio.Channels.IReadableByteChannel)
  seekByte(J)V = SeekByte(long)
org/jcodec/containers/mps/MTSDump = Org.Jcodec.Containers.Mps.MTSDump
  <init>(Ljava/nio/channels/ReadableByteChannel;I)V = .ctor(Java.Nio.Channels.IReadableByteChannel, int)
  fillBuffer(Ljava/nio/ByteBuffer;)I = FillBuffer(Java.Nio.ByteBuffer)
  main([Ljava/lang/String;)V = Main(string[])
org/jcodec/containers/mps/MTSUtils = Org.Jcodec.Containers.Mps.MTSUtils
  <init>()V = .ctor()
  getAudioPid(Ljava/io/File;)I = GetAudioPid(Java.IO.File)
  getMediaPids(Ljava/io/File;)[I = GetMediaPids(Java.IO.File)
  getProgramGuids(Ljava/io/File;)[Lorg/jcodec/containers/mps/psi/PMTSection$PMTStream; = GetProgramGuids(Java.IO.File)
  getVideoPid(Ljava/io/File;)I = GetVideoPid(Java.IO.File)
  parsePAT(Ljava/nio/ByteBuffer;)I = ParsePAT(Java.Nio.ByteBuffer)
  parsePMT(Ljava/nio/ByteBuffer;)Lorg/jcodec/containers/mps/psi/PMTSection; = ParsePMT(Java.Nio.ByteBuffer)
  parseSection(Ljava/nio/ByteBuffer;)Lorg/jcodec/containers/mps/psi/PSISection; = ParseSection(Java.Nio.ByteBuffer)
org/jcodec/containers/mps/psi/PATSection = Org.Jcodec.Containers.Mps.Psi.PATSection
  getNetworkPids()[I = GetNetworkPids()
  parse(Ljava/nio/ByteBuffer;)Lorg/jcodec/containers/mps/psi/PATSection; = Parse(Java.Nio.ByteBuffer)
org/jcodec/containers/mps/psi/PMTSection = Org.Jcodec.Containers.Mps.Psi.PMTSection
  <init>(Lorg/jcodec/containers/mps/psi/PSISection;I[Lorg/jcodec/containers/mps/psi/PMTSection$Tag;[Lorg/jcodec/containers/mps/psi/PMTSection$PMTStream;)V = .ctor(Org.Jcodec.Containers.Mps.Psi.PSISection, int, Org.Jcodec.Containers.Mps.Psi.PMTSection.Tag[], Org.Jcodec.Containers.Mps.Psi.PMTSection.PMTStream[])
  getPcrPid()I = PcrPid
  getStreams()[Lorg/jcodec/containers/mps/psi/PMTSection$PMTStream; = GetStreams()
  getTags()[Lorg/jcodec/containers/mps/psi/PMTSection$Tag; = GetTags()
  parse(Ljava/nio/ByteBuffer;)Lorg/jcodec/containers/mps/psi/PMTSection; = Parse(Java.Nio.ByteBuffer)
org/jcodec/containers/mps/psi/PSISection = Org.Jcodec.Containers.Mps.Psi.PSISection
  <init>(IIIIII)V = .ctor(int, int, int, int, int, int)
  <init>(Lorg/jcodec/containers/mps/psi/PSISection;)V = .ctor(Org.Jcodec.Containers.Mps.Psi.PSISection)
  getCurrentNextIndicator()I = CurrentNextIndicator
  getLastSectionNumber()I = LastSectionNumber
  getSectionNumber()I = SectionNumber
  getSpecificId()I = SpecificId
  getTableId()I = TableId
  getVersionNumber()I = VersionNumber
  parse(Ljava/nio/ByteBuffer;)Lorg/jcodec/containers/mps/psi/PSISection; = Parse(Java.Nio.ByteBuffer)
org/jcodec/containers/mxf/model/AES3PCMDescriptor = Org.Jcodec.Containers.Mxf.Model.AES3PCMDescriptor
  <init>(Lorg/jcodec/containers/mxf/model/UL;)V = .ctor(Org.Jcodec.Containers.Mxf.Model.UL)
  getAuxBitsMode()B = AuxBitsMode
  getBlockStartOffset()S = BlockStartOffset
  getChannelStatusMode()Ljava/nio/ByteBuffer; = ChannelStatusMode
  getEmphasis()B = Emphasis
  getFixedChannelStatusData()Ljava/nio/ByteBuffer; = FixedChannelStatusData
  getFixedUserData()Ljava/nio/ByteBuffer; = FixedUserData
  getUserDataMode()Ljava/nio/ByteBuffer; = UserDataMode
org/jcodec/containers/mxf/model/BER = Org.Jcodec.Containers.Mxf.Model.BER
  <init>()V = .ctor()
  ASN_LONG_LEN = AsnLongLen
  decodeLength(Ljava/nio/ByteBuffer;)J = DecodeLength(Java.Nio.ByteBuffer)
org/jcodec/containers/mxf/model/CDCIEssenceDescriptor = Org.Jcodec.Containers.Mxf.Model.CDCIEssenceDescriptor
  <init>(Lorg/jcodec/containers/mxf/model/UL;)V = .ctor(Org.Jcodec.Containers.Mxf.Model.UL)
  getAlphaSampleDepth()I = AlphaSampleDepth
  getBlackRefLevel()I = BlackRefLevel
  getColorRange()I = ColorRange
  getColorSiting()B = ColorSiting
  getComponentDepth()I = ComponentDepth
  getHorizontalSubsampling()I = HorizontalSubsampling
  getPaddingBits()S = PaddingBits
  getReversedByteOrder()B = ReversedByteOrder
  getVerticalSubsampling()I = VerticalSubsampling
  getWhiteReflevel()I = WhiteReflevel
org/jcodec/containers/mxf/model/ContentStorage = Org.Jcodec.Containers.Mxf.Model.ContentStorage
  <init>(Lorg/jcodec/containers/mxf/model/UL;)V = .ctor(Org.Jcodec.Containers.Mxf.Model.UL)
  getEssenceContainerData()[Lorg/jcodec/containers/mxf/model/UL; = GetEssenceContainerData()
  getPackageRefs()[Lorg/jcodec/containers/mxf/model/UL; = GetPackageRefs()
  read(Ljava/util/Map;)V = Read(System.Collections.Generic.IDictionary<Java.Lang.Integer, Java.Nio.ByteBuffer>)
org/jcodec/containers/mxf/model/DeltaEntries = Org.Jcodec.Containers.Mxf.Model.DeltaEntries
  <init>([B[B[I)V = .ctor(byte[], byte[], int[])
  read(Ljava/nio/ByteBuffer;)Lorg/jcodec/containers/mxf/model/DeltaEntries; = Read(Java.Nio.ByteBuffer)
org/jcodec/containers/mxf/model/EssenceContainerData = Org.Jcodec.Containers.Mxf.Model.EssenceContainerData
  <init>(Lorg/jcodec/containers/mxf/model/UL;)V = .ctor(Org.Jcodec.Containers.Mxf.Model.UL)
  getBodySID()I = BodySID
  getIndexSID()I = IndexSID
  getLinkedPackageUID()Lorg/jcodec/containers/mxf/model/UL; = LinkedPackageUID
  read(Ljava/util/Map;)V = Read(System.Collections.Generic.IDictionary<Java.Lang.Integer, Java.Nio.ByteBuffer>)
org/jcodec/containers/mxf/model/FileDescriptor = Org.Jcodec.Containers.Mxf.Model.FileDescriptor
  <init>(Lorg/jcodec/containers/mxf/model/UL;)V = .ctor(Org.Jcodec.Containers.Mxf.Model.UL)
  getCodec()Lorg/jcodec/containers/mxf/model/UL; = Codec
  getContainerDuration()J = ContainerDuration
  getEssenceContainer()Lorg/jcodec/containers/mxf/model/UL; = EssenceContainer
  getLinkedTrackId()I = LinkedTrackId
  getSampleRate()Lorg/jcodec/common/model/Rational; = SampleRate
org/jcodec/containers/mxf/model/GenericDataEssenceDescriptor = Org.Jcodec.Containers.Mxf.Model.GenericDataEssenceDescriptor
  <init>(Lorg/jcodec/containers/mxf/model/UL;)V = .ctor(Org.Jcodec.Containers.Mxf.Model.UL)
  getDataEssenceCoding()Lorg/jcodec/containers/mxf/model/UL; = DataEssenceCoding
org/jcodec/containers/mxf/model/GenericDescriptor = Org.Jcodec.Containers.Mxf.Model.GenericDescriptor
  <init>(Lorg/jcodec/containers/mxf/model/UL;)V = .ctor(Org.Jcodec.Containers.Mxf.Model.UL)
  getLocators()[Lorg/jcodec/containers/mxf/model/UL; = GetLocators()
  getSubDescriptors()[Lorg/jcodec/containers/mxf/model/UL; = GetSubDescriptors()
  read(Ljava/util/Map;)V = Read(System.Collections.Generic.IDictionary<Java.Lang.Integer, Java.Nio.ByteBuffer>)
org/jcodec/containers/mxf/model/GenericPackage = Org.Jcodec.Containers.Mxf.Model.GenericPackage
  <init>(Lorg/jcodec/containers/mxf/model/UL;)V = .ctor(Org.Jcodec.Containers.Mxf.Model.UL)
  getName()Ljava/lang/String; = Name
  getPackageCreationDate()Ljava/util/Date; = PackageCreationDate
  getPackageModifiedDate()Ljava/util/Date; = PackageModifiedDate
  getPackageUID()Lorg/jcodec/containers/mxf/model/UL; = PackageUID
  getTracks()[Lorg/jcodec/containers/mxf/model/UL; = GetTracks()
  read(Ljava/util/Map;)V = Read(System.Collections.Generic.IDictionary<Java.Lang.Integer, Java.Nio.ByteBuffer>)
org/jcodec/containers/mxf/model/GenericPictureEssenceDescriptor = Org.Jcodec.Containers.Mxf.Model.GenericPictureEssenceDescriptor
  <init>(Lorg/jcodec/containers/mxf/model/UL;)V = .ctor(Org.Jcodec.Containers.Mxf.Model.UL)
  getActiveFormatDescriptor()B = ActiveFormatDescriptor
  getAlphaTransparency()B = AlphaTransparency
  getAspectRatio()Lorg/jcodec/common/model/Rational; = AspectRatio
  getCodingEquations()Lorg/jcodec/containers/mxf/model/UL; = CodingEquations
  getColorPrimaries()Lorg/jcodec/containers/mxf/model/UL; = ColorPrimaries
  getDisplayF2Offset()I = DisplayF2Offset
  getDisplayHeight()I = DisplayHeight
  getDisplayWidth()I = DisplayWidth
  getDisplayXOffset()I = DisplayXOffset
  getDisplayYOffset()I = DisplayYOffset
  getFieldDominance()B = FieldDominance
  getFrameLayout()Lorg/jcodec/containers/mxf/model/GenericPictureEssenceDescriptor$LayoutType; = FrameLayout
  getImageAlignmentOffset()I = ImageAlignmentOffset
  getImageEndOffset()I = ImageEndOffset
  getImageStartOffset()I = ImageStartOffset
  getPictureEssenceCoding()Lorg/jcodec/containers/mxf/model/UL; = PictureEssenceCoding
  getSampledHeight()I = SampledHeight
  getSampledWidth()I = SampledWidth
  getSampledXOffset()I = SampledXOffset
  getSampledYOffset()I = SampledYOffset
  getSignalStandard()B = SignalStandard
  getStoredF2Offset()I = StoredF2Offset
  getStoredHeight()I = StoredHeight
  getStoredWidth()I = StoredWidth
  getTransferCharacteristic()Lorg/jcodec/containers/mxf/model/UL; = TransferCharacteristic
  getVideoLineMap()[I = GetVideoLineMap()
org/jcodec/containers/mxf/model/GenericSoundEssenceDescriptor = Org.Jcodec.Containers.Mxf.Model.GenericSoundEssenceDescriptor
  <init>(Lorg/jcodec/containers/mxf/model/UL;)V = .ctor(Org.Jcodec.Containers.Mxf.Model.UL)
  getAudioRefLevel()B = AudioRefLevel
  getAudioSamplingRate()Lorg/jcodec/common/model/Rational; = AudioSamplingRate
  getChannelCount()I = ChannelCount
  getDialNorm()B = DialNorm
  getElectroSpatialFormulation()B = ElectroSpatialFormulation
  getLocked()B = Locked
  getQuantizationBits()I = QuantizationBits
  getSoundEssenceCompression()Lorg/jcodec/containers/mxf/model/UL; = SoundEssenceCompression
org/jcodec/containers/mxf/model/GenericTrack = Org.Jcodec.Containers.Mxf.Model.GenericTrack
  <init>(Lorg/jcodec/containers/mxf/model/UL;)V = .ctor(Org.Jcodec.Containers.Mxf.Model.UL)
  getName()Ljava/lang/String; = Name
  getSequenceRef()Lorg/jcodec/containers/mxf/model/UL; = SequenceRef
  getTrackId()I = TrackId
  getTrackNumber()I = TrackNumber
  read(Ljava/util/Map;)V = Read(System.Collections.Generic.IDictionary<Java.Lang.Integer, Java.Nio.ByteBuffer>)
org/jcodec/containers/mxf/model/Identification = Org.Jcodec.Containers.Mxf.Model.Identification
  <init>(Lorg/jcodec/containers/mxf/model/UL;)V = .ctor(Org.Jcodec.Containers.Mxf.Model.UL)
  getCompanyName()Ljava/lang/String; = CompanyName
  getModificationDate()Ljava/util/Date; = ModificationDate
  getPlatform()Ljava/lang/String; = Platform
  getProductName()Ljava/lang/String; = ProductName
  getProductUID()Lorg/jcodec/containers/mxf/model/UL; = ProductUID
  getThisGenerationUID()Lorg/jcodec/containers/mxf/model/UL; = ThisGenerationUID
  getVersionString()S = VersionString
  read(Ljava/util/Map;)V = Read(System.Collections.Generic.IDictionary<Java.Lang.Integer, Java.Nio.ByteBuffer>)
org/jcodec/containers/mxf/model/IndexEntries = Org.Jcodec.Containers.Mxf.Model.IndexEntries
  <init>([B[B[B[J)V = .ctor(byte[], byte[], byte[], long[])
  getDisplayOff()[B = GetDisplayOff()
  getFileOff()[J = GetFileOff()
  getFlags()[B = GetFlags()
  getKeyFrameOff()[B = GetKeyFrameOff()
  read(Ljava/nio/ByteBuffer;)Lorg/jcodec/containers/mxf/model/IndexEntries; = Read(Java.Nio.ByteBuffer)
org/jcodec/containers/mxf/model/IndexSegment = Org.Jcodec.Containers.Mxf.Model.IndexSegment
  <init>(Lorg/jcodec/containers/mxf/model/UL;)V = .ctor(Org.Jcodec.Containers.Mxf.Model.UL)
  getBodySID()I = BodySID
  getDeltaEntries()Lorg/jcodec/containers/mxf/model/DeltaEntries; = DeltaEntries
  getEditUnitByteCount()I = EditUnitByteCount
  getIe()Lorg/jcodec/containers/mxf/model/IndexEntries; = Ie
  getIndexDuration()J = IndexDuration
  getIndexEditRateDen()I = IndexEditRateDen
  getIndexEditRateNum()I = IndexEditRateNum
  getIndexSID()I = IndexSID
  getIndexStartPosition()J = IndexStartPosition
  getInstanceUID()Lorg/jcodec/containers/mxf/model/UL; = InstanceUID
  getPosTableCount()I = PosTableCount
  getSliceCount()I = SliceCount
  read(Ljava/util/Map;)V = Read(System.Collections.Generic.IDictionary<Java.Lang.Integer, Java.Nio.ByteBuffer>)
org/jcodec/containers/mxf/model/J2KPictureDescriptor = Org.Jcodec.Containers.Mxf.Model.J2KPictureDescriptor
  <init>(Lorg/jcodec/containers/mxf/model/UL;)V = .ctor(Org.Jcodec.Containers.Mxf.Model.UL)
  getCsiz()S = Csiz
  getRsiz()S = Rsiz
  getXsiz()I = Xsiz
  getYsiz()I = Ysiz
  getxOsiz()I = GetxOsiz()
  getxTOsiz()I = GetxTOsiz()
  getxTsiz()I = GetxTsiz()
  getyOsiz()I = GetyOsiz()
  getyTOsiz()I = GetyTOsiz()
  getyTsiz()I = GetyTsiz()
  read(Ljava/util/Map;)V = Read(System.Collections.Generic.IDictionary<Java.Lang.Integer, Java.Nio.ByteBuffer>)
org/jcodec/containers/mxf/model/KLV = Org.Jcodec.Containers.Mxf.Model.KLV
  <init>(Lorg/jcodec/containers/mxf/model/UL;JJJ)V = .ctor(Org.Jcodec.Containers.Mxf.Model.UL, long, long, long)
  dataOffset = DataOffset
  key = Key
  len = Len
  offset = Offset
  getLenByteCount()I = LenByteCount
  matches([B[BI)Z = Matches(byte[], byte[], int)
  readKL(Ljava/nio/ByteBuffer;J)Lorg/jcodec/containers/mxf/model/KLV; = ReadKL(Java.Nio.ByteBuffer, long)
org/jcodec/containers/mxf/model/MaterialPackage = Org.Jcodec.Containers.Mxf.Model.MaterialPackage
  <init>(Lorg/jcodec/containers/mxf/model/UL;)V = .ctor(Org.Jcodec.Containers.Mxf.Model.UL)
org/jcodec/containers/mxf/model/MPEG2VideoDescriptor = Org.Jcodec.Containers.Mxf.Model.MPEG2VideoDescriptor
  <init>(Lorg/jcodec/containers/mxf/model/UL;)V = .ctor(Org.Jcodec.Containers.Mxf.Model.UL)
  getBitRate()I = BitRate
  getClosedGOP()B = ClosedGOP
  getCodedContentType()B = CodedContentType
  getConstantBFrames()B = ConstantBFrames
  getIdenticalGOP()B = IdenticalGOP
  getLowDelay()B = LowDelay
  getMaxGOP()S = MaxGOP
  getProfileAndLevel()B = ProfileAndLevel
  getSingleSequence()B = SingleSequence
  getbPictureCount()S = GetbPictureCount()
org/jcodec/containers/mxf/model/MXFInterchangeObject = Org.Jcodec.Containers.Mxf.Model.MXFInterchangeObject
  <init>(Lorg/jcodec/containers/mxf/model/UL;)V = .ctor(Org.Jcodec.Containers.Mxf.Model.UL)
  getGenerationUID()Lorg/jcodec/containers/mxf/model/UL; = GenerationUID
  getObjectClass()Lorg/jcodec/containers/mxf/model/UL; = ObjectClass
  read(Ljava/nio/ByteBuffer;)V = Read(Java.Nio.ByteBuffer)
  read(Ljava/util/Map;)V = Read(System.Collections.Generic.IDictionary<Java.Lang.Integer, Java.Nio.ByteBuffer>)
org/jcodec/containers/mxf/model/MXFMetadata = Org.Jcodec.Containers.Mxf.Model.MXFMetadata
  <init>(Lorg/jcodec/containers/mxf/model/UL;)V = .ctor(Org.Jcodec.Containers.Mxf.Model.UL)
  uid = Uid
  ul = Ul
  getUid()Lorg/jcodec/containers/mxf/model/UL; = Uid
  getUl()Lorg/jcodec/containers/mxf/model/UL; = Ul
  read(Ljava/nio/ByteBuffer;)V = Read(Java.Nio.ByteBuffer)
  readDate(Ljava/nio/ByteBuffer;)Ljava/util/Date; = ReadDate(Java.Nio.ByteBuffer)
  readInt32Batch(Ljava/nio/ByteBuffer;)[I = ReadInt32Batch(Java.Nio.ByteBuffer)
  readULBatch(Ljava/nio/ByteBuffer;)[Lorg/jcodec/containers/mxf/model/UL; = ReadULBatch(Java.Nio.ByteBuffer)
  readUtf16String(Ljava/nio/ByteBuffer;)Ljava/lang/String; = ReadUtf16String(Java.Nio.ByteBuffer)
org/jcodec/containers/mxf/model/MXFPartition = Org.Jcodec.Containers.Mxf.Model.MXFPartition
  <init>(Lorg/jcodec/containers/mxf/model/MXFPartitionPack;JZZJ)V = .ctor(Org.Jcodec.Containers.Mxf.Model.MXFPartitionPack, long, bool, bool, long)
  getEssenceFilePos()J = EssenceFilePos
  getEssenceLength()J = EssenceLength
  isClosed()Z = IsClosed
  isComplete()Z = IsComplete
  getPack()Lorg/jcodec/containers/mxf/model/MXFPartitionPack; = Pack
  read(Lorg/jcodec/containers/mxf/model/UL;Ljava/nio/ByteBuffer;JJ)Lorg/jcodec/containers/mxf/model/MXFPartition; = Read(Org.Jcodec.Containers.Mxf.Model.UL, Java.Nio.ByteBuffer, long, long)
org/jcodec/containers/mxf/model/MXFPartitionPack = Org.Jcodec.Containers.Mxf.Model.MXFPartitionPack
  <init>(Lorg/jcodec/containers/mxf/model/UL;)V = .ctor(Org.Jcodec.Containers.Mxf.Model.UL)
  getBodySid()I = BodySid
  getFooterPartition()J = FooterPartition
  getHeaderByteCount()J = HeaderByteCount
  getIndexByteCount()J = IndexByteCount
  getIndexSid()I = IndexSid
  getKagSize()I = KagSize
  getNbEssenceContainers()I = NbEssenceContainers
  getOp()Lorg/jcodec/containers/mxf/model/UL; = Op
  getPrevPartition()J = PrevPartition
  getThisPartition()J = ThisPartition
  read(Ljava/nio/ByteBuffer;)V = Read(Java.Nio.ByteBuffer)
org/jcodec/containers/mxf/model/MXFStructuralComponent = Org.Jcodec.Containers.Mxf.Model.MXFStructuralComponent
  <init>(Lorg/jcodec/containers/mxf/model/UL;)V = .ctor(Org.Jcodec.Containers.Mxf.Model.UL)
  getDataDefinitionUL()Lorg/jcodec/containers/mxf/model/UL; = DataDefinitionUL
  getDuration()J = Duration
  read(Ljava/util/Map;)V = Read(System.Collections.Generic.IDictionary<Java.Lang.Integer, Java.Nio.ByteBuffer>)
org/jcodec/containers/mxf/model/MXFUtil = Org.Jcodec.Containers.Mxf.Model.MXFUtil
  <init>()V = .ctor()
  findAllMeta(Ljava/util/Collection;Ljava/lang/Class;)Ljava/util/List; = FindAllMeta(System.Collections.Generic.ICollection<Org.Jcodec.Containers.Mxf.Model.MXFMetadata>, Java.Lang.Class)
  findMeta(Ljava/util/Collection;Ljava/lang/Class;)Ljava/lang/Object; = FindMeta(System.Collections.Generic.ICollection<Org.Jcodec.Containers.Mxf.Model.MXFMetadata>, Java.Lang.Class)
  resolveRef(Ljava/util/List;Lorg/jcodec/containers/mxf/model/UL;Ljava/lang/Class;)Ljava/lang/Object; = ResolveRef(System.Collections.Generic.IList<Org.Jcodec.Containers.Mxf.Model.MXFMetadata>, Org.Jcodec.Containers.Mxf.Model.UL, Java.Lang.Class)
  resolveRefs(Ljava/util/List;[Lorg/jcodec/containers/mxf/model/UL;Ljava/lang/Class;)Ljava/util/List; = ResolveRefs(System.Collections.Generic.IList<Org.Jcodec.Containers.Mxf.Model.MXFMetadata>, Org.Jcodec.Containers.Mxf.Model.UL[], Java.Lang.Class)
org/jcodec/containers/mxf/model/Preface = Org.Jcodec.Containers.Mxf.Model.Preface
  <init>(Lorg/jcodec/containers/mxf/model/UL;)V = .ctor(Org.Jcodec.Containers.Mxf.Model.UL)
  getLastModifiedDate()Ljava/util/Date; = LastModifiedDate
  getObjectModelVersion()I = ObjectModelVersion
  getOp()Lorg/jcodec/containers/mxf/model/UL; = Op
  getDmSchemes()[Lorg/jcodec/containers/mxf/model/UL; = GetDmSchemes()
  getEssenceContainers()[Lorg/jcodec/containers/mxf/model/UL; = GetEssenceContainers()
  read(Ljava/util/Map;)V = Read(System.Collections.Generic.IDictionary<Java.Lang.Integer, Java.Nio.ByteBuffer>)
org/jcodec/containers/mxf/model/RGBAEssenceDescriptor = Org.Jcodec.Containers.Mxf.Model.RGBAEssenceDescriptor
  <init>(Lorg/jcodec/containers/mxf/model/UL;)V = .ctor(Org.Jcodec.Containers.Mxf.Model.UL)
  getAlphaMaxRef()I = AlphaMaxRef
  getAlphaMinRef()I = AlphaMinRef
  getComponentMaxRef()I = ComponentMaxRef
  getComponentMinRef()I = ComponentMinRef
  getPalette()Ljava/nio/ByteBuffer; = Palette
  getPaletteLayout()Ljava/nio/ByteBuffer; = PaletteLayout
  getPixelLayout()Ljava/nio/ByteBuffer; = PixelLayout
  getScanningDirection()B = ScanningDirection
org/jcodec/containers/mxf/model/Sequence = Org.Jcodec.Containers.Mxf.Model.Sequence
  <init>(Lorg/jcodec/containers/mxf/model/UL;)V = .ctor(Org.Jcodec.Containers.Mxf.Model.UL)
  getStructuralComponentsRefs()[Lorg/jcodec/containers/mxf/model/UL; = GetStructuralComponentsRefs()
org/jcodec/containers/mxf/model/SourceClip = Org.Jcodec.Containers.Mxf.Model.SourceClip
  <init>(Lorg/jcodec/containers/mxf/model/UL;)V = .ctor(Org.Jcodec.Containers.Mxf.Model.UL)
  getSourcePackageUid()Lorg/jcodec/containers/mxf/model/UL; = SourcePackageUid
  getSourceTrackId()I = SourceTrackId
  getStartPosition()J = StartPosition
org/jcodec/containers/mxf/model/SourcePackage = Org.Jcodec.Containers.Mxf.Model.SourcePackage
  <init>(Lorg/jcodec/containers/mxf/model/UL;)V = .ctor(Org.Jcodec.Containers.Mxf.Model.UL)
  getDescriptorRef()Lorg/jcodec/containers/mxf/model/UL; = DescriptorRef
  getPackageUid()Lorg/jcodec/containers/mxf/model/UL; = PackageUid
  getTrackRefs()[Lorg/jcodec/containers/mxf/model/UL; = GetTrackRefs()
org/jcodec/containers/mxf/model/TimecodeComponent = Org.Jcodec.Containers.Mxf.Model.TimecodeComponent
  <init>(Lorg/jcodec/containers/mxf/model/UL;)V = .ctor(Org.Jcodec.Containers.Mxf.Model.UL)
  getBase()I = Base
  getDropFrame()I = DropFrame
  getStart()J = Start
org/jcodec/containers/mxf/model/TimelineTrack = Org.Jcodec.Containers.Mxf.Model.TimelineTrack
  <init>(Lorg/jcodec/containers/mxf/model/UL;)V = .ctor(Org.Jcodec.Containers.Mxf.Model.UL)
  getEditRate()Lorg/jcodec/common/model/Rational; = EditRate
  getOrigin()J = Origin
org/jcodec/containers/mxf/model/UL = Org.Jcodec.Containers.Mxf.Model.UL
  <init>([B)V = .ctor(params byte[])
  <init>([I)V = .ctor(params int[])
  equals(Lorg/jcodec/containers/mxf/model/UL;I)Z = Equals(Org.Jcodec.Containers.Mxf.Model.UL, int)
  get(I)I = Get(int)
  read(Ljava/nio/ByteBuffer;)Lorg/jcodec/containers/mxf/model/UL; = Read(Java.Nio.ByteBuffer)
org/jcodec/containers/mxf/model/WaveAudioDescriptor = Org.Jcodec.Containers.Mxf.Model.WaveAudioDescriptor
  <init>(Lorg/jcodec/containers/mxf/model/UL;)V = .ctor(Org.Jcodec.Containers.Mxf.Model.UL)
  getAvgBps()I = AvgBps
  getBlockAlign()S = BlockAlign
  getChannelAssignment()Lorg/jcodec/containers/mxf/model/UL; = ChannelAssignment
  getPeakChannels()I = PeakChannels
  getPeakEnvelopeBlockSize()I = PeakEnvelopeBlockSize
  getPeakEnvelopeData()Ljava/nio/ByteBuffer; = PeakEnvelopeData
  getPeakEnvelopeFormat()I = PeakEnvelopeFormat
  getPeakEnvelopeTimestamp()Ljava/nio/ByteBuffer; = PeakEnvelopeTimestamp
  getPeakEnvelopeVersion()I = PeakEnvelopeVersion
  getPeakFrames()I = PeakFrames
  getPeakOfPeaksPosition()Ljava/nio/ByteBuffer; = PeakOfPeaksPosition
  getPointsPerPeakValue()I = PointsPerPeakValue
  getSequenceOffset()B = SequenceOffset
org/jcodec/containers/mxf/MXFConst = Org.Jcodec.Containers.Mxf.MXFConst
  <init>()V = .ctor()
  GENERIC_DESCRIPTOR_KLV = GenericDescriptorKlv
  HEADER_PARTITION_KLV = HeaderPartitionKlv
  INDEX_KLV = IndexKlv
  klMetadataMapping = KlMetadataMapping
org/jcodec/containers/mxf/MXFDemuxer = Org.Jcodec.Containers.Mxf.MXFDemuxer
  duration = Duration
  header = Header
  indexSegments = IndexSegments
  metadata = Metadata
  partitions = Partitions
  timecode = Timecode
  totalFrames = TotalFrames
  tracks = Tracks
  getEssencePartitions()Ljava/util/List; = EssencePartitions
  getIndexes()Ljava/util/List; = Indexes
  getOp()Lorg/jcodec/containers/mxf/MXFDemuxer$OP; = Op
  getTimecode()Lorg/jcodec/containers/mxf/model/TimecodeComponent; = Timecode
  getVideoTrack()Lorg/jcodec/containers/mxf/MXFDemuxer$MXFDemuxerTrack; = VideoTrack
  createTrack(Lorg/jcodec/containers/mxf/model/UL;Lorg/jcodec/containers/mxf/model/TimelineTrack;Lorg/jcodec/containers/mxf/model/GenericDescriptor;)Lorg/jcodec/containers/mxf/MXFDemuxer$MXFDemuxerTrack; = CreateTrack(Org.Jcodec.Containers.Mxf.Model.UL, Org.Jcodec.Containers.Mxf.Model.TimelineTrack, Org.Jcodec.Containers.Mxf.Model.GenericDescriptor)
  findDescriptor(Ljava/util/List;I)Lorg/jcodec/containers/mxf/model/FileDescriptor; = FindDescriptor(System.Collections.Generic.IList<Org.Jcodec.Containers.Mxf.Model.FileDescriptor>, int)
  getAudioTracks()[Lorg/jcodec/containers/mxf/MXFDemuxer$MXFDemuxerTrack; = GetAudioTracks()
  getTracks()[Lorg/jcodec/containers/mxf/MXFDemuxer$MXFDemuxerTrack; = GetTracks()
org/jcodec/containers/mxf/streaming/MXFVirtualTrack = Org.Jcodec.Containers.Mxf.Streaming.MXFVirtualTrack
  getPreferredTimescale()I = PreferredTimescale
  getTrackId()I = TrackId
  close()V = Close()
org/jcodec/filters/color/CVTColorFilter = Org.Jcodec.Filters.Color.CVTColorFilter
  <init>()V = .ctor()
  yuv42210BitTObgr24(Lorg/jcodec/common/model/Picture;Ljava/nio/ByteBuffer;)V = Yuv42210BitTObgr24(Org.Jcodec.Common.Model.Picture, Java.Nio.ByteBuffer)
org/jcodec/movtool/ChangeTimescale = Org.Jcodec.Movtool.ChangeTimescale
  <init>()V = .ctor()
  main([Ljava/lang/String;)V = Main(string[])
org/jcodec/movtool/CompoundMP4Edit = Org.Jcodec.Movtool.CompoundMP4Edit
org/jcodec/movtool/Cut = Org.Jcodec.Movtool.Cut
  <init>()V = .ctor()
  main([Ljava/lang/String;)V = Main(string[])
org/jcodec/movtool/Flattern = Org.Jcodec.Movtool.Flattern
  <init>()V = .ctor()
  listeners = Listeners
  addProgressListener(Lorg/jcodec/movtool/Flattern$ProgressListener;)V = AddProgressListener(Org.Jcodec.Movtool.Flattern.IProgressListener)
  main([Ljava/lang/String;)V = Main(string[])
org/jcodec/movtool/InplaceMP4Editor = Org.Jcodec.Movtool.InplaceMP4Editor
  <init>()V = .ctor()
org/jcodec/movtool/MovDump = Org.Jcodec.Movtool.MovDump
  <init>()V = .ctor()
  main([Ljava/lang/String;)V = Main(string[])
  print(Ljava/io/File;)Ljava/lang/String; = Print(Java.IO.File)
  print(Ljava/io/File;Ljava/lang/String;)Ljava/lang/String; = Print(Java.IO.File, string)
org/jcodec/movtool/Paste = Org.Jcodec.Movtool.Paste
  <init>()V = .ctor()
  main([Ljava/lang/String;)V = Main(string[])
org/jcodec/movtool/QTEdit = Org.Jcodec.Movtool.QTEdit
  addProgressListener(Lorg/jcodec/movtool/Flattern$ProgressListener;)V = AddProgressListener(Org.Jcodec.Movtool.Flattern.IProgressListener)
  execute([Ljava/lang/String;)V = Execute(string[])
  help()V = Help()
org/jcodec/movtool/QTRefEdit = Org.Jcodec.Movtool.QTRefEdit
  execute([Ljava/lang/String;)V = Execute(string[])
  help()V = Help()
org/jcodec/movtool/ReExport = Org.Jcodec.Movtool.ReExport
  <init>()V = .ctor()
  main([Ljava/lang/String;)V = Main(string[])
org/jcodec/movtool/Remux = Org.Jcodec.Movtool.Remux
  <init>()V = .ctor()
  hidFile(Ljava/io/File;)Ljava/io/File; = HidFile(Java.IO.File)
  main1([Ljava/lang/String;)V = Main1(string[])
  processFrame(Lorg/jcodec/containers/mp4/MP4Packet;)Lorg/jcodec/containers/mp4/MP4Packet; = ProcessFrame(Org.Jcodec.Containers.Mp4.MP4Packet)
org/jcodec/movtool/ReplaceMP4Editor = Org.Jcodec.Movtool.ReplaceMP4Editor
  <init>()V = .ctor()
org/jcodec/movtool/SetPAR = Org.Jcodec.Movtool.SetPAR
  <init>()V = .ctor()
  main([Ljava/lang/String;)V = Main(string[])
org/jcodec/movtool/streaming/tracks/avc/AVCClipTrack = Org.Jcodec.Movtool.Streaming.Tracks.Avc.AVCClipTrack
org/jcodec/movtool/streaming/tracks/avc/AVCConcatTrack = Org.Jcodec.Movtool.Streaming.Tracks.Avc.AVCConcatTrack
  getPreferredTimescale()I = PreferredTimescale
  close()V = Close()
org/jcodec/movtool/streaming/tracks/CachingTrack = Org.Jcodec.Movtool.Streaming.Tracks.CachingTrack
  getPreferredTimescale()I = PreferredTimescale
  close()V = Close()
org/jcodec/movtool/streaming/tracks/ClipTrack = Org.Jcodec.Movtool.Streaming.Tracks.ClipTrack
  getPreferredTimescale()I = PreferredTimescale
  close()V = Close()
org/jcodec/movtool/streaming/tracks/ConcatPacket = Org.Jcodec.Movtool.Streaming.Tracks.ConcatPacket
  getData()Ljava/nio/ByteBuffer; = Data
  getDataLen()I = DataLen
  getDuration()D = Duration
  getFrameNo()I = FrameNo
  isKeyframe()Z = IsKeyframe
  getPts()D = Pts
org/jcodec/movtool/streaming/tracks/ConcatTrack = Org.Jcodec.Movtool.Streaming.Tracks.ConcatTrack
  getPreferredTimescale()I = PreferredTimescale
  close()V = Close()
org/jcodec/movtool/streaming/tracks/DownmixHelper = Org.Jcodec.Movtool.Streaming.Tracks.DownmixHelper
  clamp1f(F)F = Clamp1f(float)
  downmix([Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V = Downmix(Java.Nio.ByteBuffer[], Java.Nio.ByteBuffer)
org/jcodec/movtool/streaming/tracks/EditedFramesTrack = Org.Jcodec.Movtool.Streaming.Tracks.EditedFramesTrack
  getPreferredTimescale()I = PreferredTimescale
  close()V = Close()
org/jcodec/movtool/streaming/tracks/EditedPCMTrack = Org.Jcodec.Movtool.Streaming.Tracks.EditedPCMTrack
  getPreferredTimescale()I = PreferredTimescale
  close()V = Close()
org/jcodec/movtool/streaming/tracks/FilePool = Org.Jcodec.Movtool.Streaming.Tracks.FilePool
  <init>(Ljava/io/File;I)V = .ctor(Java.IO.File, int)
  close()V = Close()
org/jcodec/movtool/streaming/tracks/Jpeg2AVCTrack = Org.Jcodec.Movtool.Streaming.Tracks.Jpeg2AVCTrack
  selectScaleFactor(Lorg/jcodec/common/model/Size;)I = SelectScaleFactor(Org.Jcodec.Common.Model.Size)
org/jcodec/movtool/streaming/tracks/Mpeg2AVCTrack = Org.Jcodec.Movtool.Streaming.Tracks.Mpeg2AVCTrack
  TARGET_RATE = TargetRate
  getPreferredTimescale()I = PreferredTimescale
  close()V = Close()
  createTranscoder(I)Lorg/jcodec/movtool/streaming/tracks/MPEGToAVCTranscoder; = CreateTranscoder(int)
  getPicType(Ljava/nio/ByteBuffer;)I = GetPicType(Java.Nio.ByteBuffer)
  selectScaleFactor(Lorg/jcodec/common/model/Size;)I = SelectScaleFactor(Org.Jcodec.Common.Model.Size)
org/jcodec/movtool/streaming/tracks/MPEGToAVCTranscoder = Org.Jcodec.Movtool.Streaming.Tracks.MPEGToAVCTranscoder
  <init>(I)V = .ctor(int)
  transcodeFrame(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;ZI)Ljava/nio/ByteBuffer; = TranscodeFrame(Java.Nio.ByteBuffer, Java.Nio.ByteBuffer, bool, int)
org/jcodec/movtool/streaming/tracks/MPSTrackFactory = Org.Jcodec.Movtool.Streaming.Tracks.MPSTrackFactory
  <init>(Ljava/nio/ByteBuffer;Lorg/jcodec/movtool/streaming/tracks/FilePool;)V = .ctor(Java.Nio.ByteBuffer, Org.Jcodec.Movtool.Streaming.Tracks.FilePool)
  getAudioStreams()Ljava/util/List; = AudioStreams
  getStreams()Ljava/util/List; = Streams
  getVideoStreams()Ljava/util/List; = VideoStreams
  createStream(I)Lorg/jcodec/movtool/streaming/tracks/MPSTrackFactory$Stream; = CreateStream(int)
  main([Ljava/lang/String;)V = Main(string[])
  readIndex(Ljava/nio/ByteBuffer;)V = ReadIndex(Java.Nio.ByteBuffer)
org/jcodec/movtool/streaming/tracks/MTSTrackFactory = Org.Jcodec.Movtool.Streaming.Tracks.MTSTrackFactory
  <init>(Ljava/nio/ByteBuffer;Lorg/jcodec/movtool/streaming/tracks/FilePool;)V = .ctor(Java.Nio.ByteBuffer, Org.Jcodec.Movtool.Streaming.Tracks.FilePool)
  getAudioStreams()Ljava/util/List; = AudioStreams
  getStreams()Ljava/util/List; = Streams
  getVideoStreams()Ljava/util/List; = VideoStreams
  main([Ljava/lang/String;)V = Main(string[])
org/jcodec/movtool/streaming/tracks/PCMDVDTrack = Org.Jcodec.Movtool.Streaming.Tracks.PCMDVDTrack
  getPreferredTimescale()I = PreferredTimescale
  close()V = Close()
org/jcodec/movtool/streaming/tracks/PCMFlatternTrack = Org.Jcodec.Movtool.Streaming.Tracks.PCMFlatternTrack
  getPreferredTimescale()I = PreferredTimescale
  close()V = Close()
org/jcodec/movtool/streaming/tracks/Prores2AVCTrack = Org.Jcodec.Movtool.Streaming.Tracks.Prores2AVCTrack
  selectScaleFactor(Lorg/jcodec/common/model/Size;)I = SelectScaleFactor(Org.Jcodec.Common.Model.Size)
org/jcodec/movtool/streaming/tracks/Prores2VP8Track = Org.Jcodec.Movtool.Streaming.Tracks.Prores2VP8Track
  getCodecPrivate(Ljava/nio/ByteBuffer;Lorg/jcodec/common/model/Size;)V = GetCodecPrivate(Java.Nio.ByteBuffer, Org.Jcodec.Common.Model.Size)
  getFrameSize(II)I = GetFrameSize(int, int)
org/jcodec/movtool/streaming/tracks/RealTrack = Org.Jcodec.Movtool.Streaming.Tracks.RealTrack
  getPreferredTimescale()I = PreferredTimescale
  close()V = Close()
org/jcodec/movtool/streaming/tracks/SeekableByteChannelWrapper = Org.Jcodec.Movtool.Streaming.Tracks.SeekableByteChannelWrapper
  isOpen()Z = IsOpen
  close()V = Close()
  position()J = Position()
  read(Ljava/nio/ByteBuffer;)I = Read(Java.Nio.ByteBuffer)
  size()J = Size()
  write(Ljava/nio/ByteBuffer;)I = Write(Java.Nio.ByteBuffer)
org/jcodec/movtool/streaming/tracks/StereoDownmixTrack = Org.Jcodec.Movtool.Streaming.Tracks.StereoDownmixTrack
  getPreferredTimescale()I = PreferredTimescale
  bulkGetSolo()[[Z = BulkGetSolo()
  bulkSetSolo([[Z)V = BulkSetSolo(bool[][])
  close()V = Close()
  isChannelMute(II)Z = IsChannelMute(int, int)
  muteAll()V = MuteAll()
  soloAll()V = SoloAll()
  soloChannel(IIZ)V = SoloChannel(int, int, bool)
  soloTrack(IZ)V = SoloTrack(int, bool)
org/jcodec/movtool/streaming/tracks/ToAACTrack = Org.Jcodec.Movtool.Streaming.Tracks.ToAACTrack
  <init>()V = .ctor()
  getPreferredTimescale()I = PreferredTimescale
  close()V = Close()
org/jcodec/movtool/streaming/tracks/ToVorbisTrack = Org.Jcodec.Movtool.Streaming.Tracks.ToVorbisTrack
  <init>()V = .ctor()
  getPreferredTimescale()I = PreferredTimescale
  close()V = Close()
org/jcodec/movtool/streaming/tracks/Transcode2AVCTrack = Org.Jcodec.Movtool.Streaming.Tracks.Transcode2AVCTrack
  getPreferredTimescale()I = PreferredTimescale
  close()V = Close()
  selectScaleFactor(Lorg/jcodec/common/model/Size;)I = SelectScaleFactor(Org.Jcodec.Common.Model.Size)
org/jcodec/movtool/streaming/tracks/TranscodeTrack = Org.Jcodec.Movtool.Streaming.Tracks.TranscodeTrack
  getPreferredTimescale()I = PreferredTimescale
  close()V = Close()
  getCodecPrivate(Ljava/nio/ByteBuffer;Lorg/jcodec/common/model/Size;)V = GetCodecPrivate(Java.Nio.ByteBuffer, Org.Jcodec.Common.Model.Size)
  getFrameSize(II)I = GetFrameSize(int, int)
org/jcodec/movtool/streaming/tracks/VirtualPacketWrapper = Org.Jcodec.Movtool.Streaming.Tracks.VirtualPacketWrapper
  getData()Ljava/nio/ByteBuffer; = Data
  getDataLen()I = DataLen
  getDuration()D = Duration
  getFrameNo()I = FrameNo
  isKeyframe()Z = IsKeyframe
  getPts()D = Pts
org/jcodec/movtool/streaming/tracks/WavTrack = Org.Jcodec.Movtool.Streaming.Tracks.WavTrack
  FRAMES_PER_PKT = FramesPerPkt
  getPreferredTimescale()I = PreferredTimescale
  close()V = Close()
org/jcodec/movtool/Strip = Org.Jcodec.Movtool.Strip
  <init>()V = .ctor()
  main([Ljava/lang/String;)V = Main(string[])
org/jcodec/movtool/Undo = Org.Jcodec.Movtool.Undo
  <init>()V = .ctor()
  main([Ljava/lang/String;)V = Main(string[])
org/jcodec/movtool/Util = Org.Jcodec.Movtool.Util
  <init>()V = .ctor()
org/jcodec/movtool/WebOptimize = Org.Jcodec.Movtool.WebOptimize
  <init>()V = .ctor()
  main([Ljava/lang/String;)V = Main(string[])
org/jcodec/scale/ColorUtil = Org.Jcodec.Scale.ColorUtil
  <init>()V = .ctor()
  getTransform(Lorg/jcodec/common/model/ColorSpace;Lorg/jcodec/common/model/ColorSpace;)Lorg/jcodec/scale/Transform; = GetTransform(Org.Jcodec.Common.Model.ColorSpace, Org.Jcodec.Common.Model.ColorSpace)
org/jcodec/scale/ImageConvert = Org.Jcodec.Scale.ImageConvert
  <init>()V = .ctor()
  crop(I)B = Crop(int)
  icrop(I)I = Icrop(int)
  RGB888toU4(III)B = RGB888toU4(int, int, int)
  RGB888toV4(III)B = RGB888toV4(int, int, int)
  RGB888toY4(III)B = RGB888toY4(int, int, int)
  RGB888toYUV444(Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;Ljava/nio/ByteBuffer;)V = RGB888toYUV444(Java.Nio.ByteBuffer, Java.Nio.ByteBuffer, Java.Nio.ByteBuffer, Java.Nio.ByteBuffer)
  y_ccir_to_jpeg(B)B = Y_ccir_to_jpeg(sbyte)
  y_jpeg_to_ccir(B)B = Y_jpeg_to_ccir(sbyte)
  ycbcr_to_rgb24(III)I = Ycbcr_to_rgb24(int, int, int)
  YUV444toRGB888(IIILjava/nio/ByteBuffer;)V = YUV444toRGB888(int, int, int, Java.Nio.ByteBuffer)
org/jcodec/scale/RgbToYuv420j = Org.Jcodec.Scale.RgbToYuv420j
  <init>()V = .ctor()
  rgb2yuv(III[II[II[II)V = Rgb2yuv(int, int, int, int[], int, int[], int, int[], int)
  transform(Lorg/jcodec/common/model/Picture;Lorg/jcodec/common/model/Picture;)V = Transform(Org.Jcodec.Common.Model.Picture, Org.Jcodec.Common.Model.Picture)
org/jcodec/scale/RgbToYuv420p = Org.Jcodec.Scale.RgbToYuv420p
  <init>(II)V = .ctor(int, int)
  rgb2yuv(III[II[II[II)V = Rgb2yuv(int, int, int, int[], int, int[], int, int[], int)
  transform(Lorg/jcodec/common/model/Picture;Lorg/jcodec/common/model/Picture;)V = Transform(Org.Jcodec.Common.Model.Picture, Org.Jcodec.Common.Model.Picture)
org/jcodec/scale/RgbToYuv422p = Org.Jcodec.Scale.RgbToYuv422p
  <init>(II)V = .ctor(int, int)
  transform(Lorg/jcodec/common/model/Picture;Lorg/jcodec/common/model/Picture;)V = Transform(Org.Jcodec.Common.Model.Picture, Org.Jcodec.Common.Model.Picture)
org/jcodec/scale/Transform = Org.Jcodec.Scale.ITransform
  transform(Lorg/jcodec/common/model/Picture;Lorg/jcodec/common/model/Picture;)V = Transform(Org.Jcodec.Common.Model.Picture, Org.Jcodec.Common.Model.Picture)
org/jcodec/scale/Yuv420jToRgb = Org.Jcodec.Scale.Yuv420jToRgb
  <init>()V = .ctor()
  transform(Lorg/jcodec/common/model/Picture;Lorg/jcodec/common/model/Picture;)V = Transform(Org.Jcodec.Common.Model.Picture, Org.Jcodec.Common.Model.Picture)
  YUVJtoRGB(III[II)V = YUVJtoRGB(int, int, int, int[], int)
org/jcodec/scale/Yuv420jToYuv420 = Org.Jcodec.Scale.Yuv420jToYuv420
  <init>()V = .ctor()
  Y_COEFF = YCoeff
  transform(Lorg/jcodec/common/model/Picture;Lorg/jcodec/common/model/Picture;)V = Transform(Org.Jcodec.Common.Model.Picture, Org.Jcodec.Common.Model.Picture)
org/jcodec/scale/Yuv420pToRgb = Org.Jcodec.Scale.Yuv420pToRgb
  <init>(II)V = .ctor(int, int)
  transform(Lorg/jcodec/common/model/Picture;Lorg/jcodec/common/model/Picture;)V = Transform(Org.Jcodec.Common.Model.Picture, Org.Jcodec.Common.Model.Picture)
org/jcodec/scale/Yuv420pToYuv422p = Org.Jcodec.Scale.Yuv420pToYuv422p
  <init>(II)V = .ctor(int, int)
  transform(Lorg/jcodec/common/model/Picture;Lorg/jcodec/common/model/Picture;)V = Transform(Org.Jcodec.Common.Model.Picture, Org.Jcodec.Common.Model.Picture)
org/jcodec/scale/Yuv422jToRgb = Org.Jcodec.Scale.Yuv422jToRgb
  <init>()V = .ctor()
  transform(Lorg/jcodec/common/model/Picture;Lorg/jcodec/common/model/Picture;)V = Transform(Org.Jcodec.Common.Model.Picture, Org.Jcodec.Common.Model.Picture)
org/jcodec/scale/Yuv422jToYuv420p = Org.Jcodec.Scale.Yuv422jToYuv420p
  <init>()V = .ctor()
  Y_COEFF = YCoeff
  transform(Lorg/jcodec/common/model/Picture;Lorg/jcodec/common/model/Picture;)V = Transform(Org.Jcodec.Common.Model.Picture, Org.Jcodec.Common.Model.Picture)
org/jcodec/scale/Yuv422pToRgb = Org.Jcodec.Scale.Yuv422pToRgb
  <init>(II)V = .ctor(int, int)
  transform(Lorg/jcodec/common/model/Picture;Lorg/jcodec/common/model/Picture;)V = Transform(Org.Jcodec.Common.Model.Picture, Org.Jcodec.Common.Model.Picture)
  YUV444toRGB888(III[II)V = YUV444toRGB888(int, int, int, int[], int)
org/jcodec/scale/Yuv422pToYuv420j = Org.Jcodec.Scale.Yuv422pToYuv420j
  <init>(II)V = .ctor(int, int)
  COEFF = Coeff
  transform(Lorg/jcodec/common/model/Picture;Lorg/jcodec/common/model/Picture;)V = Transform(Org.Jcodec.Common.Model.Picture, Org.Jcodec.Common.Model.Picture)
org/jcodec/scale/Yuv422pToYuv420p = Org.Jcodec.Scale.Yuv422pToYuv420p
  <init>(II)V = .ctor(int, int)
  transform(Lorg/jcodec/common/model/Picture;Lorg/jcodec/common/model/Picture;)V = Transform(Org.Jcodec.Common.Model.Picture, Org.Jcodec.Common.Model.Picture)
org/jcodec/scale/Yuv444jToRgb = Org.Jcodec.Scale.Yuv444jToRgb
  <init>()V = .ctor()
  transform(Lorg/jcodec/common/model/Picture;Lorg/jcodec/common/model/Picture;)V = Transform(Org.Jcodec.Common.Model.Picture, Org.Jcodec.Common.Model.Picture)
org/jcodec/scale/Yuv444jToYuv420p = Org.Jcodec.Scale.Yuv444jToYuv420p
  <init>()V = .ctor()
  Y_COEFF = YCoeff
  transform(Lorg/jcodec/common/model/Picture;Lorg/jcodec/common/model/Picture;)V = Transform(Org.Jcodec.Common.Model.Picture, Org.Jcodec.Common.Model.Picture)
org/jcodec/scale/Yuv444pToRgb = Org.Jcodec.Scale.Yuv444pToRgb
  <init>(II)V = .ctor(int, int)
  transform(Lorg/jcodec/common/model/Picture;Lorg/jcodec/common/model/Picture;)V = Transform(Org.Jcodec.Common.Model.Picture, Org.Jcodec.Common.Model.Picture)
  YUV444toRGB888(III[II)V = YUV444toRGB888(int, int, int, int[], int)
org/jcodec/scale/Yuv444pToYuv420p = Org.Jcodec.Scale.Yuv444pToYuv420p
  <init>(II)V = .ctor(int, int)
  transform(Lorg/jcodec/common/model/Picture;Lorg/jcodec/common/model/Picture;)V = Transform(Org.Jcodec.Common.Model.Picture, Org.Jcodec.Common.Model.Picture)
org/jcodec/testing/TestTool = Org.Jcodec.Testing.TestTool
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
  main([Ljava/lang/String;)V = Main(string[])
org/jcodec/testing/VerifyTool = Org.Jcodec.Testing.VerifyTool
  <init>()V = .ctor()
  main([Ljava/lang/String;)V = Main(string[])
rx/android/BuildConfig = RX.Android.BuildConfig
  <init>()V = .ctor()
  APPLICATION_ID = ApplicationId
  BUILD_TYPE = BuildType
  DEBUG = Debug
  FLAVOR = Flavor
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
rx/android/MainThreadSubscription = RX.Android.MainThreadSubscription
  <init>()V = .ctor()
  isUnsubscribed()Z = IsUnsubscribed
  onUnsubscribe()V = OnUnsubscribe()
  unsubscribe()V = Unsubscribe()
  verifyMainThread()V = VerifyMainThread()
rx/android/plugins/RxAndroidPlugins = RX.Android.Plugins.RxAndroidPlugins
  getInstance()Lrx/android/plugins/RxAndroidPlugins; = Instance
  getSchedulersHook()Lrx/android/plugins/RxAndroidSchedulersHook; = SchedulersHook
  registerSchedulersHook(Lrx/android/plugins/RxAndroidSchedulersHook;)V = RegisterSchedulersHook(RX.Android.Plugins.RxAndroidSchedulersHook)
  reset()V = Reset()
rx/android/plugins/RxAndroidSchedulersHook = RX.Android.Plugins.RxAndroidSchedulersHook
  <init>()V = .ctor()
  getDefaultInstance()Lrx/android/plugins/RxAndroidSchedulersHook; = DefaultInstance
rx/android/schedulers/AndroidSchedulers = RX.Android.Schedulers.AndroidSchedulers
